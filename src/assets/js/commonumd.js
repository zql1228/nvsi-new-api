(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lottie-web'), require('echarts')) :
    typeof define === 'function' && define.amd ? define(['lottie-web', 'echarts'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.common = factory(global.lottie, global.echarts));
})(this, (function (lottie, echarts) { 'use strict';

    function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () { return e[k]; }
                    });
                }
            });
        }
        n["default"] = e;
        return Object.freeze(n);
    }

    var lottie__default = /*#__PURE__*/_interopDefaultLegacy(lottie);
    var echarts__namespace = /*#__PURE__*/_interopNamespace(echarts);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */

    var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };

    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    }

    var version = "0.0.1";
    var description = "Stencil Component Starter";
    var rem = 40;

    var header = "v-header";
    var page = "v-page";
    var section = "v-section";
    var footer = "v-footer";
    var button = "v-button";
    var pcss = {
    	header: header,
    	page: page,
    	section: section,
    	"section-content": "v-section-content",
    	footer: footer,
    	button: button
    };

    function toInteger(dirtyNumber) {
      if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {
        return NaN;
      }

      var number = Number(dirtyNumber);

      if (isNaN(number)) {
        return number;
      }

      return number < 0 ? Math.ceil(number) : Math.floor(number);
    }

    function requiredArgs(required, args) {
      if (args.length < required) {
        throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');
      }
    }

    /**
     * @name toDate
     * @category Common Helpers
     * @summary Convert the given argument to an instance of Date.
     *
     * @description
     * Convert the given argument to an instance of Date.
     *
     * If the argument is an instance of Date, the function returns its clone.
     *
     * If the argument is a number, it is treated as a timestamp.
     *
     * If the argument is none of the above, the function returns Invalid Date.
     *
     * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.
     *
     * @param {Date|Number} argument - the value to convert
     * @returns {Date} the parsed date in the local time zone
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Clone the date:
     * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))
     * //=> Tue Feb 11 2014 11:30:30
     *
     * @example
     * // Convert the timestamp to date:
     * const result = toDate(1392098430000)
     * //=> Tue Feb 11 2014 11:30:30
     */

    function toDate(argument) {
      requiredArgs(1, arguments);
      var argStr = Object.prototype.toString.call(argument); // Clone the date

      if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {
        // Prevent the date to lose the milliseconds when passed to new Date() in IE10
        return new Date(argument.getTime());
      } else if (typeof argument === 'number' || argStr === '[object Number]') {
        return new Date(argument);
      } else {
        if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {
          // eslint-disable-next-line no-console
          console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"); // eslint-disable-next-line no-console

          console.warn(new Error().stack);
        }

        return new Date(NaN);
      }
    }

    /**
     * @name addDays
     * @category Day Helpers
     * @summary Add the specified number of days to the given date.
     *
     * @description
     * Add the specified number of days to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} - the new date with the days added
     * @throws {TypeError} - 2 arguments required
     *
     * @example
     * // Add 10 days to 1 September 2014:
     * const result = addDays(new Date(2014, 8, 1), 10)
     * //=> Thu Sep 11 2014 00:00:00
     */

    function addDays(dirtyDate, dirtyAmount) {
      requiredArgs(2, arguments);
      var date = toDate(dirtyDate);
      var amount = toInteger(dirtyAmount);

      if (isNaN(amount)) {
        return new Date(NaN);
      }

      if (!amount) {
        // If 0 days, no-op to avoid changing times in the hour before end of DST
        return date;
      }

      date.setDate(date.getDate() + amount);
      return date;
    }

    /**
     * @name addMonths
     * @category Month Helpers
     * @summary Add the specified number of months to the given date.
     *
     * @description
     * Add the specified number of months to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the months added
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Add 5 months to 1 September 2014:
     * const result = addMonths(new Date(2014, 8, 1), 5)
     * //=> Sun Feb 01 2015 00:00:00
     */

    function addMonths(dirtyDate, dirtyAmount) {
      requiredArgs(2, arguments);
      var date = toDate(dirtyDate);
      var amount = toInteger(dirtyAmount);

      if (isNaN(amount)) {
        return new Date(NaN);
      }

      if (!amount) {
        // If 0 months, no-op to avoid changing times in the hour before end of DST
        return date;
      }

      var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for
      // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and
      // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we
      // want except that dates will wrap around the end of a month, meaning that
      // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So
      // we'll default to the end of the desired month by adding 1 to the desired
      // month and using a date of 0 to back up one day to the end of the desired
      // month.

      var endOfDesiredMonth = new Date(date.getTime());
      endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);
      var daysInMonth = endOfDesiredMonth.getDate();

      if (dayOfMonth >= daysInMonth) {
        // If we're already at the end of the month, then this is the correct date
        // and we're done.
        return endOfDesiredMonth;
      } else {
        // Otherwise, we now know that setting the original day-of-month value won't
        // cause an overflow, so set the desired day-of-month. Note that we can't
        // just set the date of `endOfDesiredMonth` because that object may have had
        // its time changed in the unusual case where where a DST transition was on
        // the last day of the month and its local time was in the hour skipped or
        // repeated next to a DST transition.  So we use `date` instead which is
        // guaranteed to still have the original time.
        date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);
        return date;
      }
    }

    /**
     * @name addMilliseconds
     * @category Millisecond Helpers
     * @summary Add the specified number of milliseconds to the given date.
     *
     * @description
     * Add the specified number of milliseconds to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the milliseconds added
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Add 750 milliseconds to 10 July 2014 12:45:30.000:
     * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
     * //=> Thu Jul 10 2014 12:45:30.750
     */

    function addMilliseconds(dirtyDate, dirtyAmount) {
      requiredArgs(2, arguments);
      var timestamp = toDate(dirtyDate).getTime();
      var amount = toInteger(dirtyAmount);
      return new Date(timestamp + amount);
    }

    /**
     * @name startOfWeek
     * @category Week Helpers
     * @summary Return the start of a week for the given date.
     *
     * @description
     * Return the start of a week for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @returns {Date} the start of a week
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     *
     * @example
     * // The start of a week for 2 September 2014 11:55:00:
     * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Sun Aug 31 2014 00:00:00
     *
     * @example
     * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:
     * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
     * //=> Mon Sep 01 2014 00:00:00
     */

    function startOfWeek(dirtyDate, dirtyOptions) {
      requiredArgs(1, arguments);
      var options = dirtyOptions || {};
      var locale = options.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);
      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
      }

      var date = toDate(dirtyDate);
      var day = date.getDay();
      var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
      date.setDate(date.getDate() - diff);
      date.setHours(0, 0, 0, 0);
      return date;
    }

    /**
     * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.
     * They usually appear for dates that denote time before the timezones were introduced
     * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891
     * and GMT+01:00:00 after that date)
     *
     * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,
     * which would lead to incorrect calculations.
     *
     * This function returns the timezone offset in milliseconds that takes seconds in account.
     */
    function getTimezoneOffsetInMilliseconds(date) {
      var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));
      utcDate.setUTCFullYear(date.getFullYear());
      return date.getTime() - utcDate.getTime();
    }

    /**
     * @name startOfDay
     * @category Day Helpers
     * @summary Return the start of a day for the given date.
     *
     * @description
     * Return the start of a day for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the start of a day
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The start of a day for 2 September 2014 11:55:00:
     * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Tue Sep 02 2014 00:00:00
     */

    function startOfDay(dirtyDate) {
      requiredArgs(1, arguments);
      var date = toDate(dirtyDate);
      date.setHours(0, 0, 0, 0);
      return date;
    }

    var MILLISECONDS_IN_DAY$1 = 86400000;
    /**
     * @name differenceInCalendarDays
     * @category Day Helpers
     * @summary Get the number of calendar days between the given dates.
     *
     * @description
     * Get the number of calendar days between the given dates. This means that the times are removed
     * from the dates and then the difference in days is calculated.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @returns {Number} the number of calendar days
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // How many calendar days are between
     * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
     * const result = differenceInCalendarDays(
     *   new Date(2012, 6, 2, 0, 0),
     *   new Date(2011, 6, 2, 23, 0)
     * )
     * //=> 366
     * // How many calendar days are between
     * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?
     * const result = differenceInCalendarDays(
     *   new Date(2011, 6, 3, 0, 1),
     *   new Date(2011, 6, 2, 23, 59)
     * )
     * //=> 1
     */

    function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {
      requiredArgs(2, arguments);
      var startOfDayLeft = startOfDay(dirtyDateLeft);
      var startOfDayRight = startOfDay(dirtyDateRight);
      var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);
      var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer
      // because the number of milliseconds in a day is not constant
      // (e.g. it's different in the day of the daylight saving time clock shift)

      return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY$1);
    }

    /**
     * @name addQuarters
     * @category Quarter Helpers
     * @summary Add the specified number of year quarters to the given date.
     *
     * @description
     * Add the specified number of year quarters to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of quarters to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the quarters added
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Add 1 quarter to 1 September 2014:
     * const result = addQuarters(new Date(2014, 8, 1), 1)
     * //=> Mon Dec 01 2014 00:00:00
     */

    function addQuarters(dirtyDate, dirtyAmount) {
      requiredArgs(2, arguments);
      var amount = toInteger(dirtyAmount);
      var months = amount * 3;
      return addMonths(dirtyDate, months);
    }

    /**
     * @name addWeeks
     * @category Week Helpers
     * @summary Add the specified number of weeks to the given date.
     *
     * @description
     * Add the specified number of week to the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the weeks added
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Add 4 weeks to 1 September 2014:
     * const result = addWeeks(new Date(2014, 8, 1), 4)
     * //=> Mon Sep 29 2014 00:00:00
     */

    function addWeeks(dirtyDate, dirtyAmount) {
      requiredArgs(2, arguments);
      var amount = toInteger(dirtyAmount);
      var days = amount * 7;
      return addDays(dirtyDate, days);
    }

    /**
     * @name max
     * @category Common Helpers
     * @summary Return the latest of the given dates.
     *
     * @description
     * Return the latest of the given dates.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - `max` function now accepts an array of dates rather than spread arguments.
     *
     *   ```javascript
     *   // Before v2.0.0
     *   var date1 = new Date(1989, 6, 10)
     *   var date2 = new Date(1987, 1, 11)
     *   var maxDate = max(date1, date2)
     *
     *   // v2.0.0 onward:
     *   var dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]
     *   var maxDate = max(dates)
     *   ```
     *
     * @param {Date[]|Number[]} datesArray - the dates to compare
     * @returns {Date} the latest of the dates
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Which of these dates is the latest?
     * var result = max([
     *   new Date(1989, 6, 10),
     *   new Date(1987, 1, 11),
     *   new Date(1995, 6, 2),
     *   new Date(1990, 0, 1)
     * ])
     * //=> Sun Jul 02 1995 00:00:00
     */

    function max(dirtyDatesArray) {
      requiredArgs(1, arguments);
      var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method

      if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {
        datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.
      } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {
        datesArray = Array.prototype.slice.call(dirtyDatesArray);
      } else {
        // `dirtyDatesArray` is non-iterable, return Invalid Date
        return new Date(NaN);
      }

      var result;
      datesArray.forEach(function (dirtyDate) {
        var currentDate = toDate(dirtyDate);

        if (result === undefined || result < currentDate || isNaN(Number(currentDate))) {
          result = currentDate;
        }
      });
      return result || new Date(NaN);
    }

    /**
     * @name min
     * @category Common Helpers
     * @summary Returns the earliest of the given dates.
     *
     * @description
     * Returns the earliest of the given dates.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - `min` function now accepts an array of dates rather than spread arguments.
     *
     *   ```javascript
     *   // Before v2.0.0
     *   const date1 = new Date(1989, 6, 10)
     *   const date2 = new Date(1987, 1, 11)
     *   const minDate = min(date1, date2)
     *
     *   // v2.0.0 onward:
     *   const dates = [new Date(1989, 6, 10), new Date(1987, 1, 11)]
     *   const minDate = min(dates)
     *   ```
     *
     * @param {Date[]|Number[]} datesArray - the dates to compare
     * @returns {Date} - the earliest of the dates
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Which of these dates is the earliest?
     * const result = min([
     *   new Date(1989, 6, 10),
     *   new Date(1987, 1, 11),
     *   new Date(1995, 6, 2),
     *   new Date(1990, 0, 1)
     * ])
     * //=> Wed Feb 11 1987 00:00:00
     */

    function min(dirtyDatesArray) {
      requiredArgs(1, arguments);
      var datesArray; // `dirtyDatesArray` is Array, Set or Map, or object with custom `forEach` method

      if (dirtyDatesArray && typeof dirtyDatesArray.forEach === 'function') {
        datesArray = dirtyDatesArray; // If `dirtyDatesArray` is Array-like Object, convert to Array.
      } else if (typeof dirtyDatesArray === 'object' && dirtyDatesArray !== null) {
        datesArray = Array.prototype.slice.call(dirtyDatesArray);
      } else {
        // `dirtyDatesArray` is non-iterable, return Invalid Date
        return new Date(NaN);
      }

      var result;
      datesArray.forEach(function (dirtyDate) {
        var currentDate = toDate(dirtyDate);

        if (result === undefined || result > currentDate || isNaN(currentDate.getDate())) {
          result = currentDate;
        }
      });
      return result || new Date(NaN);
    }

    /**
     * @name isDate
     * @category Common Helpers
     * @summary Is the given value a date?
     *
     * @description
     * Returns true if the given value is an instance of Date. The function works for dates transferred across iframes.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {*} value - the value to check
     * @returns {boolean} true if the given value is a date
     * @throws {TypeError} 1 arguments required
     *
     * @example
     * // For a valid date:
     * const result = isDate(new Date())
     * //=> true
     *
     * @example
     * // For an invalid date:
     * const result = isDate(new Date(NaN))
     * //=> true
     *
     * @example
     * // For some value:
     * const result = isDate('2014-02-31')
     * //=> false
     *
     * @example
     * // For an object:
     * const result = isDate({})
     * //=> false
     */

    function isDate(value) {
      requiredArgs(1, arguments);
      return value instanceof Date || typeof value === 'object' && Object.prototype.toString.call(value) === '[object Date]';
    }

    /**
     * @name isValid
     * @category Common Helpers
     * @summary Is the given date valid?
     *
     * @description
     * Returns false if argument is Invalid Date and true otherwise.
     * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}
     * Invalid Date is a Date, whose time value is NaN.
     *
     * Time value of Date: http://es5.github.io/#x15.9.1.1
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - Now `isValid` doesn't throw an exception
     *   if the first argument is not an instance of Date.
     *   Instead, argument is converted beforehand using `toDate`.
     *
     *   Examples:
     *
     *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |
     *   |---------------------------|---------------|---------------|
     *   | `new Date()`              | `true`        | `true`        |
     *   | `new Date('2016-01-01')`  | `true`        | `true`        |
     *   | `new Date('')`            | `false`       | `false`       |
     *   | `new Date(1488370835081)` | `true`        | `true`        |
     *   | `new Date(NaN)`           | `false`       | `false`       |
     *   | `'2016-01-01'`            | `TypeError`   | `false`       |
     *   | `''`                      | `TypeError`   | `false`       |
     *   | `1488370835081`           | `TypeError`   | `true`        |
     *   | `NaN`                     | `TypeError`   | `false`       |
     *
     *   We introduce this change to make *date-fns* consistent with ECMAScript behavior
     *   that try to coerce arguments to the expected type
     *   (which is also the case with other *date-fns* functions).
     *
     * @param {*} date - the date to check
     * @returns {Boolean} the date is valid
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // For the valid date:
     * const result = isValid(new Date(2014, 1, 31))
     * //=> true
     *
     * @example
     * // For the value, convertable into a date:
     * const result = isValid(1393804800000)
     * //=> true
     *
     * @example
     * // For the invalid date:
     * const result = isValid(new Date(''))
     * //=> false
     */

    function isValid(dirtyDate) {
      requiredArgs(1, arguments);

      if (!isDate(dirtyDate) && typeof dirtyDate !== 'number') {
        return false;
      }

      var date = toDate(dirtyDate);
      return !isNaN(Number(date));
    }

    // for accurate equality comparisons of UTC timestamps that end up
    // having the same representation in local time, e.g. one hour before
    // DST ends vs. the instant that DST ends.

    function compareLocalAsc(dateLeft, dateRight) {
      var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();

      if (diff < 0) {
        return -1;
      } else if (diff > 0) {
        return 1; // Return 0 if diff is 0; return NaN if diff is NaN
      } else {
        return diff;
      }
    }
    /**
     * @name differenceInDays
     * @category Day Helpers
     * @summary Get the number of full days between the given dates.
     *
     * @description
     * Get the number of full day periods between two dates. Fractional days are
     * truncated towards zero.
     *
     * One "full day" is the distance between a local time in one day to the same
     * local time on the next or previous day. A full day can sometimes be less than
     * or more than 24 hours if a daylight savings change happens between two dates.
     *
     * To ignore DST and only measure exact 24-hour periods, use this instead:
     * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.
     *
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the later date
     * @param {Date|Number} dateRight - the earlier date
     * @returns {Number} the number of full days according to the local timezone
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // How many full days are between
     * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?
     * const result = differenceInDays(
     *   new Date(2012, 6, 2, 0, 0),
     *   new Date(2011, 6, 2, 23, 0)
     * )
     * //=> 365
     * // How many full days are between
     * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?
     * const result = differenceInDays(
     *   new Date(2011, 6, 3, 0, 1),
     *   new Date(2011, 6, 2, 23, 59)
     * )
     * //=> 0
     * // How many full days are between
     * // 1 March 2020 0:00 and 1 June 2020 0:00 ?
     * // Note: because local time is used, the
     * // result will always be 92 days, even in
     * // time zones where DST starts and the
     * // period has only 92*24-1 hours.
     * const result = differenceInDays(
     *   new Date(2020, 5, 1),
     *   new Date(2020, 2, 1)
     * )
    //=> 92
     */


    function differenceInDays(dirtyDateLeft, dirtyDateRight) {
      requiredArgs(2, arguments);
      var dateLeft = toDate(dirtyDateLeft);
      var dateRight = toDate(dirtyDateRight);
      var sign = compareLocalAsc(dateLeft, dateRight);
      var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));
      dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full
      // If so, result must be decreased by 1 in absolute value

      var isLastDayNotFull = Number(compareLocalAsc(dateLeft, dateRight) === -sign);
      var result = sign * (difference - isLastDayNotFull); // Prevent negative zero

      return result === 0 ? 0 : result;
    }

    /**
     * @name endOfMonth
     * @category Month Helpers
     * @summary Return the end of a month for the given date.
     *
     * @description
     * Return the end of a month for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the end of a month
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The end of a month for 2 September 2014 11:55:00:
     * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Tue Sep 30 2014 23:59:59.999
     */

    function endOfMonth(dirtyDate) {
      requiredArgs(1, arguments);
      var date = toDate(dirtyDate);
      var month = date.getMonth();
      date.setFullYear(date.getFullYear(), month + 1, 0);
      date.setHours(23, 59, 59, 999);
      return date;
    }

    /**
     * @name eachDayOfInterval
     * @category Interval Helpers
     * @summary Return the array of dates within the specified time interval.
     *
     * @description
     * Return the array of dates within the specified time interval.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The function was renamed from `eachDay` to `eachDayOfInterval`.
     *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
     *
     *   ```
     *   2.1.3
     *   time interval
     *   part of the time axis limited by two instants
     *   ```
     *
     *   Also, this function now accepts an object with `start` and `end` properties
     *   instead of two arguments as an interval.
     *   This function now throws `RangeError` if the start of the interval is after its end
     *   or if any date in the interval is `Invalid Date`.
     *
     *   ```javascript
     *   // Before v2.0.0
     *
     *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))
     *
     *   // v2.0.0 onward
     *
     *   eachDayOfInterval(
     *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }
     *   )
     *   ```
     *
     * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}
     * @param {Object} [options] - an object with options.
     * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.
     * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.step` must be a number greater than 1
     * @throws {RangeError} The start of an interval cannot be after its end
     * @throws {RangeError} Date in interval cannot be `Invalid Date`
     *
     * @example
     * // Each day between 6 October 2014 and 10 October 2014:
     * const result = eachDayOfInterval({
     *   start: new Date(2014, 9, 6),
     *   end: new Date(2014, 9, 10)
     * })
     * //=> [
     * //   Mon Oct 06 2014 00:00:00,
     * //   Tue Oct 07 2014 00:00:00,
     * //   Wed Oct 08 2014 00:00:00,
     * //   Thu Oct 09 2014 00:00:00,
     * //   Fri Oct 10 2014 00:00:00
     * // ]
     */

    function eachDayOfInterval(dirtyInterval, options) {
      requiredArgs(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = toDate(interval.start);
      var endDate = toDate(interval.end);
      var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

      if (!(startDate.getTime() <= endTime)) {
        throw new RangeError('Invalid interval');
      }

      var dates = [];
      var currentDate = startDate;
      currentDate.setHours(0, 0, 0, 0);
      var step = options && 'step' in options ? Number(options.step) : 1;
      if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');

      while (currentDate.getTime() <= endTime) {
        dates.push(toDate(currentDate));
        currentDate.setDate(currentDate.getDate() + step);
        currentDate.setHours(0, 0, 0, 0);
      }

      return dates;
    }

    /**
     * @name eachMonthOfInterval
     * @category Interval Helpers
     * @summary Return the array of months within the specified time interval.
     *
     * @description
     * Return the array of months within the specified time interval.
     *
     * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}
     * @returns {Date[]} the array with starts of months from the month of the interval start to the month of the interval end
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} The start of an interval cannot be after its end
     * @throws {RangeError} Date in interval cannot be `Invalid Date`
     *
     * @example
     * // Each month between 6 February 2014 and 10 August 2014:
     * var result = eachMonthOfInterval({
     *   start: new Date(2014, 1, 6),
     *   end: new Date(2014, 7, 10)
     * })
     * //=> [
     * //   Sat Feb 01 2014 00:00:00,
     * //   Sat Mar 01 2014 00:00:00,
     * //   Tue Apr 01 2014 00:00:00,
     * //   Thu May 01 2014 00:00:00,
     * //   Sun Jun 01 2014 00:00:00,
     * //   Tue Jul 01 2014 00:00:00,
     * //   Fri Aug 01 2014 00:00:00
     * // ]
     */

    function eachMonthOfInterval(dirtyInterval) {
      requiredArgs(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = toDate(interval.start);
      var endDate = toDate(interval.end);
      var endTime = endDate.getTime();
      var dates = []; // Throw an exception if start date is after end date or if any date is `Invalid Date`

      if (!(startDate.getTime() <= endTime)) {
        throw new RangeError('Invalid interval');
      }

      var currentDate = startDate;
      currentDate.setHours(0, 0, 0, 0);
      currentDate.setDate(1);

      while (currentDate.getTime() <= endTime) {
        dates.push(toDate(currentDate));
        currentDate.setMonth(currentDate.getMonth() + 1);
      }

      return dates;
    }

    /**
     * @name startOfQuarter
     * @category Quarter Helpers
     * @summary Return the start of a year quarter for the given date.
     *
     * @description
     * Return the start of a year quarter for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the start of a quarter
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The start of a quarter for 2 September 2014 11:55:00:
     * const result = startOfQuarter(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Tue Jul 01 2014 00:00:00
     */

    function startOfQuarter(dirtyDate) {
      requiredArgs(1, arguments);
      var date = toDate(dirtyDate);
      var currentMonth = date.getMonth();
      var month = currentMonth - currentMonth % 3;
      date.setMonth(month, 1);
      date.setHours(0, 0, 0, 0);
      return date;
    }

    /**
     * @name eachQuarterOfInterval
     * @category Interval Helpers
     * @summary Return the array of quarters within the specified time interval.
     *
     * @description
     * Return the array of quarters within the specified time interval.
     *
     * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}
     * @returns {Date[]} the array with starts of quarters from the quarter of the interval start to the quarter of the interval end
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} The start of an interval cannot be after its end
     * @throws {RangeError} Date in interval cannot be `Invalid Date`
     *
     * @example
     * // Each quarter within interval 6 February 2014 - 10 August 2014:
     * var result = eachQuarterOfInterval({
     *   start: new Date(2014, 1, 6),
     *   end: new Date(2014, 7, 10)
     * })
     * //=> [
     * //   Wed Jan 01 2014 00:00:00,
     * //   Tue Apr 01 2014 00:00:00,
     * //   Tue Jul 01 2014 00:00:00,
     * // ]
     */

    function eachQuarterOfInterval(dirtyInterval) {
      requiredArgs(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = toDate(interval.start);
      var endDate = toDate(interval.end);
      var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

      if (!(startDate.getTime() <= endTime)) {
        throw new RangeError('Invalid interval');
      }

      var startDateQuarter = startOfQuarter(startDate);
      var endDateQuarter = startOfQuarter(endDate);
      endTime = endDateQuarter.getTime();
      var quarters = [];
      var currentQuarter = startDateQuarter;

      while (currentQuarter.getTime() <= endTime) {
        quarters.push(toDate(currentQuarter));
        currentQuarter = addQuarters(currentQuarter, 1);
      }

      return quarters;
    }

    /**
     * @name eachWeekOfInterval
     * @category Interval Helpers
     * @summary Return the array of weeks within the specified time interval.
     *
     * @description
     * Return the array of weeks within the specified time interval.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Interval} interval - the interval. See [Interval]{@link https://date-fns.org/docs/Interval}
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @returns {Date[]} the array with starts of weeks from the week of the interval start to the week of the interval end
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.weekStartsOn` must be 0, 1, ..., 6
     * @throws {RangeError} The start of an interval cannot be after its end
     * @throws {RangeError} Date in interval cannot be `Invalid Date`
     *
     * @example
     * // Each week within interval 6 October 2014 - 23 November 2014:
     * var result = eachWeekOfInterval({
     *   start: new Date(2014, 9, 6),
     *   end: new Date(2014, 10, 23)
     * })
     * //=> [
     * //   Sun Oct 05 2014 00:00:00,
     * //   Sun Oct 12 2014 00:00:00,
     * //   Sun Oct 19 2014 00:00:00,
     * //   Sun Oct 26 2014 00:00:00,
     * //   Sun Nov 02 2014 00:00:00,
     * //   Sun Nov 09 2014 00:00:00,
     * //   Sun Nov 16 2014 00:00:00,
     * //   Sun Nov 23 2014 00:00:00
     * // ]
     */

    function eachWeekOfInterval(dirtyInterval, options) {
      requiredArgs(1, arguments);
      var interval = dirtyInterval || {};
      var startDate = toDate(interval.start);
      var endDate = toDate(interval.end);
      var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

      if (!(startDate.getTime() <= endTime)) {
        throw new RangeError('Invalid interval');
      }

      var startDateWeek = startOfWeek(startDate, options);
      var endDateWeek = startOfWeek(endDate, options); // Some timezones switch DST at midnight, making start of day unreliable in these timezones, 3pm is a safe bet

      startDateWeek.setHours(15);
      endDateWeek.setHours(15);
      endTime = endDateWeek.getTime();
      var weeks = [];
      var currentWeek = startDateWeek;

      while (currentWeek.getTime() <= endTime) {
        currentWeek.setHours(0);
        weeks.push(toDate(currentWeek));
        currentWeek = addWeeks(currentWeek, 1);
        currentWeek.setHours(15);
      }

      return weeks;
    }

    /**
     * @name startOfMonth
     * @category Month Helpers
     * @summary Return the start of a month for the given date.
     *
     * @description
     * Return the start of a month for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the start of a month
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The start of a month for 2 September 2014 11:55:00:
     * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Mon Sep 01 2014 00:00:00
     */

    function startOfMonth(dirtyDate) {
      requiredArgs(1, arguments);
      var date = toDate(dirtyDate);
      date.setDate(1);
      date.setHours(0, 0, 0, 0);
      return date;
    }

    /**
     * @name endOfWeek
     * @category Week Helpers
     * @summary Return the end of a week for the given date.
     *
     * @description
     * Return the end of a week for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @returns {Date} the end of a week
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     *
     * @example
     * // The end of a week for 2 September 2014 11:55:00:
     * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Sat Sep 06 2014 23:59:59.999
     *
     * @example
     * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:
     * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })
     * //=> Sun Sep 07 2014 23:59:59.999
     */
    function endOfWeek(dirtyDate, dirtyOptions) {
      requiredArgs(1, arguments);
      var options = dirtyOptions || {};
      var locale = options.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);
      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
      }

      var date = toDate(dirtyDate);
      var day = date.getDay();
      var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);
      date.setDate(date.getDate() + diff);
      date.setHours(23, 59, 59, 999);
      return date;
    }

    var formatDistanceLocale = {
      lessThanXSeconds: {
        one: 'less than a second',
        other: 'less than {{count}} seconds'
      },
      xSeconds: {
        one: '1 second',
        other: '{{count}} seconds'
      },
      halfAMinute: 'half a minute',
      lessThanXMinutes: {
        one: 'less than a minute',
        other: 'less than {{count}} minutes'
      },
      xMinutes: {
        one: '1 minute',
        other: '{{count}} minutes'
      },
      aboutXHours: {
        one: 'about 1 hour',
        other: 'about {{count}} hours'
      },
      xHours: {
        one: '1 hour',
        other: '{{count}} hours'
      },
      xDays: {
        one: '1 day',
        other: '{{count}} days'
      },
      aboutXWeeks: {
        one: 'about 1 week',
        other: 'about {{count}} weeks'
      },
      xWeeks: {
        one: '1 week',
        other: '{{count}} weeks'
      },
      aboutXMonths: {
        one: 'about 1 month',
        other: 'about {{count}} months'
      },
      xMonths: {
        one: '1 month',
        other: '{{count}} months'
      },
      aboutXYears: {
        one: 'about 1 year',
        other: 'about {{count}} years'
      },
      xYears: {
        one: '1 year',
        other: '{{count}} years'
      },
      overXYears: {
        one: 'over 1 year',
        other: 'over {{count}} years'
      },
      almostXYears: {
        one: 'almost 1 year',
        other: 'almost {{count}} years'
      }
    };

    var formatDistance = function (token, count, options) {
      var result;
      var tokenValue = formatDistanceLocale[token];

      if (typeof tokenValue === 'string') {
        result = tokenValue;
      } else if (count === 1) {
        result = tokenValue.one;
      } else {
        result = tokenValue.other.replace('{{count}}', count.toString());
      }

      if (options !== null && options !== void 0 && options.addSuffix) {
        if (options.comparison && options.comparison > 0) {
          return 'in ' + result;
        } else {
          return result + ' ago';
        }
      }

      return result;
    };

    var formatDistance$1 = formatDistance;

    function buildFormatLongFn(args) {
      return function () {
        var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        // TODO: Remove String()
        var width = options.width ? String(options.width) : args.defaultWidth;
        var format = args.formats[width] || args.formats[args.defaultWidth];
        return format;
      };
    }

    var dateFormats = {
      full: 'EEEE, MMMM do, y',
      long: 'MMMM do, y',
      medium: 'MMM d, y',
      short: 'MM/dd/yyyy'
    };
    var timeFormats = {
      full: 'h:mm:ss a zzzz',
      long: 'h:mm:ss a z',
      medium: 'h:mm:ss a',
      short: 'h:mm a'
    };
    var dateTimeFormats = {
      full: "{{date}} 'at' {{time}}",
      long: "{{date}} 'at' {{time}}",
      medium: '{{date}}, {{time}}',
      short: '{{date}}, {{time}}'
    };
    var formatLong = {
      date: buildFormatLongFn({
        formats: dateFormats,
        defaultWidth: 'full'
      }),
      time: buildFormatLongFn({
        formats: timeFormats,
        defaultWidth: 'full'
      }),
      dateTime: buildFormatLongFn({
        formats: dateTimeFormats,
        defaultWidth: 'full'
      })
    };
    var formatLong$1 = formatLong;

    var formatRelativeLocale = {
      lastWeek: "'last' eeee 'at' p",
      yesterday: "'yesterday at' p",
      today: "'today at' p",
      tomorrow: "'tomorrow at' p",
      nextWeek: "eeee 'at' p",
      other: 'P'
    };

    var formatRelative = function (token, _date, _baseDate, _options) {
      return formatRelativeLocale[token];
    };

    var formatRelative$1 = formatRelative;

    function buildLocalizeFn(args) {
      return function (dirtyIndex, dirtyOptions) {
        var options = dirtyOptions || {};
        var context = options.context ? String(options.context) : 'standalone';
        var valuesArray;

        if (context === 'formatting' && args.formattingValues) {
          var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;
          var width = options.width ? String(options.width) : defaultWidth;
          valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];
        } else {
          var _defaultWidth = args.defaultWidth;

          var _width = options.width ? String(options.width) : args.defaultWidth;

          valuesArray = args.values[_width] || args.values[_defaultWidth];
        }

        var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challange you to try to remove it!

        return valuesArray[index];
      };
    }

    var eraValues = {
      narrow: ['B', 'A'],
      abbreviated: ['BC', 'AD'],
      wide: ['Before Christ', 'Anno Domini']
    };
    var quarterValues = {
      narrow: ['1', '2', '3', '4'],
      abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],
      wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']
    }; // Note: in English, the names of days of the week and months are capitalized.
    // If you are making a new locale based on this one, check if the same is true for the language you're working on.
    // Generally, formatted dates should look like they are in the middle of a sentence,
    // e.g. in Spanish language the weekdays and months should be in the lowercase.

    var monthValues = {
      narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
      abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],
      wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']
    };
    var dayValues = {
      narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],
      short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],
      abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],
      wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']
    };
    var dayPeriodValues = {
      narrow: {
        am: 'a',
        pm: 'p',
        midnight: 'mi',
        noon: 'n',
        morning: 'morning',
        afternoon: 'afternoon',
        evening: 'evening',
        night: 'night'
      },
      abbreviated: {
        am: 'AM',
        pm: 'PM',
        midnight: 'midnight',
        noon: 'noon',
        morning: 'morning',
        afternoon: 'afternoon',
        evening: 'evening',
        night: 'night'
      },
      wide: {
        am: 'a.m.',
        pm: 'p.m.',
        midnight: 'midnight',
        noon: 'noon',
        morning: 'morning',
        afternoon: 'afternoon',
        evening: 'evening',
        night: 'night'
      }
    };
    var formattingDayPeriodValues = {
      narrow: {
        am: 'a',
        pm: 'p',
        midnight: 'mi',
        noon: 'n',
        morning: 'in the morning',
        afternoon: 'in the afternoon',
        evening: 'in the evening',
        night: 'at night'
      },
      abbreviated: {
        am: 'AM',
        pm: 'PM',
        midnight: 'midnight',
        noon: 'noon',
        morning: 'in the morning',
        afternoon: 'in the afternoon',
        evening: 'in the evening',
        night: 'at night'
      },
      wide: {
        am: 'a.m.',
        pm: 'p.m.',
        midnight: 'midnight',
        noon: 'noon',
        morning: 'in the morning',
        afternoon: 'in the afternoon',
        evening: 'in the evening',
        night: 'at night'
      }
    };

    var ordinalNumber = function (dirtyNumber, _options) {
      var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,
      // if they are different for different grammatical genders,
      // use `options.unit`.
      //
      // `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',
      // 'day', 'hour', 'minute', 'second'.

      var rem100 = number % 100;

      if (rem100 > 20 || rem100 < 10) {
        switch (rem100 % 10) {
          case 1:
            return number + 'st';

          case 2:
            return number + 'nd';

          case 3:
            return number + 'rd';
        }
      }

      return number + 'th';
    };

    var localize = {
      ordinalNumber: ordinalNumber,
      era: buildLocalizeFn({
        values: eraValues,
        defaultWidth: 'wide'
      }),
      quarter: buildLocalizeFn({
        values: quarterValues,
        defaultWidth: 'wide',
        argumentCallback: function (quarter) {
          return quarter - 1;
        }
      }),
      month: buildLocalizeFn({
        values: monthValues,
        defaultWidth: 'wide'
      }),
      day: buildLocalizeFn({
        values: dayValues,
        defaultWidth: 'wide'
      }),
      dayPeriod: buildLocalizeFn({
        values: dayPeriodValues,
        defaultWidth: 'wide',
        formattingValues: formattingDayPeriodValues,
        defaultFormattingWidth: 'wide'
      })
    };
    var localize$1 = localize;

    function buildMatchFn(args) {
      return function (string) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var width = options.width;
        var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];
        var matchResult = string.match(matchPattern);

        if (!matchResult) {
          return null;
        }

        var matchedString = matchResult[0];
        var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];
        var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {
          return pattern.test(matchedString);
        }) : findKey(parsePatterns, function (pattern) {
          return pattern.test(matchedString);
        });
        var value;
        value = args.valueCallback ? args.valueCallback(key) : key;
        value = options.valueCallback ? options.valueCallback(value) : value;
        var rest = string.slice(matchedString.length);
        return {
          value: value,
          rest: rest
        };
      };
    }

    function findKey(object, predicate) {
      for (var key in object) {
        if (object.hasOwnProperty(key) && predicate(object[key])) {
          return key;
        }
      }

      return undefined;
    }

    function findIndex(array, predicate) {
      for (var key = 0; key < array.length; key++) {
        if (predicate(array[key])) {
          return key;
        }
      }

      return undefined;
    }

    function buildMatchPatternFn(args) {
      return function (string) {
        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
        var matchResult = string.match(args.matchPattern);
        if (!matchResult) return null;
        var matchedString = matchResult[0];
        var parseResult = string.match(args.parsePattern);
        if (!parseResult) return null;
        var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];
        value = options.valueCallback ? options.valueCallback(value) : value;
        var rest = string.slice(matchedString.length);
        return {
          value: value,
          rest: rest
        };
      };
    }

    var matchOrdinalNumberPattern = /^(\d+)(th|st|nd|rd)?/i;
    var parseOrdinalNumberPattern = /\d+/i;
    var matchEraPatterns = {
      narrow: /^(b|a)/i,
      abbreviated: /^(b\.?\s?c\.?|b\.?\s?c\.?\s?e\.?|a\.?\s?d\.?|c\.?\s?e\.?)/i,
      wide: /^(before christ|before common era|anno domini|common era)/i
    };
    var parseEraPatterns = {
      any: [/^b/i, /^(a|c)/i]
    };
    var matchQuarterPatterns = {
      narrow: /^[1234]/i,
      abbreviated: /^q[1234]/i,
      wide: /^[1234](th|st|nd|rd)? quarter/i
    };
    var parseQuarterPatterns = {
      any: [/1/i, /2/i, /3/i, /4/i]
    };
    var matchMonthPatterns = {
      narrow: /^[jfmasond]/i,
      abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,
      wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i
    };
    var parseMonthPatterns = {
      narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],
      any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]
    };
    var matchDayPatterns = {
      narrow: /^[smtwf]/i,
      short: /^(su|mo|tu|we|th|fr|sa)/i,
      abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,
      wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i
    };
    var parseDayPatterns = {
      narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],
      any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]
    };
    var matchDayPeriodPatterns = {
      narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,
      any: /^([ap]\.?\s?m\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i
    };
    var parseDayPeriodPatterns = {
      any: {
        am: /^a/i,
        pm: /^p/i,
        midnight: /^mi/i,
        noon: /^no/i,
        morning: /morning/i,
        afternoon: /afternoon/i,
        evening: /evening/i,
        night: /night/i
      }
    };
    var match = {
      ordinalNumber: buildMatchPatternFn({
        matchPattern: matchOrdinalNumberPattern,
        parsePattern: parseOrdinalNumberPattern,
        valueCallback: function (value) {
          return parseInt(value, 10);
        }
      }),
      era: buildMatchFn({
        matchPatterns: matchEraPatterns,
        defaultMatchWidth: 'wide',
        parsePatterns: parseEraPatterns,
        defaultParseWidth: 'any'
      }),
      quarter: buildMatchFn({
        matchPatterns: matchQuarterPatterns,
        defaultMatchWidth: 'wide',
        parsePatterns: parseQuarterPatterns,
        defaultParseWidth: 'any',
        valueCallback: function (index) {
          return index + 1;
        }
      }),
      month: buildMatchFn({
        matchPatterns: matchMonthPatterns,
        defaultMatchWidth: 'wide',
        parsePatterns: parseMonthPatterns,
        defaultParseWidth: 'any'
      }),
      day: buildMatchFn({
        matchPatterns: matchDayPatterns,
        defaultMatchWidth: 'wide',
        parsePatterns: parseDayPatterns,
        defaultParseWidth: 'any'
      }),
      dayPeriod: buildMatchFn({
        matchPatterns: matchDayPeriodPatterns,
        defaultMatchWidth: 'any',
        parsePatterns: parseDayPeriodPatterns,
        defaultParseWidth: 'any'
      })
    };
    var match$1 = match;

    /**
     * @type {Locale}
     * @category Locales
     * @summary English locale (United States).
     * @language English
     * @iso-639-2 eng
     * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}
     * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}
     */
    var locale = {
      code: 'en-US',
      formatDistance: formatDistance$1,
      formatLong: formatLong$1,
      formatRelative: formatRelative$1,
      localize: localize$1,
      match: match$1,
      options: {
        weekStartsOn: 0
        /* Sunday */
        ,
        firstWeekContainsDate: 1
      }
    };
    var defaultLocale = locale;

    /**
     * @name subMilliseconds
     * @category Millisecond Helpers
     * @summary Subtract the specified number of milliseconds from the given date.
     *
     * @description
     * Subtract the specified number of milliseconds from the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the milliseconds subtracted
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:
     * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)
     * //=> Thu Jul 10 2014 12:45:29.250
     */

    function subMilliseconds(dirtyDate, dirtyAmount) {
      requiredArgs(2, arguments);
      var amount = toInteger(dirtyAmount);
      return addMilliseconds(dirtyDate, -amount);
    }

    function addLeadingZeros(number, targetLength) {
      var sign = number < 0 ? '-' : '';
      var output = Math.abs(number).toString();

      while (output.length < targetLength) {
        output = '0' + output;
      }

      return sign + output;
    }

    /*
     * |     | Unit                           |     | Unit                           |
     * |-----|--------------------------------|-----|--------------------------------|
     * |  a  | AM, PM                         |  A* |                                |
     * |  d  | Day of month                   |  D  |                                |
     * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
     * |  m  | Minute                         |  M  | Month                          |
     * |  s  | Second                         |  S  | Fraction of second             |
     * |  y  | Year (abs)                     |  Y  |                                |
     *
     * Letters marked by * are not implemented but reserved by Unicode standard.
     */

    var formatters$2 = {
      // Year
      y: function (date, token) {
        // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens
        // | Year     |     y | yy |   yyy |  yyyy | yyyyy |
        // |----------|-------|----|-------|-------|-------|
        // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |
        // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |
        // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |
        // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |
        // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |
        var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

        var year = signedYear > 0 ? signedYear : 1 - signedYear;
        return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);
      },
      // Month
      M: function (date, token) {
        var month = date.getUTCMonth();
        return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);
      },
      // Day of the month
      d: function (date, token) {
        return addLeadingZeros(date.getUTCDate(), token.length);
      },
      // AM or PM
      a: function (date, token) {
        var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';

        switch (token) {
          case 'a':
          case 'aa':
            return dayPeriodEnumValue.toUpperCase();

          case 'aaa':
            return dayPeriodEnumValue;

          case 'aaaaa':
            return dayPeriodEnumValue[0];

          case 'aaaa':
          default:
            return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';
        }
      },
      // Hour [1-12]
      h: function (date, token) {
        return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);
      },
      // Hour [0-23]
      H: function (date, token) {
        return addLeadingZeros(date.getUTCHours(), token.length);
      },
      // Minute
      m: function (date, token) {
        return addLeadingZeros(date.getUTCMinutes(), token.length);
      },
      // Second
      s: function (date, token) {
        return addLeadingZeros(date.getUTCSeconds(), token.length);
      },
      // Fraction of second
      S: function (date, token) {
        var numberOfDigits = token.length;
        var milliseconds = date.getUTCMilliseconds();
        var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));
        return addLeadingZeros(fractionalSeconds, token.length);
      }
    };
    var formatters$3 = formatters$2;

    var MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.
    // See issue: https://github.com/date-fns/date-fns/issues/376

    function getUTCDayOfYear(dirtyDate) {
      requiredArgs(1, arguments);
      var date = toDate(dirtyDate);
      var timestamp = date.getTime();
      date.setUTCMonth(0, 1);
      date.setUTCHours(0, 0, 0, 0);
      var startOfYearTimestamp = date.getTime();
      var difference = timestamp - startOfYearTimestamp;
      return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;
    }

    // See issue: https://github.com/date-fns/date-fns/issues/376

    function startOfUTCISOWeek(dirtyDate) {
      requiredArgs(1, arguments);
      var weekStartsOn = 1;
      var date = toDate(dirtyDate);
      var day = date.getUTCDay();
      var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
      date.setUTCDate(date.getUTCDate() - diff);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }

    // See issue: https://github.com/date-fns/date-fns/issues/376

    function getUTCISOWeekYear(dirtyDate) {
      requiredArgs(1, arguments);
      var date = toDate(dirtyDate);
      var year = date.getUTCFullYear();
      var fourthOfJanuaryOfNextYear = new Date(0);
      fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);
      fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);
      var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);
      var fourthOfJanuaryOfThisYear = new Date(0);
      fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);
      fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);
      var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);

      if (date.getTime() >= startOfNextYear.getTime()) {
        return year + 1;
      } else if (date.getTime() >= startOfThisYear.getTime()) {
        return year;
      } else {
        return year - 1;
      }
    }

    // See issue: https://github.com/date-fns/date-fns/issues/376

    function startOfUTCISOWeekYear(dirtyDate) {
      requiredArgs(1, arguments);
      var year = getUTCISOWeekYear(dirtyDate);
      var fourthOfJanuary = new Date(0);
      fourthOfJanuary.setUTCFullYear(year, 0, 4);
      fourthOfJanuary.setUTCHours(0, 0, 0, 0);
      var date = startOfUTCISOWeek(fourthOfJanuary);
      return date;
    }

    var MILLISECONDS_IN_WEEK$2 = 604800000; // This function will be a part of public API when UTC function will be implemented.
    // See issue: https://github.com/date-fns/date-fns/issues/376

    function getUTCISOWeek(dirtyDate) {
      requiredArgs(1, arguments);
      var date = toDate(dirtyDate);
      var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer
      // because the number of milliseconds in a week is not constant
      // (e.g. it's different in the week of the daylight saving time clock shift)

      return Math.round(diff / MILLISECONDS_IN_WEEK$2) + 1;
    }

    // See issue: https://github.com/date-fns/date-fns/issues/376

    function startOfUTCWeek(dirtyDate, dirtyOptions) {
      requiredArgs(1, arguments);
      var options = dirtyOptions || {};
      var locale = options.locale;
      var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);
      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
      }

      var date = toDate(dirtyDate);
      var day = date.getUTCDay();
      var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;
      date.setUTCDate(date.getUTCDate() - diff);
      date.setUTCHours(0, 0, 0, 0);
      return date;
    }

    // See issue: https://github.com/date-fns/date-fns/issues/376

    function getUTCWeekYear(dirtyDate, dirtyOptions) {
      requiredArgs(1, arguments);
      var date = toDate(dirtyDate, dirtyOptions);
      var year = date.getUTCFullYear();
      var options = dirtyOptions || {};
      var locale = options.locale;
      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
        throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
      }

      var firstWeekOfNextYear = new Date(0);
      firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);
      firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);
      var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);
      var firstWeekOfThisYear = new Date(0);
      firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);
      firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);
      var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);

      if (date.getTime() >= startOfNextYear.getTime()) {
        return year + 1;
      } else if (date.getTime() >= startOfThisYear.getTime()) {
        return year;
      } else {
        return year - 1;
      }
    }

    // See issue: https://github.com/date-fns/date-fns/issues/376

    function startOfUTCWeekYear(dirtyDate, dirtyOptions) {
      requiredArgs(1, arguments);
      var options = dirtyOptions || {};
      var locale = options.locale;
      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);
      var year = getUTCWeekYear(dirtyDate, dirtyOptions);
      var firstWeek = new Date(0);
      firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);
      firstWeek.setUTCHours(0, 0, 0, 0);
      var date = startOfUTCWeek(firstWeek, dirtyOptions);
      return date;
    }

    var MILLISECONDS_IN_WEEK$1 = 604800000; // This function will be a part of public API when UTC function will be implemented.
    // See issue: https://github.com/date-fns/date-fns/issues/376

    function getUTCWeek(dirtyDate, options) {
      requiredArgs(1, arguments);
      var date = toDate(dirtyDate);
      var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer
      // because the number of milliseconds in a week is not constant
      // (e.g. it's different in the week of the daylight saving time clock shift)

      return Math.round(diff / MILLISECONDS_IN_WEEK$1) + 1;
    }

    var dayPeriodEnum = {
      am: 'am',
      pm: 'pm',
      midnight: 'midnight',
      noon: 'noon',
      morning: 'morning',
      afternoon: 'afternoon',
      evening: 'evening',
      night: 'night'
    };
    /*
     * |     | Unit                           |     | Unit                           |
     * |-----|--------------------------------|-----|--------------------------------|
     * |  a  | AM, PM                         |  A* | Milliseconds in day            |
     * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |
     * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |
     * |  d  | Day of month                   |  D  | Day of year                    |
     * |  e  | Local day of week              |  E  | Day of week                    |
     * |  f  |                                |  F* | Day of week in month           |
     * |  g* | Modified Julian day            |  G  | Era                            |
     * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |
     * |  i! | ISO day of week                |  I! | ISO week of year               |
     * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |
     * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |
     * |  l* | (deprecated)                   |  L  | Stand-alone month              |
     * |  m  | Minute                         |  M  | Month                          |
     * |  n  |                                |  N  |                                |
     * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |
     * |  p! | Long localized time            |  P! | Long localized date            |
     * |  q  | Stand-alone quarter            |  Q  | Quarter                        |
     * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |
     * |  s  | Second                         |  S  | Fraction of second             |
     * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |
     * |  u  | Extended year                  |  U* | Cyclic year                    |
     * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |
     * |  w  | Local week of year             |  W* | Week of month                  |
     * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |
     * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |
     * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |
     *
     * Letters marked by * are not implemented but reserved by Unicode standard.
     *
     * Letters marked by ! are non-standard, but implemented by date-fns:
     * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)
     * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,
     *   i.e. 7 for Sunday, 1 for Monday, etc.
     * - `I` is ISO week of year, as opposed to `w` which is local week of year.
     * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.
     *   `R` is supposed to be used in conjunction with `I` and `i`
     *   for universal ISO week-numbering date, whereas
     *   `Y` is supposed to be used in conjunction with `w` and `e`
     *   for week-numbering date specific to the locale.
     * - `P` is long localized date format
     * - `p` is long localized time format
     */

    var formatters = {
      // Era
      G: function (date, token, localize) {
        var era = date.getUTCFullYear() > 0 ? 1 : 0;

        switch (token) {
          // AD, BC
          case 'G':
          case 'GG':
          case 'GGG':
            return localize.era(era, {
              width: 'abbreviated'
            });
          // A, B

          case 'GGGGG':
            return localize.era(era, {
              width: 'narrow'
            });
          // Anno Domini, Before Christ

          case 'GGGG':
          default:
            return localize.era(era, {
              width: 'wide'
            });
        }
      },
      // Year
      y: function (date, token, localize) {
        // Ordinal number
        if (token === 'yo') {
          var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)

          var year = signedYear > 0 ? signedYear : 1 - signedYear;
          return localize.ordinalNumber(year, {
            unit: 'year'
          });
        }

        return formatters$3.y(date, token);
      },
      // Local week-numbering year
      Y: function (date, token, localize, options) {
        var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)

        var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year

        if (token === 'YY') {
          var twoDigitYear = weekYear % 100;
          return addLeadingZeros(twoDigitYear, 2);
        } // Ordinal number


        if (token === 'Yo') {
          return localize.ordinalNumber(weekYear, {
            unit: 'year'
          });
        } // Padding


        return addLeadingZeros(weekYear, token.length);
      },
      // ISO week-numbering year
      R: function (date, token) {
        var isoWeekYear = getUTCISOWeekYear(date); // Padding

        return addLeadingZeros(isoWeekYear, token.length);
      },
      // Extended year. This is a single number designating the year of this calendar system.
      // The main difference between `y` and `u` localizers are B.C. years:
      // | Year | `y` | `u` |
      // |------|-----|-----|
      // | AC 1 |   1 |   1 |
      // | BC 1 |   1 |   0 |
      // | BC 2 |   2 |  -1 |
      // Also `yy` always returns the last two digits of a year,
      // while `uu` pads single digit years to 2 characters and returns other years unchanged.
      u: function (date, token) {
        var year = date.getUTCFullYear();
        return addLeadingZeros(year, token.length);
      },
      // Quarter
      Q: function (date, token, localize) {
        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);

        switch (token) {
          // 1, 2, 3, 4
          case 'Q':
            return String(quarter);
          // 01, 02, 03, 04

          case 'QQ':
            return addLeadingZeros(quarter, 2);
          // 1st, 2nd, 3rd, 4th

          case 'Qo':
            return localize.ordinalNumber(quarter, {
              unit: 'quarter'
            });
          // Q1, Q2, Q3, Q4

          case 'QQQ':
            return localize.quarter(quarter, {
              width: 'abbreviated',
              context: 'formatting'
            });
          // 1, 2, 3, 4 (narrow quarter; could be not numerical)

          case 'QQQQQ':
            return localize.quarter(quarter, {
              width: 'narrow',
              context: 'formatting'
            });
          // 1st quarter, 2nd quarter, ...

          case 'QQQQ':
          default:
            return localize.quarter(quarter, {
              width: 'wide',
              context: 'formatting'
            });
        }
      },
      // Stand-alone quarter
      q: function (date, token, localize) {
        var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);

        switch (token) {
          // 1, 2, 3, 4
          case 'q':
            return String(quarter);
          // 01, 02, 03, 04

          case 'qq':
            return addLeadingZeros(quarter, 2);
          // 1st, 2nd, 3rd, 4th

          case 'qo':
            return localize.ordinalNumber(quarter, {
              unit: 'quarter'
            });
          // Q1, Q2, Q3, Q4

          case 'qqq':
            return localize.quarter(quarter, {
              width: 'abbreviated',
              context: 'standalone'
            });
          // 1, 2, 3, 4 (narrow quarter; could be not numerical)

          case 'qqqqq':
            return localize.quarter(quarter, {
              width: 'narrow',
              context: 'standalone'
            });
          // 1st quarter, 2nd quarter, ...

          case 'qqqq':
          default:
            return localize.quarter(quarter, {
              width: 'wide',
              context: 'standalone'
            });
        }
      },
      // Month
      M: function (date, token, localize) {
        var month = date.getUTCMonth();

        switch (token) {
          case 'M':
          case 'MM':
            return formatters$3.M(date, token);
          // 1st, 2nd, ..., 12th

          case 'Mo':
            return localize.ordinalNumber(month + 1, {
              unit: 'month'
            });
          // Jan, Feb, ..., Dec

          case 'MMM':
            return localize.month(month, {
              width: 'abbreviated',
              context: 'formatting'
            });
          // J, F, ..., D

          case 'MMMMM':
            return localize.month(month, {
              width: 'narrow',
              context: 'formatting'
            });
          // January, February, ..., December

          case 'MMMM':
          default:
            return localize.month(month, {
              width: 'wide',
              context: 'formatting'
            });
        }
      },
      // Stand-alone month
      L: function (date, token, localize) {
        var month = date.getUTCMonth();

        switch (token) {
          // 1, 2, ..., 12
          case 'L':
            return String(month + 1);
          // 01, 02, ..., 12

          case 'LL':
            return addLeadingZeros(month + 1, 2);
          // 1st, 2nd, ..., 12th

          case 'Lo':
            return localize.ordinalNumber(month + 1, {
              unit: 'month'
            });
          // Jan, Feb, ..., Dec

          case 'LLL':
            return localize.month(month, {
              width: 'abbreviated',
              context: 'standalone'
            });
          // J, F, ..., D

          case 'LLLLL':
            return localize.month(month, {
              width: 'narrow',
              context: 'standalone'
            });
          // January, February, ..., December

          case 'LLLL':
          default:
            return localize.month(month, {
              width: 'wide',
              context: 'standalone'
            });
        }
      },
      // Local week of year
      w: function (date, token, localize, options) {
        var week = getUTCWeek(date, options);

        if (token === 'wo') {
          return localize.ordinalNumber(week, {
            unit: 'week'
          });
        }

        return addLeadingZeros(week, token.length);
      },
      // ISO week of year
      I: function (date, token, localize) {
        var isoWeek = getUTCISOWeek(date);

        if (token === 'Io') {
          return localize.ordinalNumber(isoWeek, {
            unit: 'week'
          });
        }

        return addLeadingZeros(isoWeek, token.length);
      },
      // Day of the month
      d: function (date, token, localize) {
        if (token === 'do') {
          return localize.ordinalNumber(date.getUTCDate(), {
            unit: 'date'
          });
        }

        return formatters$3.d(date, token);
      },
      // Day of year
      D: function (date, token, localize) {
        var dayOfYear = getUTCDayOfYear(date);

        if (token === 'Do') {
          return localize.ordinalNumber(dayOfYear, {
            unit: 'dayOfYear'
          });
        }

        return addLeadingZeros(dayOfYear, token.length);
      },
      // Day of week
      E: function (date, token, localize) {
        var dayOfWeek = date.getUTCDay();

        switch (token) {
          // Tue
          case 'E':
          case 'EE':
          case 'EEE':
            return localize.day(dayOfWeek, {
              width: 'abbreviated',
              context: 'formatting'
            });
          // T

          case 'EEEEE':
            return localize.day(dayOfWeek, {
              width: 'narrow',
              context: 'formatting'
            });
          // Tu

          case 'EEEEEE':
            return localize.day(dayOfWeek, {
              width: 'short',
              context: 'formatting'
            });
          // Tuesday

          case 'EEEE':
          default:
            return localize.day(dayOfWeek, {
              width: 'wide',
              context: 'formatting'
            });
        }
      },
      // Local day of week
      e: function (date, token, localize, options) {
        var dayOfWeek = date.getUTCDay();
        var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;

        switch (token) {
          // Numerical value (Nth day of week with current locale or weekStartsOn)
          case 'e':
            return String(localDayOfWeek);
          // Padded numerical value

          case 'ee':
            return addLeadingZeros(localDayOfWeek, 2);
          // 1st, 2nd, ..., 7th

          case 'eo':
            return localize.ordinalNumber(localDayOfWeek, {
              unit: 'day'
            });

          case 'eee':
            return localize.day(dayOfWeek, {
              width: 'abbreviated',
              context: 'formatting'
            });
          // T

          case 'eeeee':
            return localize.day(dayOfWeek, {
              width: 'narrow',
              context: 'formatting'
            });
          // Tu

          case 'eeeeee':
            return localize.day(dayOfWeek, {
              width: 'short',
              context: 'formatting'
            });
          // Tuesday

          case 'eeee':
          default:
            return localize.day(dayOfWeek, {
              width: 'wide',
              context: 'formatting'
            });
        }
      },
      // Stand-alone local day of week
      c: function (date, token, localize, options) {
        var dayOfWeek = date.getUTCDay();
        var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;

        switch (token) {
          // Numerical value (same as in `e`)
          case 'c':
            return String(localDayOfWeek);
          // Padded numerical value

          case 'cc':
            return addLeadingZeros(localDayOfWeek, token.length);
          // 1st, 2nd, ..., 7th

          case 'co':
            return localize.ordinalNumber(localDayOfWeek, {
              unit: 'day'
            });

          case 'ccc':
            return localize.day(dayOfWeek, {
              width: 'abbreviated',
              context: 'standalone'
            });
          // T

          case 'ccccc':
            return localize.day(dayOfWeek, {
              width: 'narrow',
              context: 'standalone'
            });
          // Tu

          case 'cccccc':
            return localize.day(dayOfWeek, {
              width: 'short',
              context: 'standalone'
            });
          // Tuesday

          case 'cccc':
          default:
            return localize.day(dayOfWeek, {
              width: 'wide',
              context: 'standalone'
            });
        }
      },
      // ISO day of week
      i: function (date, token, localize) {
        var dayOfWeek = date.getUTCDay();
        var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;

        switch (token) {
          // 2
          case 'i':
            return String(isoDayOfWeek);
          // 02

          case 'ii':
            return addLeadingZeros(isoDayOfWeek, token.length);
          // 2nd

          case 'io':
            return localize.ordinalNumber(isoDayOfWeek, {
              unit: 'day'
            });
          // Tue

          case 'iii':
            return localize.day(dayOfWeek, {
              width: 'abbreviated',
              context: 'formatting'
            });
          // T

          case 'iiiii':
            return localize.day(dayOfWeek, {
              width: 'narrow',
              context: 'formatting'
            });
          // Tu

          case 'iiiiii':
            return localize.day(dayOfWeek, {
              width: 'short',
              context: 'formatting'
            });
          // Tuesday

          case 'iiii':
          default:
            return localize.day(dayOfWeek, {
              width: 'wide',
              context: 'formatting'
            });
        }
      },
      // AM or PM
      a: function (date, token, localize) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';

        switch (token) {
          case 'a':
          case 'aa':
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'abbreviated',
              context: 'formatting'
            });

          case 'aaa':
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'abbreviated',
              context: 'formatting'
            }).toLowerCase();

          case 'aaaaa':
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'narrow',
              context: 'formatting'
            });

          case 'aaaa':
          default:
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'wide',
              context: 'formatting'
            });
        }
      },
      // AM, PM, midnight, noon
      b: function (date, token, localize) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue;

        if (hours === 12) {
          dayPeriodEnumValue = dayPeriodEnum.noon;
        } else if (hours === 0) {
          dayPeriodEnumValue = dayPeriodEnum.midnight;
        } else {
          dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';
        }

        switch (token) {
          case 'b':
          case 'bb':
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'abbreviated',
              context: 'formatting'
            });

          case 'bbb':
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'abbreviated',
              context: 'formatting'
            }).toLowerCase();

          case 'bbbbb':
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'narrow',
              context: 'formatting'
            });

          case 'bbbb':
          default:
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'wide',
              context: 'formatting'
            });
        }
      },
      // in the morning, in the afternoon, in the evening, at night
      B: function (date, token, localize) {
        var hours = date.getUTCHours();
        var dayPeriodEnumValue;

        if (hours >= 17) {
          dayPeriodEnumValue = dayPeriodEnum.evening;
        } else if (hours >= 12) {
          dayPeriodEnumValue = dayPeriodEnum.afternoon;
        } else if (hours >= 4) {
          dayPeriodEnumValue = dayPeriodEnum.morning;
        } else {
          dayPeriodEnumValue = dayPeriodEnum.night;
        }

        switch (token) {
          case 'B':
          case 'BB':
          case 'BBB':
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'abbreviated',
              context: 'formatting'
            });

          case 'BBBBB':
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'narrow',
              context: 'formatting'
            });

          case 'BBBB':
          default:
            return localize.dayPeriod(dayPeriodEnumValue, {
              width: 'wide',
              context: 'formatting'
            });
        }
      },
      // Hour [1-12]
      h: function (date, token, localize) {
        if (token === 'ho') {
          var hours = date.getUTCHours() % 12;
          if (hours === 0) hours = 12;
          return localize.ordinalNumber(hours, {
            unit: 'hour'
          });
        }

        return formatters$3.h(date, token);
      },
      // Hour [0-23]
      H: function (date, token, localize) {
        if (token === 'Ho') {
          return localize.ordinalNumber(date.getUTCHours(), {
            unit: 'hour'
          });
        }

        return formatters$3.H(date, token);
      },
      // Hour [0-11]
      K: function (date, token, localize) {
        var hours = date.getUTCHours() % 12;

        if (token === 'Ko') {
          return localize.ordinalNumber(hours, {
            unit: 'hour'
          });
        }

        return addLeadingZeros(hours, token.length);
      },
      // Hour [1-24]
      k: function (date, token, localize) {
        var hours = date.getUTCHours();
        if (hours === 0) hours = 24;

        if (token === 'ko') {
          return localize.ordinalNumber(hours, {
            unit: 'hour'
          });
        }

        return addLeadingZeros(hours, token.length);
      },
      // Minute
      m: function (date, token, localize) {
        if (token === 'mo') {
          return localize.ordinalNumber(date.getUTCMinutes(), {
            unit: 'minute'
          });
        }

        return formatters$3.m(date, token);
      },
      // Second
      s: function (date, token, localize) {
        if (token === 'so') {
          return localize.ordinalNumber(date.getUTCSeconds(), {
            unit: 'second'
          });
        }

        return formatters$3.s(date, token);
      },
      // Fraction of second
      S: function (date, token) {
        return formatters$3.S(date, token);
      },
      // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)
      X: function (date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();

        if (timezoneOffset === 0) {
          return 'Z';
        }

        switch (token) {
          // Hours and optional minutes
          case 'X':
            return formatTimezoneWithOptionalMinutes(timezoneOffset);
          // Hours, minutes and optional seconds without `:` delimiter
          // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
          // so this token always has the same output as `XX`

          case 'XXXX':
          case 'XX':
            // Hours and minutes without `:` delimiter
            return formatTimezone(timezoneOffset);
          // Hours, minutes and optional seconds with `:` delimiter
          // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
          // so this token always has the same output as `XXX`

          case 'XXXXX':
          case 'XXX': // Hours and minutes with `:` delimiter

          default:
            return formatTimezone(timezoneOffset, ':');
        }
      },
      // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)
      x: function (date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();

        switch (token) {
          // Hours and optional minutes
          case 'x':
            return formatTimezoneWithOptionalMinutes(timezoneOffset);
          // Hours, minutes and optional seconds without `:` delimiter
          // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
          // so this token always has the same output as `xx`

          case 'xxxx':
          case 'xx':
            // Hours and minutes without `:` delimiter
            return formatTimezone(timezoneOffset);
          // Hours, minutes and optional seconds with `:` delimiter
          // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets
          // so this token always has the same output as `xxx`

          case 'xxxxx':
          case 'xxx': // Hours and minutes with `:` delimiter

          default:
            return formatTimezone(timezoneOffset, ':');
        }
      },
      // Timezone (GMT)
      O: function (date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();

        switch (token) {
          // Short
          case 'O':
          case 'OO':
          case 'OOO':
            return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
          // Long

          case 'OOOO':
          default:
            return 'GMT' + formatTimezone(timezoneOffset, ':');
        }
      },
      // Timezone (specific non-location)
      z: function (date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timezoneOffset = originalDate.getTimezoneOffset();

        switch (token) {
          // Short
          case 'z':
          case 'zz':
          case 'zzz':
            return 'GMT' + formatTimezoneShort(timezoneOffset, ':');
          // Long

          case 'zzzz':
          default:
            return 'GMT' + formatTimezone(timezoneOffset, ':');
        }
      },
      // Seconds timestamp
      t: function (date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timestamp = Math.floor(originalDate.getTime() / 1000);
        return addLeadingZeros(timestamp, token.length);
      },
      // Milliseconds timestamp
      T: function (date, token, _localize, options) {
        var originalDate = options._originalDate || date;
        var timestamp = originalDate.getTime();
        return addLeadingZeros(timestamp, token.length);
      }
    };

    function formatTimezoneShort(offset, dirtyDelimiter) {
      var sign = offset > 0 ? '-' : '+';
      var absOffset = Math.abs(offset);
      var hours = Math.floor(absOffset / 60);
      var minutes = absOffset % 60;

      if (minutes === 0) {
        return sign + String(hours);
      }

      var delimiter = dirtyDelimiter || '';
      return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);
    }

    function formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {
      if (offset % 60 === 0) {
        var sign = offset > 0 ? '-' : '+';
        return sign + addLeadingZeros(Math.abs(offset) / 60, 2);
      }

      return formatTimezone(offset, dirtyDelimiter);
    }

    function formatTimezone(offset, dirtyDelimiter) {
      var delimiter = dirtyDelimiter || '';
      var sign = offset > 0 ? '-' : '+';
      var absOffset = Math.abs(offset);
      var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);
      var minutes = addLeadingZeros(absOffset % 60, 2);
      return sign + hours + delimiter + minutes;
    }

    var formatters$1 = formatters;

    function dateLongFormatter(pattern, formatLong) {
      switch (pattern) {
        case 'P':
          return formatLong.date({
            width: 'short'
          });

        case 'PP':
          return formatLong.date({
            width: 'medium'
          });

        case 'PPP':
          return formatLong.date({
            width: 'long'
          });

        case 'PPPP':
        default:
          return formatLong.date({
            width: 'full'
          });
      }
    }

    function timeLongFormatter(pattern, formatLong) {
      switch (pattern) {
        case 'p':
          return formatLong.time({
            width: 'short'
          });

        case 'pp':
          return formatLong.time({
            width: 'medium'
          });

        case 'ppp':
          return formatLong.time({
            width: 'long'
          });

        case 'pppp':
        default:
          return formatLong.time({
            width: 'full'
          });
      }
    }

    function dateTimeLongFormatter(pattern, formatLong) {
      var matchResult = pattern.match(/(P+)(p+)?/);
      var datePattern = matchResult[1];
      var timePattern = matchResult[2];

      if (!timePattern) {
        return dateLongFormatter(pattern, formatLong);
      }

      var dateTimeFormat;

      switch (datePattern) {
        case 'P':
          dateTimeFormat = formatLong.dateTime({
            width: 'short'
          });
          break;

        case 'PP':
          dateTimeFormat = formatLong.dateTime({
            width: 'medium'
          });
          break;

        case 'PPP':
          dateTimeFormat = formatLong.dateTime({
            width: 'long'
          });
          break;

        case 'PPPP':
        default:
          dateTimeFormat = formatLong.dateTime({
            width: 'full'
          });
          break;
      }

      return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));
    }

    var longFormatters = {
      p: timeLongFormatter,
      P: dateTimeLongFormatter
    };
    var longFormatters$1 = longFormatters;

    var protectedDayOfYearTokens = ['D', 'DD'];
    var protectedWeekYearTokens = ['YY', 'YYYY'];
    function isProtectedDayOfYearToken(token) {
      return protectedDayOfYearTokens.indexOf(token) !== -1;
    }
    function isProtectedWeekYearToken(token) {
      return protectedWeekYearTokens.indexOf(token) !== -1;
    }
    function throwProtectedError(token, format, input) {
      if (token === 'YYYY') {
        throw new RangeError("Use `yyyy` instead of `YYYY` (in `".concat(format, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
      } else if (token === 'YY') {
        throw new RangeError("Use `yy` instead of `YY` (in `".concat(format, "`) for formatting years to the input `").concat(input, "`; see: https://git.io/fxCyr"));
      } else if (token === 'D') {
        throw new RangeError("Use `d` instead of `D` (in `".concat(format, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
      } else if (token === 'DD') {
        throw new RangeError("Use `dd` instead of `DD` (in `".concat(format, "`) for formatting days of the month to the input `").concat(input, "`; see: https://git.io/fxCyr"));
      }
    }

    // - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token
    //   (one of the certain letters followed by `o`)
    // - (\w)\1* matches any sequences of the same letter
    // - '' matches two quote characters in a row
    // - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),
    //   except a single quote symbol, which ends the sequence.
    //   Two quote characters do not end the sequence.
    //   If there is no matching single quote
    //   then the sequence will continue until the end of the string.
    // - . matches any single character unmatched by previous parts of the RegExps

    var formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\w)\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also
    // sequences of symbols P, p, and the combinations like `PPPPPPPppppp`

    var longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;
    var escapedStringRegExp = /^'([^]*?)'?$/;
    var doubleQuoteRegExp = /''/g;
    var unescapedLatinCharacterRegExp = /[a-zA-Z]/;
    /**
     * @name format
     * @category Common Helpers
     * @summary Format the date.
     *
     * @description
     * Return the formatted date string in the given format. The result may vary by locale.
     *
     * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.
     * > See: https://git.io/fxCyr
     *
     * The characters wrapped between two single quotes characters (') are escaped.
     * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.
     * (see the last example)
     *
     * Format of the string is based on Unicode Technical Standard #35:
     * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table
     * with a few additions (see note 7 below the table).
     *
     * Accepted patterns:
     * | Unit                            | Pattern | Result examples                   | Notes |
     * |---------------------------------|---------|-----------------------------------|-------|
     * | Era                             | G..GGG  | AD, BC                            |       |
     * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |
     * |                                 | GGGGG   | A, B                              |       |
     * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |
     * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |
     * |                                 | yy      | 44, 01, 00, 17                    | 5     |
     * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |
     * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |
     * |                                 | yyyyy   | ...                               | 3,5   |
     * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |
     * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |
     * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |
     * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |
     * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |
     * |                                 | YYYYY   | ...                               | 3,5   |
     * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |
     * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |
     * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |
     * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |
     * |                                 | RRRRR   | ...                               | 3,5,7 |
     * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |
     * |                                 | uu      | -43, 01, 1900, 2017               | 5     |
     * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |
     * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |
     * |                                 | uuuuu   | ...                               | 3,5   |
     * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |
     * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |
     * |                                 | QQ      | 01, 02, 03, 04                    |       |
     * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |
     * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |
     * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |
     * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |
     * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |
     * |                                 | qq      | 01, 02, 03, 04                    |       |
     * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |
     * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |
     * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |
     * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |
     * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |
     * |                                 | MM      | 01, 02, ..., 12                   |       |
     * |                                 | MMM     | Jan, Feb, ..., Dec                |       |
     * |                                 | MMMM    | January, February, ..., December  | 2     |
     * |                                 | MMMMM   | J, F, ..., D                      |       |
     * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |
     * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |
     * |                                 | LL      | 01, 02, ..., 12                   |       |
     * |                                 | LLL     | Jan, Feb, ..., Dec                |       |
     * |                                 | LLLL    | January, February, ..., December  | 2     |
     * |                                 | LLLLL   | J, F, ..., D                      |       |
     * | Local week of year              | w       | 1, 2, ..., 53                     |       |
     * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |
     * |                                 | ww      | 01, 02, ..., 53                   |       |
     * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |
     * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |
     * |                                 | II      | 01, 02, ..., 53                   | 7     |
     * | Day of month                    | d       | 1, 2, ..., 31                     |       |
     * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |
     * |                                 | dd      | 01, 02, ..., 31                   |       |
     * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |
     * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |
     * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |
     * |                                 | DDD     | 001, 002, ..., 365, 366           |       |
     * |                                 | DDDD    | ...                               | 3     |
     * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |
     * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |
     * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |
     * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
     * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |
     * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |
     * |                                 | ii      | 01, 02, ..., 07                   | 7     |
     * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |
     * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |
     * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |
     * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Sa, Su        | 7     |
     * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |
     * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |
     * |                                 | ee      | 02, 03, ..., 01                   |       |
     * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |
     * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |
     * |                                 | eeeee   | M, T, W, T, F, S, S               |       |
     * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
     * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |
     * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |
     * |                                 | cc      | 02, 03, ..., 01                   |       |
     * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |
     * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |
     * |                                 | ccccc   | M, T, W, T, F, S, S               |       |
     * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Sa, Su        |       |
     * | AM, PM                          | a..aa   | AM, PM                            |       |
     * |                                 | aaa     | am, pm                            |       |
     * |                                 | aaaa    | a.m., p.m.                        | 2     |
     * |                                 | aaaaa   | a, p                              |       |
     * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |
     * |                                 | bbb     | am, pm, noon, midnight            |       |
     * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |
     * |                                 | bbbbb   | a, p, n, mi                       |       |
     * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |
     * |                                 | BBBB    | at night, in the morning, ...     | 2     |
     * |                                 | BBBBB   | at night, in the morning, ...     |       |
     * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |
     * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |
     * |                                 | hh      | 01, 02, ..., 11, 12               |       |
     * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |
     * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |
     * |                                 | HH      | 00, 01, 02, ..., 23               |       |
     * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |
     * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |
     * |                                 | KK      | 01, 02, ..., 11, 00               |       |
     * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |
     * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |
     * |                                 | kk      | 24, 01, 02, ..., 23               |       |
     * | Minute                          | m       | 0, 1, ..., 59                     |       |
     * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |
     * |                                 | mm      | 00, 01, ..., 59                   |       |
     * | Second                          | s       | 0, 1, ..., 59                     |       |
     * |                                 | so      | 0th, 1st, ..., 59th               | 7     |
     * |                                 | ss      | 00, 01, ..., 59                   |       |
     * | Fraction of second              | S       | 0, 1, ..., 9                      |       |
     * |                                 | SS      | 00, 01, ..., 99                   |       |
     * |                                 | SSS     | 000, 001, ..., 999                |       |
     * |                                 | SSSS    | ...                               | 3     |
     * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |
     * |                                 | XX      | -0800, +0530, Z                   |       |
     * |                                 | XXX     | -08:00, +05:30, Z                 |       |
     * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |
     * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |
     * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |
     * |                                 | xx      | -0800, +0530, +0000               |       |
     * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |
     * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |
     * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |
     * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |
     * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |
     * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |
     * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |
     * | Seconds timestamp               | t       | 512969520                         | 7     |
     * |                                 | tt      | ...                               | 3,7   |
     * | Milliseconds timestamp          | T       | 512969520900                      | 7     |
     * |                                 | TT      | ...                               | 3,7   |
     * | Long localized date             | P       | 04/29/1453                        | 7     |
     * |                                 | PP      | Apr 29, 1453                      | 7     |
     * |                                 | PPP     | April 29th, 1453                  | 7     |
     * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |
     * | Long localized time             | p       | 12:00 AM                          | 7     |
     * |                                 | pp      | 12:00:00 AM                       | 7     |
     * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |
     * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |
     * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |
     * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |
     * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |
     * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |
     * Notes:
     * 1. "Formatting" units (e.g. formatting quarter) in the default en-US locale
     *    are the same as "stand-alone" units, but are different in some languages.
     *    "Formatting" units are declined according to the rules of the language
     *    in the context of a date. "Stand-alone" units are always nominative singular:
     *
     *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`
     *
     *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`
     *
     * 2. Any sequence of the identical letters is a pattern, unless it is escaped by
     *    the single quote characters (see below).
     *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)
     *    the output will be the same as default pattern for this unit, usually
     *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units
     *    are marked with "2" in the last column of the table.
     *
     *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`
     *
     *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`
     *
     *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`
     *
     *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`
     *
     *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`
     *
     * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).
     *    The output will be padded with zeros to match the length of the pattern.
     *
     *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`
     *
     * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.
     *    These tokens represent the shortest form of the quarter.
     *
     * 5. The main difference between `y` and `u` patterns are B.C. years:
     *
     *    | Year | `y` | `u` |
     *    |------|-----|-----|
     *    | AC 1 |   1 |   1 |
     *    | BC 1 |   1 |   0 |
     *    | BC 2 |   2 |  -1 |
     *
     *    Also `yy` always returns the last two digits of a year,
     *    while `uu` pads single digit years to 2 characters and returns other years unchanged:
     *
     *    | Year | `yy` | `uu` |
     *    |------|------|------|
     *    | 1    |   01 |   01 |
     *    | 14   |   14 |   14 |
     *    | 376  |   76 |  376 |
     *    | 1453 |   53 | 1453 |
     *
     *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),
     *    except local week-numbering years are dependent on `options.weekStartsOn`
     *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}
     *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).
     *
     * 6. Specific non-location timezones are currently unavailable in `date-fns`,
     *    so right now these tokens fall back to GMT timezones.
     *
     * 7. These patterns are not in the Unicode Technical Standard #35:
     *    - `i`: ISO day of week
     *    - `I`: ISO week of year
     *    - `R`: ISO week-numbering year
     *    - `t`: seconds timestamp
     *    - `T`: milliseconds timestamp
     *    - `o`: ordinal number modifier
     *    - `P`: long localized date
     *    - `p`: long localized time
     *
     * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.
     *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr
     *
     * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.
     *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The second argument is now required for the sake of explicitness.
     *
     *   ```javascript
     *   // Before v2.0.0
     *   format(new Date(2016, 0, 1))
     *
     *   // v2.0.0 onward
     *   format(new Date(2016, 0, 1), "yyyy-MM-dd'T'HH:mm:ss.SSSxxx")
     *   ```
     *
     * - New format string API for `format` function
     *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).
     *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.
     *
     * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.
     *
     * @param {Date|Number} date - the original date
     * @param {String} format - the string of tokens
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is
     * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;
     *   see: https://git.io/fxCyr
     * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;
     *   see: https://git.io/fxCyr
     * @returns {String} the formatted date string
     * @throws {TypeError} 2 arguments required
     * @throws {RangeError} `date` must not be Invalid Date
     * @throws {RangeError} `options.locale` must contain `localize` property
     * @throws {RangeError} `options.locale` must contain `formatLong` property
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
     * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr
     * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr
     * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr
     * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr
     * @throws {RangeError} format string contains an unescaped latin alphabet character
     *
     * @example
     * // Represent 11 February 2014 in middle-endian format:
     * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')
     * //=> '02/11/2014'
     *
     * @example
     * // Represent 2 July 2014 in Esperanto:
     * import { eoLocale } from 'date-fns/locale/eo'
     * var result = format(new Date(2014, 6, 2), "do 'de' MMMM yyyy", {
     *   locale: eoLocale
     * })
     * //=> '2-a de julio 2014'
     *
     * @example
     * // Escape string by single quote characters:
     * var result = format(new Date(2014, 6, 2, 15), "h 'o''clock'")
     * //=> "3 o'clock"
     */

    function format(dirtyDate, dirtyFormatStr, dirtyOptions) {
      requiredArgs(2, arguments);
      var formatStr = String(dirtyFormatStr);
      var options = dirtyOptions || {};
      var locale = options.locale || defaultLocale;
      var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
        throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
      }

      var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;
      var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);
      var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN

      if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {
        throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');
      }

      if (!locale.localize) {
        throw new RangeError('locale must contain localize property');
      }

      if (!locale.formatLong) {
        throw new RangeError('locale must contain formatLong property');
      }

      var originalDate = toDate(dirtyDate);

      if (!isValid(originalDate)) {
        throw new RangeError('Invalid time value');
      } // Convert the date in system timezone to the same date in UTC+00:00 timezone.
      // This ensures that when UTC functions will be implemented, locales will be compatible with them.
      // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376


      var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);
      var utcDate = subMilliseconds(originalDate, timezoneOffset);
      var formatterOptions = {
        firstWeekContainsDate: firstWeekContainsDate,
        weekStartsOn: weekStartsOn,
        locale: locale,
        _originalDate: originalDate
      };
      var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {
        var firstCharacter = substring[0];

        if (firstCharacter === 'p' || firstCharacter === 'P') {
          var longFormatter = longFormatters$1[firstCharacter];
          return longFormatter(substring, locale.formatLong, formatterOptions);
        }

        return substring;
      }).join('').match(formattingTokensRegExp).map(function (substring) {
        // Replace two single quote characters with one single quote character
        if (substring === "''") {
          return "'";
        }

        var firstCharacter = substring[0];

        if (firstCharacter === "'") {
          return cleanEscapedString(substring);
        }

        var formatter = formatters$1[firstCharacter];

        if (formatter) {
          if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {
            throwProtectedError(substring, dirtyFormatStr, dirtyDate);
          }

          if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {
            throwProtectedError(substring, dirtyFormatStr, dirtyDate);
          }

          return formatter(utcDate, substring, locale.localize, formatterOptions);
        }

        if (firstCharacter.match(unescapedLatinCharacterRegExp)) {
          throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');
        }

        return substring;
      }).join('');
      return result;
    }

    function cleanEscapedString(input) {
      return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, "'");
    }

    /**
     * @name getDate
     * @category Day Helpers
     * @summary Get the day of the month of the given date.
     *
     * @description
     * Get the day of the month of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the day of month
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Which day of the month is 29 February 2012?
     * const result = getDate(new Date(2012, 1, 29))
     * //=> 29
     */

    function getDate(dirtyDate) {
      requiredArgs(1, arguments);
      var date = toDate(dirtyDate);
      var dayOfMonth = date.getDate();
      return dayOfMonth;
    }

    /**
     * @name getDay
     * @category Weekday Helpers
     * @summary Get the day of the week of the given date.
     *
     * @description
     * Get the day of the week of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {0|1|2|3|4|5|6} the day of week, 0 represents Sunday
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Which day of the week is 29 February 2012?
     * const result = getDay(new Date(2012, 1, 29))
     * //=> 3
     */

    function getDay(dirtyDate) {
      requiredArgs(1, arguments);
      var date = toDate(dirtyDate);
      var day = date.getDay();
      return day;
    }

    /**
     * @name getMonth
     * @category Month Helpers
     * @summary Get the month of the given date.
     *
     * @description
     * Get the month of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the month
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Which month is 29 February 2012?
     * const result = getMonth(new Date(2012, 1, 29))
     * //=> 1
     */

    function getMonth(dirtyDate) {
      requiredArgs(1, arguments);
      var date = toDate(dirtyDate);
      var month = date.getMonth();
      return month;
    }

    /**
     * @name getWeekYear
     * @category Week-Numbering Year Helpers
     * @summary Get the local week-numbering year of the given date.
     *
     * @description
     * Get the local week-numbering year of the given date.
     * The exact calculation depends on the values of
     * `options.weekStartsOn` (which is the index of the first day of the week)
     * and `options.firstWeekContainsDate` (which is the day of January, which is always in
     * the first week of the week-numbering year)
     *
     * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
     * @returns {Number} the local week-numbering year
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
     *
     * @example
     * // Which week numbering year is 26 December 2004 with the default settings?
     * const result = getWeekYear(new Date(2004, 11, 26))
     * //=> 2005
     *
     * @example
     * // Which week numbering year is 26 December 2004 if week starts on Saturday?
     * const result = getWeekYear(new Date(2004, 11, 26), { weekStartsOn: 6 })
     * //=> 2004
     *
     * @example
     * // Which week numbering year is 26 December 2004 if the first week contains 4 January?
     * const result = getWeekYear(new Date(2004, 11, 26), { firstWeekContainsDate: 4 })
     * //=> 2004
     */
    function getWeekYear(dirtyDate, options) {
      var _options$locale, _options$locale$optio;

      requiredArgs(1, arguments);
      var date = toDate(dirtyDate);
      var year = date.getFullYear();
      var localeFirstWeekContainsDate = options === null || options === void 0 ? void 0 : (_options$locale = options.locale) === null || _options$locale === void 0 ? void 0 : (_options$locale$optio = _options$locale.options) === null || _options$locale$optio === void 0 ? void 0 : _options$locale$optio.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);
      var firstWeekContainsDate = (options === null || options === void 0 ? void 0 : options.firstWeekContainsDate) == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN

      if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {
        throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');
      }

      var firstWeekOfNextYear = new Date(0);
      firstWeekOfNextYear.setFullYear(year + 1, 0, firstWeekContainsDate);
      firstWeekOfNextYear.setHours(0, 0, 0, 0);
      var startOfNextYear = startOfWeek(firstWeekOfNextYear, options);
      var firstWeekOfThisYear = new Date(0);
      firstWeekOfThisYear.setFullYear(year, 0, firstWeekContainsDate);
      firstWeekOfThisYear.setHours(0, 0, 0, 0);
      var startOfThisYear = startOfWeek(firstWeekOfThisYear, options);

      if (date.getTime() >= startOfNextYear.getTime()) {
        return year + 1;
      } else if (date.getTime() >= startOfThisYear.getTime()) {
        return year;
      } else {
        return year - 1;
      }
    }

    /**
     * @name startOfWeekYear
     * @category Week-Numbering Year Helpers
     * @summary Return the start of a local week-numbering year for the given date.
     *
     * @description
     * Return the start of a local week-numbering year.
     * The exact calculation depends on the values of
     * `options.weekStartsOn` (which is the index of the first day of the week)
     * and `options.firstWeekContainsDate` (which is the day of January, which is always in
     * the first week of the week-numbering year)
     *
     * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
     * @returns {Date} the start of a week-numbering year
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
     *
     * @example
     * // The start of an a week-numbering year for 2 July 2005 with default settings:
     * const result = startOfWeekYear(new Date(2005, 6, 2))
     * //=> Sun Dec 26 2004 00:00:00
     *
     * @example
     * // The start of a week-numbering year for 2 July 2005
     * // if Monday is the first day of week
     * // and 4 January is always in the first week of the year:
     * const result = startOfWeekYear(new Date(2005, 6, 2), {
     *   weekStartsOn: 1,
     *   firstWeekContainsDate: 4
     * })
     * //=> Mon Jan 03 2005 00:00:00
     */
    function startOfWeekYear(dirtyDate, dirtyOptions) {
      requiredArgs(1, arguments);
      var options = dirtyOptions || {};
      var locale = options.locale;
      var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;
      var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);
      var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);
      var year = getWeekYear(dirtyDate, dirtyOptions);
      var firstWeek = new Date(0);
      firstWeek.setFullYear(year, 0, firstWeekContainsDate);
      firstWeek.setHours(0, 0, 0, 0);
      var date = startOfWeek(firstWeek, dirtyOptions);
      return date;
    }

    var MILLISECONDS_IN_WEEK = 604800000;
    /**
     * @name getWeek
     * @category Week Helpers
     * @summary Get the local week index of the given date.
     *
     * @description
     * Get the local week index of the given date.
     * The exact calculation depends on the values of
     * `options.weekStartsOn` (which is the index of the first day of the week)
     * and `options.firstWeekContainsDate` (which is the day of January, which is always in
     * the first week of the week-numbering year)
     *
     * Week numbering: https://en.wikipedia.org/wiki/Week#Week_numbering
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @param {Object} [options] - an object with options.
     * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}
     * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)
     * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year
     * @returns {Number} the week
     * @throws {TypeError} 1 argument required
     * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6
     * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7
     *
     * @example
     * // Which week of the local week numbering year is 2 January 2005 with default options?
     * const result = getISOWeek(new Date(2005, 0, 2))
     * //=> 2
     *
     * // Which week of the local week numbering year is 2 January 2005,
     * // if Monday is the first day of the week,
     * // and the first week of the year always contains 4 January?
     * const result = getISOWeek(new Date(2005, 0, 2), {
     *   weekStartsOn: 1,
     *   firstWeekContainsDate: 4
     * })
     * //=> 53
     */

    function getWeek(dirtyDate, options) {
      requiredArgs(1, arguments);
      var date = toDate(dirtyDate);
      var diff = startOfWeek(date, options).getTime() - startOfWeekYear(date, options).getTime(); // Round the number of days to the nearest integer
      // because the number of milliseconds in a week is not constant
      // (e.g. it's different in the week of the daylight saving time clock shift)

      return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;
    }

    /**
     * @name lastDayOfMonth
     * @category Month Helpers
     * @summary Return the last day of a month for the given date.
     *
     * @description
     * Return the last day of a month for the given date.
     * The result will be in the local timezone.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the original date
     * @returns {Date} the last day of a month
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // The last day of a month for 2 September 2014 11:55:00:
     * var result = lastDayOfMonth(new Date(2014, 8, 2, 11, 55, 0))
     * //=> Tue Sep 30 2014 00:00:00
     */

    function lastDayOfMonth(dirtyDate) {
      requiredArgs(1, arguments);
      var date = toDate(dirtyDate);
      var month = date.getMonth();
      date.setFullYear(date.getFullYear(), month + 1, 0);
      date.setHours(0, 0, 0, 0);
      return date;
    }

    /**
     * @name getYear
     * @category Year Helpers
     * @summary Get the year of the given date.
     *
     * @description
     * Get the year of the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the given date
     * @returns {Number} the year
     * @throws {TypeError} 1 argument required
     *
     * @example
     * // Which year is 2 July 2014?
     * const result = getYear(new Date(2014, 6, 2))
     * //=> 2014
     */

    function getYear(dirtyDate) {
      requiredArgs(1, arguments);
      var date = toDate(dirtyDate);
      var year = date.getFullYear();
      return year;
    }

    /**
     * @name subDays
     * @category Day Helpers
     * @summary Subtract the specified number of days from the given date.
     *
     * @description
     * Subtract the specified number of days from the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of days to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the days subtracted
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Subtract 10 days from 1 September 2014:
     * const result = subDays(new Date(2014, 8, 1), 10)
     * //=> Fri Aug 22 2014 00:00:00
     */

    function subDays(dirtyDate, dirtyAmount) {
      requiredArgs(2, arguments);
      var amount = toInteger(dirtyAmount);
      return addDays(dirtyDate, -amount);
    }

    /**
     * @name subMonths
     * @category Month Helpers
     * @summary Subtract the specified number of months from the given date.
     *
     * @description
     * Subtract the specified number of months from the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of months to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the months subtracted
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Subtract 5 months from 1 February 2015:
     * const result = subMonths(new Date(2015, 1, 1), 5)
     * //=> Mon Sep 01 2014 00:00:00
     */

    function subMonths(dirtyDate, dirtyAmount) {
      requiredArgs(2, arguments);
      var amount = toInteger(dirtyAmount);
      return addMonths(dirtyDate, -amount);
    }

    /**
     * @name isEqual
     * @category Common Helpers
     * @summary Are the given dates equal?
     *
     * @description
     * Are the given dates equal?
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} dateLeft - the first date to compare
     * @param {Date|Number} dateRight - the second date to compare
     * @returns {Boolean} the dates are equal
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?
     * var result = isEqual(
     *   new Date(2014, 6, 2, 6, 30, 45, 0),
     *   new Date(2014, 6, 2, 6, 30, 45, 500)
     * )
     * //=> false
     */

    function isEqual(dirtyLeftDate, dirtyRightDate) {
      requiredArgs(2, arguments);
      var dateLeft = toDate(dirtyLeftDate);
      var dateRight = toDate(dirtyRightDate);
      return dateLeft.getTime() === dateRight.getTime();
    }

    /**
     * @name isWithinInterval
     * @category Interval Helpers
     * @summary Is the given date within the interval?
     *
     * @description
     * Is the given date within the interval? (Including start and end.)
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * - The function was renamed from `isWithinRange` to `isWithinInterval`.
     *   This change was made to mirror the use of the word "interval" in standard ISO 8601:2004 terminology:
     *
     *   ```
     *   2.1.3
     *   time interval
     *   part of the time axis limited by two instants
     *   ```
     *
     *   Also, this function now accepts an object with `start` and `end` properties
     *   instead of two arguments as an interval.
     *   This function now throws `RangeError` if the start of the interval is after its end
     *   or if any date in the interval is `Invalid Date`.
     *
     *   ```javascript
     *   // Before v2.0.0
     *
     *   isWithinRange(
     *     new Date(2014, 0, 3),
     *     new Date(2014, 0, 1), new Date(2014, 0, 7)
     *   )
     *
     *   // v2.0.0 onward
     *
     *   isWithinInterval(
     *     new Date(2014, 0, 3),
     *     { start: new Date(2014, 0, 1), end: new Date(2014, 0, 7) }
     *   )
     *   ```
     *
     * @param {Date|Number} date - the date to check
     * @param {Interval} interval - the interval to check
     * @returns {Boolean} the date is within the interval
     * @throws {TypeError} 2 arguments required
     * @throws {RangeError} The start of an interval cannot be after its end
     * @throws {RangeError} Date in interval cannot be `Invalid Date`
     *
     * @example
     * // For the date within the interval:
     * isWithinInterval(new Date(2014, 0, 3), {
     *   start: new Date(2014, 0, 1),
     *   end: new Date(2014, 0, 7)
     * })
     * //=> true
     *
     * @example
     * // For the date outside of the interval:
     * isWithinInterval(new Date(2014, 0, 10), {
     *   start: new Date(2014, 0, 1),
     *   end: new Date(2014, 0, 7)
     * })
     * //=> false
     *
     * @example
     * // For date equal to interval start:
     * isWithinInterval(date, { start, end: date }) // => true
     *
     * @example
     * // For date equal to interval end:
     * isWithinInterval(date, { start: date, end }) // => true
     */
    function isWithinInterval(dirtyDate, interval) {
      requiredArgs(2, arguments);
      var time = toDate(dirtyDate).getTime();
      var startTime = toDate(interval.start).getTime();
      var endTime = toDate(interval.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`

      if (!(startTime <= endTime)) {
        throw new RangeError('Invalid interval');
      }

      return time >= startTime && time <= endTime;
    }

    /**
     * @name subWeeks
     * @category Week Helpers
     * @summary Subtract the specified number of weeks from the given date.
     *
     * @description
     * Subtract the specified number of weeks from the given date.
     *
     * ### v2.0.0 breaking changes:
     *
     * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).
     *
     * @param {Date|Number} date - the date to be changed
     * @param {Number} amount - the amount of weeks to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.
     * @returns {Date} the new date with the weeks subtracted
     * @throws {TypeError} 2 arguments required
     *
     * @example
     * // Subtract 4 weeks from 1 September 2014:
     * const result = subWeeks(new Date(2014, 8, 1), 4)
     * //=> Mon Aug 04 2014 00:00:00
     */

    function subWeeks(dirtyDate, dirtyAmount) {
      requiredArgs(2, arguments);
      var amount = toInteger(dirtyAmount);
      return addWeeks(dirtyDate, -amount);
    }

    /**
     * @typedef {() => void} Callback
     *
     * TODO: Remove this typedef and inline `() => void` type.
     *
     * This typedef is used so that a descriptive type is provided in our
     * automatically generated documentation.
     *
     * An in-line type `() => void` would be preferable, but the generated
     * documentation is `null` in that case.
     *
     * @see https://github.com/WordPress/gutenberg/issues/18045
     */

    /**
     * Specify a function to execute when the DOM is fully loaded.
     *
     * @param {Callback} callback A function to execute after the DOM is ready.
     *
     * @example
     * ```js
     * import domReady from '@wordpress/dom-ready';
     *
     * domReady( function() {
     * 	//do something after DOM loads.
     * } );
     * ```
     *
     * @return {void}
     */
    function domReady(callback) {
      if (typeof document === 'undefined') {
        return;
      }

      if (document.readyState === 'complete' || // DOMContentLoaded + Images/Styles/etc loaded, so we call directly.
      document.readyState === 'interactive' // DOMContentLoaded fires at this point, so we call directly.
      ) {
          return void callback();
        } // DOMContentLoaded has not fired yet, delay callback until then.


      document.addEventListener('DOMContentLoaded', callback);
    }

    var Utils = /** @class */ (function () {
        function Utils() {
            this.weekname = {
                Mo: '星期一',
                Tu: '星期二',
                We: '星期三',
                Th: '星期四',
                Fr: '星期五',
                Sa: '星期六',
                Su: '星期日'
            };
            this.format = format;
            this.onReady = domReady;
        }
        Utils.prototype.wrapAll = function (elm, elms) {
            var el = elms.length ? elms[0] : elms;
            var parent = el.parentNode;
            var sibling = el.nextSibling;
            elm.appendChild(el);
            while (elms.length) {
                elm.appendChild(elms[0]);
            }
            if (sibling) {
                parent.insertBefore(elm, sibling);
            }
            else {
                parent.appendChild(elm);
            }
        };
        Utils.prototype.wrap = function (elm, elms) {
            if (!elms.length)
                elms = [elms];
            for (var i = elms.length - 1; i >= 0; i--) {
                var child = (i > 0) ? elm.cloneNode(true) : elm;
                var el = elms[i];
                var parent = el.parentNode;
                var sibling = el.nextSibling;
                child.appendChild(el);
                if (sibling) {
                    parent.insertBefore(child, sibling);
                }
                else {
                    parent.appendChild(child);
                }
            }
        };
        /**
         * 将html转换为dom
         * @param html
         * @returns
         */
        Utils.prototype.parseHtmlToDom = function (html) {
            var dom = document.createElement('div');
            dom.innerHTML = html;
            return dom.childNodes[0];
        };
        /**
         * 将数字转化成字符串，小于10自动添加一个0
         * @param num
         * @returns
         */
        Utils.prototype.parseNumberToString = function (num) {
            return num >= 10 ? "" + num : "0" + num;
        };
        /**
         * 获取当前页面最大的z-index
         * @returns
         */
        Utils.prototype.getZindex = function () {
            var doms = document.querySelectorAll("*");
            var zindex = 100;
            doms.forEach(function (dom) {
                var czindex = parseInt(window.getComputedStyle(dom, null).zIndex);
                czindex = czindex ? czindex : 1;
                zindex = zindex > czindex ? zindex : czindex;
            });
            return zindex;
        };
        Utils.prototype._typeof = function (obj) {
            return Object.prototype.toString.call(obj).slice(8, -1).toLowerCase();
        };
        Utils.prototype.isPlainObject = function (obj) {
            return this._typeof(obj) === 'object';
        };
        Utils.prototype.isCascade = function (data) {
            return data[0] && this.isPlainObject(data[0]);
        };
        Utils.prototype.isArray = function (val) {
            return Object.prototype.toString.call(val) === '[object Array]';
        };
        /**
         * 将多层级数组扁平化
         * @param source
         * @param value
         * @param fields
         * @returns
         */
        Utils.prototype.ArraytoTree = function (source, value, fields) {
            var index = 0;
            var selected = [];
            var data = [];
            var indexs = [];
            var current = this.isCascade(source) ? source : source[index];
            while (current && this.isArray(current) && current.length) {
                data.push(current);
                if (value && value[index] !== undefined) {
                    current.some(function (item, i) {
                        if (item[fields['name']] == value[index]) {
                            selected[index] = item;
                            indexs[index] = i;
                            return true;
                        }
                    });
                }
                if (!selected[index]) {
                    selected[index] = current[0];
                    indexs[index] = 0;
                }
                index++;
                current = this.isCascade(source) ? selected[selected.length - 1].children : source[index];
            }
            return {
                data: data,
                value: selected,
                indexs: indexs
            };
        };
        /**
         * 获取父层dom
         * @param el
         * @param cls
         * @returns
         */
        Utils.prototype.parents = function (el, cls) {
            var dom;
            var getParent = function (el, cls) {
                var parent = el.parentNode;
                if (parent.className === cls || parent.tagName === 'BODY') {
                    dom = parent;
                }
                else {
                    getParent(parent, cls);
                }
            };
            getParent(el, cls);
            return dom;
        };
        /**
         * 获取当前元素距离顶部的坐标。
         * @param curEle
         * @returns
         */
        Utils.prototype.offset = function (curEle) {
            var totalLeft = null, totalTop = null, par = curEle.offsetParent;
            totalLeft += curEle.offsetLeft;
            totalTop += curEle.offsetTop;
            while (par) {
                if (navigator.userAgent.indexOf("MSIE 8.0") === -1) {
                    //累加父级参照物的边框
                    totalLeft += par.clientLeft;
                    totalTop += par.clientTop;
                }
                totalLeft += par.offsetLeft;
                totalTop += par.offsetTop;
                par = par.offsetParent;
            }
            return {
                left: totalLeft,
                top: totalTop
            };
        };
        /**
         * 获取当前元素的transform数据
         * @param el
         * @returns
         */
        Utils.prototype.getTransform = function (el) {
            var style = window.getComputedStyle(el);
            var transform = style.transform || style.webkitTransform;
            var arr = transform.slice(7, transform.length - 1).split(', ');
            var result = {
                scaleX: parseInt(arr[0]) || 0,
                skew: parseInt(arr[1]) || 0,
                rotate: parseInt(arr[2]) || 0,
                scaleY: parseInt(arr[3]) || 0,
                translateX: parseInt(arr[4]) || 0,
                translateY: parseInt(arr[5]) || 0
            };
            return result;
        };
        Utils.prototype.getRandomNumberByRange = function (start, end) {
            return Math.round(Math.random() * (end - start) + start);
        };
        Utils.prototype.scrollIntoView = function (el, offset) {
            var page = this.parents(el, pcss['page']);
            var section = page.querySelector("." + pcss['section']);
            var ph = page.offsetHeight;
            var sh = section.offsetHeight;
            var eh = el.offsetHeight;
            var h = offset > 0 ? ph - offset : sh;
            var st = this.offset(el).top - this.offset(offset > 0 ? page : section).top;
            setTimeout(function () {
                section.scrollTop = st - h + eh;
            }, 100);
        };
        Utils.prototype.children = function (el, exp) {
            var children = el.childNodes;
            var items = [];
            children.forEach(function (child) {
                var cc = child;
                if (!exp) {
                    if (cc.tagName) {
                        items.push(cc);
                    }
                }
                else if (exp.indexOf('.') >= 0 && cc.className.indexOf(exp) >= 0 || exp.indexOf('#') >= 0 && cc.id === exp.replace('#', '')) {
                    items.push(cc);
                }
                else {
                    if (cc.tagName === exp.toUpperCase()) {
                        items.push(cc);
                    }
                }
            });
            return items;
        };
        Utils.prototype.generateArray = function (start, end, unit, reverse) {
            var array = [];
            for (var i = start; i <= end; i++) {
                array.push({
                    name: "" + this.parseNumberToString(i),
                    unit: unit
                });
            }
            return reverse ? array.reverse() : array;
        };
        Utils.prototype.isObject = function (item) {
            return (item && typeof item === 'object' && !Array.isArray(item));
        };
        Utils.prototype.extend = function (target, source) {
            var _this = this;
            var output = Object.assign({}, target);
            if (this.isObject(target) && this.isObject(source)) {
                Object.keys(source).forEach(function (key) {
                    var _a, _b;
                    if (_this.isObject(source[key])) {
                        if (!(key in target))
                            Object.assign(output, (_a = {}, _a[key] = source[key], _a));
                        else
                            output[key] = _this.extend(target[key], source[key]);
                    }
                    else {
                        Object.assign(output, (_b = {}, _b[key] = source[key], _b));
                    }
                });
            }
            return output;
        };
        return Utils;
    }());

    var default_1$1u = /** @class */ (function () {
        function default_1() {
        }
        return default_1;
    }());

    var pug = (function(exports) {

      var pug_has_own_property = Object.prototype.hasOwnProperty;

      /**
       * Merge two attribute objects giving precedence
       * to values in object `b`. Classes are special-cased
       * allowing for arrays and merging/joining appropriately
       * resulting in a string.
       *
       * @param {Object} a
       * @param {Object} b
       * @return {Object} a
       * @api private
       */

      exports.merge = pug_merge;
      function pug_merge(a, b) {
        if (arguments.length === 1) {
          var attrs = a[0];
          for (var i = 1; i < a.length; i++) {
            attrs = pug_merge(attrs, a[i]);
          }
          return attrs;
        }

        for (var key in b) {
          if (key === 'class') {
            var valA = a[key] || [];
            a[key] = (Array.isArray(valA) ? valA : [valA]).concat(b[key] || []);
          } else if (key === 'style') {
            var valA = pug_style(a[key]);
            valA = valA && valA[valA.length - 1] !== ';' ? valA + ';' : valA;
            var valB = pug_style(b[key]);
            valB = valB && valB[valB.length - 1] !== ';' ? valB + ';' : valB;
            a[key] = valA + valB;
          } else {
            a[key] = b[key];
          }
        }

        return a;
      }
      /**
       * Process array, object, or string as a string of classes delimited by a space.
       *
       * If `val` is an array, all members of it and its subarrays are counted as
       * classes. If `escaping` is an array, then whether or not the item in `val` is
       * escaped depends on the corresponding item in `escaping`. If `escaping` is
       * not an array, no escaping is done.
       *
       * If `val` is an object, all the keys whose value is truthy are counted as
       * classes. No escaping is done.
       *
       * If `val` is a string, it is counted as a class. No escaping is done.
       *
       * @param {(Array.<string>|Object.<string, boolean>|string)} val
       * @param {?Array.<string>} escaping
       * @return {String}
       */
      exports.classes = pug_classes;
      function pug_classes_array(val, escaping) {
        var classString = '', className, padding = '', escapeEnabled = Array.isArray(escaping);
        for (var i = 0; i < val.length; i++) {
          className = pug_classes(val[i]);
          if (!className) continue;
          escapeEnabled && escaping[i] && (className = pug_escape(className));
          classString = classString + padding + className;
          padding = ' ';
        }
        return classString;
      }
      function pug_classes_object(val) {
        var classString = '', padding = '';
        for (var key in val) {
          if (key && val[key] && pug_has_own_property.call(val, key)) {
            classString = classString + padding + key;
            padding = ' ';
          }
        }
        return classString;
      }
      function pug_classes(val, escaping) {
        if (Array.isArray(val)) {
          return pug_classes_array(val, escaping);
        } else if (val && typeof val === 'object') {
          return pug_classes_object(val);
        } else {
          return val || '';
        }
      }

      /**
       * Convert object or string to a string of CSS styles delimited by a semicolon.
       *
       * @param {(Object.<string, string>|string)} val
       * @return {String}
       */

      exports.style = pug_style;
      function pug_style(val) {
        if (!val) return '';
        if (typeof val === 'object') {
          var out = '';
          for (var style in val) {
            /* istanbul ignore else */
            if (pug_has_own_property.call(val, style)) {
              out = out + style + ':' + val[style] + ';';
            }
          }
          return out;
        } else {
          return val + '';
        }
      }
      /**
       * Render the given attribute.
       *
       * @param {String} key
       * @param {String} val
       * @param {Boolean} escaped
       * @param {Boolean} terse
       * @return {String}
       */
      exports.attr = pug_attr;
      function pug_attr(key, val, escaped, terse) {
        if (val === false || val == null || !val && (key === 'class' || key === 'style')) {
          return '';
        }
        if (val === true) {
          return ' ' + (terse ? key : key + '="' + key + '"');
        }
        var type = typeof val;
        if ((type === 'object' || type === 'function') && typeof val.toJSON === 'function') {
          val = val.toJSON();
        }
        if (typeof val !== 'string') {
          val = JSON.stringify(val);
          if (!escaped && val.indexOf('"') !== -1) {
            return ' ' + key + '=\'' + val.replace(/'/g, '&#39;') + '\'';
          }
        }
        if (escaped) val = pug_escape(val);
        return ' ' + key + '="' + val + '"';
      }
      /**
       * Render the given attributes object.
       *
       * @param {Object} obj
       * @param {Object} terse whether to use HTML5 terse boolean attributes
       * @return {String}
       */
      exports.attrs = pug_attrs;
      function pug_attrs(obj, terse){
        var attrs = '';

        for (var key in obj) {
          if (pug_has_own_property.call(obj, key)) {
            var val = obj[key];

            if ('class' === key) {
              val = pug_classes(val);
              attrs = pug_attr(key, val, false, terse) + attrs;
              continue;
            }
            if ('style' === key) {
              val = pug_style(val);
            }
            attrs += pug_attr(key, val, false, terse);
          }
        }

        return attrs;
      }
      /**
       * Escape the given string of `html`.
       *
       * @param {String} html
       * @return {String}
       * @api private
       */

      var pug_match_html = /["&<>]/;
      exports.escape = pug_escape;
      function pug_escape(_html){
        var html = '' + _html;
        var regexResult = pug_match_html.exec(html);
        if (!regexResult) return _html;

        var result = '';
        var i, lastIndex, escape;
        for (i = regexResult.index, lastIndex = 0; i < html.length; i++) {
          switch (html.charCodeAt(i)) {
            case 34: escape = '&quot;'; break;
            case 38: escape = '&amp;'; break;
            case 60: escape = '&lt;'; break;
            case 62: escape = '&gt;'; break;
            default: continue;
          }
          if (lastIndex !== i) result += html.substring(lastIndex, i);
          lastIndex = i + 1;
          result += escape;
        }
        if (lastIndex !== i) return result + html.substring(lastIndex, i);
        else return result;
      }
      /**
       * Re-throw the given `err` in context to the
       * the pug in `filename` at the given `lineno`.
       *
       * @param {Error} err
       * @param {String} filename
       * @param {String} lineno
       * @param {String} str original source
       * @api private
       */

      exports.rethrow = pug_rethrow;
      function pug_rethrow(err, filename, lineno, str){
        if (!(err instanceof Error)) throw err;
        if ((typeof window != 'undefined' || !filename) && !str) {
          err.message += ' on line ' + lineno;
          throw err;
        }
        try {
          str = str || require('fs').readFileSync(filename, 'utf8');
        } catch (ex) {
          pug_rethrow(err, null, lineno);
        }
        var context = 3
          , lines = str.split('\n')
          , start = Math.max(lineno - context, 0)
          , end = Math.min(lines.length, lineno + context);

        // Error context
        var context = lines.slice(start, end).map(function(line, i){
          var curr = i + start + 1;
          return (curr == lineno ? '  > ' : '    ')
            + curr
            + '| '
            + line;
        }).join('\n');

        // Alter exception message
        err.path = filename;
        err.message = (filename || 'Pug') + ':' + lineno
          + '\n' + context + '\n\n' + err.message;
        throw err;
      }
      return exports
    })({});

    function tpl$J(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar']], [true]), false, true)+pug.attr("direction", t.opt.direction, true, true)+pug.attr("type", t.opt.type, true, true)+pug.attr("term", t.opt.term, true, true)+pug.attr("lunar", t.opt.lunar, true, true)+pug.attr("holiday", t.opt.holiday, true, true)+pug.attr("style", pug.style(`height:${t.opt.type === 'month' ? t.opt.height + 'px' : 'auto'}`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-head']], [true]), false, true)) + "\u003E";
    if (t.opt.head.indexOf('title') >= 0) {
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['calendar-title']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.data.title.value) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    }
    if (t.opt.head.indexOf('indicate') >= 0) {
    if (t.opt.type === 'week') {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-indicate']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '第'+t.data.title.week+'周') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    else {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-indicate']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.data.title.space) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    }
    if (t.opt.head.indexOf('today') >= 0 || t.opt.head.indexOf('prev') >= 0 || t.opt.head.indexOf('next') >= 0 || t.opt.head.indexOf('type') >= 0) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-tools']], [true]), false, true)) + "\u003E";
    if (t.opt.head.indexOf('prev') >= 0) {
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\" action=\"onprev\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-point-left\" action=\"onprev\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    if (t.opt.head.indexOf('next') >= 0) {
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\" action=\"onnext\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-point-right\" action=\"onnext\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    if (t.opt.head.indexOf('today') >= 0) {
    pug_html = pug_html + "\u003Cspan" + (pug.attr("class", pug.classes([css['calendar-today']], [true]), false, true)+" action=\"onToday\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '今') ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    }
    if (t.opt.head.indexOf('type') >= 0) {
    pug_html = pug_html + "\u003Cspan" + (pug.attr("class", pug.classes([css['calendar-today']], [true]), false, true)+" action=\"onType\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.type === 'month' ? '周' : '月') ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cul" + (pug.attr("class", pug.classes([css['calendar-name']], [true]), false, true)) + "\u003E";
    // iterate t.data.names
    ;(function(){
      var $$obj = t.data.names;
      if ('number' == typeof $$obj.length) {
          for (var pug_index0 = 0, $$l = $$obj.length; pug_index0 < $$l; pug_index0++) {
            var item = $$obj[pug_index0];
    pug_html = pug_html + "\u003Cli\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item) ? "" : pug_interp)) + "\u003C\u002Fli\u003E";
          }
      } else {
        var $$l = 0;
        for (var pug_index0 in $$obj) {
          $$l++;
          var item = $$obj[pug_index0];
    pug_html = pug_html + "\u003Cli\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item) ? "" : pug_interp)) + "\u003C\u002Fli\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Ful\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-content']], [true]), false, true)+pug.attr("style", pug.style(`width:${t.opt.direction === 'vertical' ? 'auto' : t.width * 3 + 'px'}`), true, true)) + "\u003E";
    if (t.opt.type === 'month') {
    // iterate t.data.data
    ;(function(){
      var $$obj = t.data.data;
      if ('number' == typeof $$obj.length) {
          for (var m = 0, $$l = $$obj.length; m < $$l; m++) {
            var month = $$obj[m];
    if (t.opt.direction === 'vertical') {
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['calendar-title']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = month.title) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    }
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-month']], [true]), false, true)+pug.attr("style", pug.style(`width: ${t.opt.direction === 'vertical' ? 'auto' : t.width + 'px'}`), true, true)+pug.attr("title", month.title, true, true)) + "\u003E";
    // iterate month.data
    ;(function(){
      var $$obj = month.data;
      if ('number' == typeof $$obj.length) {
          for (var w = 0, $$l = $$obj.length; w < $$l; w++) {
            var week = $$obj[w];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-week']], [true]), false, true)) + "\u003E";
    // iterate week.data
    ;(function(){
      var $$obj = week.data;
      if ('number' == typeof $$obj.length) {
          for (var d = 0, $$l = $$obj.length; d < $$l; d++) {
            var day = $$obj[d];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-day']], [true]), false, true)+pug.attr("disabled", day.disabled, true, true)+pug.attr("active", day.active, true, true)+pug.attr("isin", day.isIn, true, true)+pug.attr("first", day.first, true, true)+pug.attr("end", day.end, true, true)+pug.attr("date", day.date, true, true)+pug.attr("today", day.today, true, true)+pug.attr("work", day.work, true, true)+pug.attr("rest", day.isRest, true, true)+pug.attr("isday", day.isday, true, true)) + "\u003E";
    if (day.work) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '班') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.isRest) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '休') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-label']], [true]), false, true)+pug.attr("date", day.date, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.day) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    if (day.holiday.length) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"holiday\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.holiday[0]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.term) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"term\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.term) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (t.opt.lunar) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"lunar\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `${day.lunar.date === 1 ? day.lunar.month + '月' : day.lunar.day}`) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.first) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '开始') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.end) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '结束') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var d in $$obj) {
          $$l++;
          var day = $$obj[d];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-day']], [true]), false, true)+pug.attr("disabled", day.disabled, true, true)+pug.attr("active", day.active, true, true)+pug.attr("isin", day.isIn, true, true)+pug.attr("first", day.first, true, true)+pug.attr("end", day.end, true, true)+pug.attr("date", day.date, true, true)+pug.attr("today", day.today, true, true)+pug.attr("work", day.work, true, true)+pug.attr("rest", day.isRest, true, true)+pug.attr("isday", day.isday, true, true)) + "\u003E";
    if (day.work) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '班') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.isRest) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '休') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-label']], [true]), false, true)+pug.attr("date", day.date, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.day) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    if (day.holiday.length) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"holiday\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.holiday[0]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.term) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"term\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.term) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (t.opt.lunar) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"lunar\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `${day.lunar.date === 1 ? day.lunar.month + '月' : day.lunar.day}`) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.first) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '开始') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.end) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '结束') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var w in $$obj) {
          $$l++;
          var week = $$obj[w];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-week']], [true]), false, true)) + "\u003E";
    // iterate week.data
    ;(function(){
      var $$obj = week.data;
      if ('number' == typeof $$obj.length) {
          for (var d = 0, $$l = $$obj.length; d < $$l; d++) {
            var day = $$obj[d];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-day']], [true]), false, true)+pug.attr("disabled", day.disabled, true, true)+pug.attr("active", day.active, true, true)+pug.attr("isin", day.isIn, true, true)+pug.attr("first", day.first, true, true)+pug.attr("end", day.end, true, true)+pug.attr("date", day.date, true, true)+pug.attr("today", day.today, true, true)+pug.attr("work", day.work, true, true)+pug.attr("rest", day.isRest, true, true)+pug.attr("isday", day.isday, true, true)) + "\u003E";
    if (day.work) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '班') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.isRest) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '休') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-label']], [true]), false, true)+pug.attr("date", day.date, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.day) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    if (day.holiday.length) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"holiday\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.holiday[0]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.term) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"term\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.term) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (t.opt.lunar) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"lunar\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `${day.lunar.date === 1 ? day.lunar.month + '月' : day.lunar.day}`) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.first) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '开始') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.end) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '结束') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var d in $$obj) {
          $$l++;
          var day = $$obj[d];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-day']], [true]), false, true)+pug.attr("disabled", day.disabled, true, true)+pug.attr("active", day.active, true, true)+pug.attr("isin", day.isIn, true, true)+pug.attr("first", day.first, true, true)+pug.attr("end", day.end, true, true)+pug.attr("date", day.date, true, true)+pug.attr("today", day.today, true, true)+pug.attr("work", day.work, true, true)+pug.attr("rest", day.isRest, true, true)+pug.attr("isday", day.isday, true, true)) + "\u003E";
    if (day.work) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '班') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.isRest) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '休') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-label']], [true]), false, true)+pug.attr("date", day.date, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.day) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    if (day.holiday.length) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"holiday\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.holiday[0]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.term) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"term\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.term) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (t.opt.lunar) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"lunar\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `${day.lunar.date === 1 ? day.lunar.month + '月' : day.lunar.day}`) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.first) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '开始') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.end) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '结束') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var m in $$obj) {
          $$l++;
          var month = $$obj[m];
    if (t.opt.direction === 'vertical') {
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['calendar-title']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = month.title) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    }
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-month']], [true]), false, true)+pug.attr("style", pug.style(`width: ${t.opt.direction === 'vertical' ? 'auto' : t.width + 'px'}`), true, true)+pug.attr("title", month.title, true, true)) + "\u003E";
    // iterate month.data
    ;(function(){
      var $$obj = month.data;
      if ('number' == typeof $$obj.length) {
          for (var w = 0, $$l = $$obj.length; w < $$l; w++) {
            var week = $$obj[w];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-week']], [true]), false, true)) + "\u003E";
    // iterate week.data
    ;(function(){
      var $$obj = week.data;
      if ('number' == typeof $$obj.length) {
          for (var d = 0, $$l = $$obj.length; d < $$l; d++) {
            var day = $$obj[d];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-day']], [true]), false, true)+pug.attr("disabled", day.disabled, true, true)+pug.attr("active", day.active, true, true)+pug.attr("isin", day.isIn, true, true)+pug.attr("first", day.first, true, true)+pug.attr("end", day.end, true, true)+pug.attr("date", day.date, true, true)+pug.attr("today", day.today, true, true)+pug.attr("work", day.work, true, true)+pug.attr("rest", day.isRest, true, true)+pug.attr("isday", day.isday, true, true)) + "\u003E";
    if (day.work) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '班') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.isRest) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '休') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-label']], [true]), false, true)+pug.attr("date", day.date, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.day) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    if (day.holiday.length) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"holiday\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.holiday[0]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.term) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"term\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.term) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (t.opt.lunar) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"lunar\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `${day.lunar.date === 1 ? day.lunar.month + '月' : day.lunar.day}`) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.first) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '开始') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.end) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '结束') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var d in $$obj) {
          $$l++;
          var day = $$obj[d];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-day']], [true]), false, true)+pug.attr("disabled", day.disabled, true, true)+pug.attr("active", day.active, true, true)+pug.attr("isin", day.isIn, true, true)+pug.attr("first", day.first, true, true)+pug.attr("end", day.end, true, true)+pug.attr("date", day.date, true, true)+pug.attr("today", day.today, true, true)+pug.attr("work", day.work, true, true)+pug.attr("rest", day.isRest, true, true)+pug.attr("isday", day.isday, true, true)) + "\u003E";
    if (day.work) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '班') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.isRest) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '休') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-label']], [true]), false, true)+pug.attr("date", day.date, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.day) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    if (day.holiday.length) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"holiday\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.holiday[0]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.term) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"term\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.term) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (t.opt.lunar) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"lunar\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `${day.lunar.date === 1 ? day.lunar.month + '月' : day.lunar.day}`) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.first) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '开始') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.end) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '结束') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var w in $$obj) {
          $$l++;
          var week = $$obj[w];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-week']], [true]), false, true)) + "\u003E";
    // iterate week.data
    ;(function(){
      var $$obj = week.data;
      if ('number' == typeof $$obj.length) {
          for (var d = 0, $$l = $$obj.length; d < $$l; d++) {
            var day = $$obj[d];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-day']], [true]), false, true)+pug.attr("disabled", day.disabled, true, true)+pug.attr("active", day.active, true, true)+pug.attr("isin", day.isIn, true, true)+pug.attr("first", day.first, true, true)+pug.attr("end", day.end, true, true)+pug.attr("date", day.date, true, true)+pug.attr("today", day.today, true, true)+pug.attr("work", day.work, true, true)+pug.attr("rest", day.isRest, true, true)+pug.attr("isday", day.isday, true, true)) + "\u003E";
    if (day.work) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '班') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.isRest) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '休') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-label']], [true]), false, true)+pug.attr("date", day.date, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.day) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    if (day.holiday.length) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"holiday\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.holiday[0]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.term) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"term\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.term) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (t.opt.lunar) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"lunar\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `${day.lunar.date === 1 ? day.lunar.month + '月' : day.lunar.day}`) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.first) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '开始') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.end) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '结束') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var d in $$obj) {
          $$l++;
          var day = $$obj[d];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-day']], [true]), false, true)+pug.attr("disabled", day.disabled, true, true)+pug.attr("active", day.active, true, true)+pug.attr("isin", day.isIn, true, true)+pug.attr("first", day.first, true, true)+pug.attr("end", day.end, true, true)+pug.attr("date", day.date, true, true)+pug.attr("today", day.today, true, true)+pug.attr("work", day.work, true, true)+pug.attr("rest", day.isRest, true, true)+pug.attr("isday", day.isday, true, true)) + "\u003E";
    if (day.work) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '班') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.isRest) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '休') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-label']], [true]), false, true)+pug.attr("date", day.date, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.day) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    if (day.holiday.length) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"holiday\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.holiday[0]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.term) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"term\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.term) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (t.opt.lunar) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"lunar\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `${day.lunar.date === 1 ? day.lunar.month + '月' : day.lunar.day}`) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.first) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '开始') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.end) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '结束') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    }
    else {
    // iterate t.data.data
    ;(function(){
      var $$obj = t.data.data;
      if ('number' == typeof $$obj.length) {
          for (var w = 0, $$l = $$obj.length; w < $$l; w++) {
            var week = $$obj[w];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-week']], [true]), false, true)+pug.attr("value", week.week, true, true)) + "\u003E";
    // iterate week.data
    ;(function(){
      var $$obj = week.data;
      if ('number' == typeof $$obj.length) {
          for (var d = 0, $$l = $$obj.length; d < $$l; d++) {
            var day = $$obj[d];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-day']], [true]), false, true)+pug.attr("active", day.active, true, true)+pug.attr("date", day.date, true, true)+pug.attr("work", day.work, true, true)+pug.attr("rest", day.isRest, true, true)+pug.attr("today", day.today, true, true)+pug.attr("isday", day.isday, true, true)) + "\u003E";
    if (day.work) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '班') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.isRest) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '休') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-label']], [true]), false, true)+pug.attr("date", day.date, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.day) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    if (day.holiday.length) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"holiday\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.holiday[0]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.term) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"term\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.term) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (t.opt.lunar) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"lunar\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `${day.lunar.date === 1 ? day.lunar.month + '月' : day.lunar.day}`) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var d in $$obj) {
          $$l++;
          var day = $$obj[d];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-day']], [true]), false, true)+pug.attr("active", day.active, true, true)+pug.attr("date", day.date, true, true)+pug.attr("work", day.work, true, true)+pug.attr("rest", day.isRest, true, true)+pug.attr("today", day.today, true, true)+pug.attr("isday", day.isday, true, true)) + "\u003E";
    if (day.work) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '班') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.isRest) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '休') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-label']], [true]), false, true)+pug.attr("date", day.date, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.day) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    if (day.holiday.length) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"holiday\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.holiday[0]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.term) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"term\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.term) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (t.opt.lunar) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"lunar\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `${day.lunar.date === 1 ? day.lunar.month + '月' : day.lunar.day}`) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var w in $$obj) {
          $$l++;
          var week = $$obj[w];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-week']], [true]), false, true)+pug.attr("value", week.week, true, true)) + "\u003E";
    // iterate week.data
    ;(function(){
      var $$obj = week.data;
      if ('number' == typeof $$obj.length) {
          for (var d = 0, $$l = $$obj.length; d < $$l; d++) {
            var day = $$obj[d];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-day']], [true]), false, true)+pug.attr("active", day.active, true, true)+pug.attr("date", day.date, true, true)+pug.attr("work", day.work, true, true)+pug.attr("rest", day.isRest, true, true)+pug.attr("today", day.today, true, true)+pug.attr("isday", day.isday, true, true)) + "\u003E";
    if (day.work) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '班') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.isRest) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '休') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-label']], [true]), false, true)+pug.attr("date", day.date, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.day) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    if (day.holiday.length) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"holiday\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.holiday[0]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.term) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"term\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.term) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (t.opt.lunar) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"lunar\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `${day.lunar.date === 1 ? day.lunar.month + '月' : day.lunar.day}`) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var d in $$obj) {
          $$l++;
          var day = $$obj[d];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['calendar-day']], [true]), false, true)+pug.attr("active", day.active, true, true)+pug.attr("date", day.date, true, true)+pug.attr("work", day.work, true, true)+pug.attr("rest", day.isRest, true, true)+pug.attr("today", day.today, true, true)+pug.attr("isday", day.isday, true, true)) + "\u003E";
    if (day.work) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '班') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.isRest) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-tag']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '休') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-label']], [true]), false, true)+pug.attr("date", day.date, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.day) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    if (day.holiday.length) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"holiday\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.holiday[0]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (day.term) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"term\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = day.term) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (t.opt.lunar) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['calendar-info']], [true]), false, true)+" type=\"lunar\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `${day.lunar.date === 1 ? day.lunar.month + '月' : day.lunar.day}`) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var calendar = "v-calendar";
    var css$O = {
    	calendar: calendar,
    	"calendar-radio": "v-calendar-radio",
    	"calendar-indicate": "v-calendar-indicate",
    	"calendar-title": "v-calendar-title",
    	"calendar-head": "v-calendar-head",
    	"calendar-tools": "v-calendar-tools",
    	"calendar-today": "v-calendar-today",
    	"calendar-content": "v-calendar-content",
    	"calendar-name": "v-calendar-name",
    	"calendar-month": "v-calendar-month",
    	"calendar-week": "v-calendar-week",
    	"calendar-day": "v-calendar-day",
    	"calendar-tag": "v-calendar-tag",
    	"calendar-info": "v-calendar-info",
    	"calendar-tip": "v-calendar-tip",
    	"calendar-label": "v-calendar-label"
    };

    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

    function createCommonjsModule(fn, module) {
    	return module = { exports: {} }, fn(module, module.exports), module.exports;
    }

    var lunar = createCommonjsModule(function (module) {
    (function(root,factory){
      if(module.exports){
        module.exports = factory();
      }else {
        var o = factory();
        for(var i in o){
          root[i] = o[i];
        }
      }
    })(commonjsGlobal,function(){
      var ExactDate = (function(){
        return {
          _:function(date,y,m,d){
            if(y<100){
              date.setFullYear(y);
              date.setMonth(m-1);
              date.setDate(d);
            }
            date.setMilliseconds(0);
            return date;
          },
          fromYmd:function(y,m,d){
            return this.fromYmdHms(y,m,d,0,0,0);
          },
          fromYmdHms:function(y,m,d,hour,minute,second){
            return this._(new Date(y+'/'+m+'/'+d+' '+hour+':'+minute+':'+second),y,m,d);
          }
        };
      })();
      var Solar = (function(){
        var _fromDate = function(date){
          return _fromYmdHms(date.getFullYear(),date.getMonth()+1,date.getDate(),date.getHours(),date.getMinutes(),date.getSeconds());
        };
        var _fromJulianDay = function(julianDay){
          var d = Math.floor(julianDay + 0.5);
          var f = julianDay + 0.5 - d;
          var c;

          if (d >= 2299161) {
            c = Math.floor((d - 1867216.25) / 36524.25);
            d += 1 + c - Math.floor(c / 4);
          }
          d += 1524;
          var year = Math.floor((d - 122.1) / 365.25);
          d -= Math.floor(365.25 * year);
          var month = Math.floor(d / 30.601);
          d -= Math.floor(30.601 * month);
          var day = d;
          if (month > 13) {
            month -= 13;
            year -= 4715;
          } else {
            month -= 1;
            year -= 4716;
          }
          f *= 24;
          var hour = Math.floor(f);

          f -= hour;
          f *= 60;
          var minute = Math.floor(f);

          f -= minute;
          f *= 60;
          var second = Math.round(f);
          if(second>59){
            second-=60;
            minute++;
          }
          if(minute>59){
            minute-=60;
            hour++;
          }
          return _fromYmdHms(year,month,day,hour,minute,second);
        };
        var _fromYmdHms = function(y,m,d,hour,minute,second){
          if(y===1582&&m===10){
            if(d>=15){
              d -= 10;
            }
          }
          return {
            _p:{
              year:y,
              month:m,
              day:d,
              hour:hour,
              minute:minute,
              second:second,
              calendar:ExactDate.fromYmdHms(y,m,d,hour,minute,second)
            },
            getYear:function(){
              return this._p.year;
            },
            getMonth:function(){
              return this._p.month;
            },
            getDay:function(){
              return this._p.day;
            },
            getHour:function(){
              return this._p.hour;
            },
            getMinute:function(){
              return this._p.minute;
            },
            getSecond:function(){
              return this._p.second;
            },
            getWeek:function(){
              return this._p.calendar.getDay();
            },
            getWeekInChinese:function(){
              return SolarUtil.WEEK[this.getWeek()];
            },
            /**
             * 获取当天的阳历周
             * @param start 星期几作为一周的开始，1234560分别代表星期一至星期天
             */
            getSolarWeek:function(start){
              return SolarWeek.fromDate(this._p.calendar,start);
            },
            isLeapYear:function(){
              return SolarUtil.isLeapYear(this._p.year);
            },
            getFestivals:function(){
              var l = [];
              var f = SolarUtil.FESTIVAL[this._p.month+'-'+this._p.day];
              if(f){
                l.push(f);
              }
              var weeks = Math.ceil(this._p.day/7);
              var week = this.getWeek();
              f = SolarUtil.WEEK_FESTIVAL[this._p.month+'-'+weeks+'-'+week];
              if(f){
                l.push(f);
              }
              return l;
            },
            getOtherFestivals:function(){
              var l = [];
              var fs = SolarUtil.OTHER_FESTIVAL[this._p.month+'-'+this._p.day];
              if(fs){
                for(var i=0,j=fs.length;i<j;i++){
                  l.push(fs[i]);
                }
              }
              return l;
            },
            getXingzuo:function(){
              return this.getXingZuo();
            },
            getXingZuo:function(){
              var index = 11;
              var y = this._p.month*100+this._p.day;
              if (y >= 321 && y <= 419) {
                index = 0;
              } else if (y >= 420 && y <= 520) {
                index = 1;
              } else if (y >= 521 && y <= 621) {
                index = 2;
              } else if (y >= 622 && y <= 722) {
                index = 3;
              } else if (y >= 723 && y <= 822) {
                index = 4;
              } else if (y >= 823 && y <= 922) {
                index = 5;
              } else if (y >= 923 && y <= 1023) {
                index = 6;
              } else if (y >= 1024 && y <= 1122) {
                index = 7;
              } else if (y >= 1123 && y <= 1221) {
                index = 8;
              } else if (y >= 1222 || y <= 119) {
                index = 9;
              } else if (y <= 218) {
                index = 10;
              }
              return SolarUtil.XINGZUO[index];
            },
            toYmd:function(){
              var d = this._p.day;
              if(this._p.year===1582&&this._p.month===10){
                if(d>=5){
                  d += 10;
                }
              }
              var y = this._p.year + '';
              while (y.length < 4) {
                y = '0' + y;
              }
              return [y,(this._p.month<10?'0':'')+this._p.month,(d<10?'0':'')+d].join('-');
            },
            toYmdHms:function(){
              return this.toYmd()+' '+[(this._p.hour<10?'0':'')+this._p.hour,(this._p.minute<10?'0':'')+this._p.minute,(this._p.second<10?'0':'')+this._p.second].join(':');
            },
            toString:function(){
              return this.toYmd();
            },
            toFullString:function(){
              var s = this.toYmdHms();
              if(this.isLeapYear()){
                s += ' 闰年';
              }
              s += ' 星期'+this.getWeekInChinese();
              var festivals = this.getFestivals();
              for(var i=0,j=festivals.length;i<j;i++){
                s += ' ('+festivals[i]+')';
              }
              s += ' '+this.getXingZuo()+'座';
              return s;
            },
            next:function(days, onlyWorkday){
              var date = ExactDate.fromYmdHms(this._p.year,this._p.month,this._p.day,this._p.hour,this._p.minute,this._p.second);
              if(0!=days){
                if (!onlyWorkday){
                  date.setDate(date.getDate() + days);
                }else {
                  var rest = Math.abs(days);
                  var add = days < 1 ? -1 : 1;
                  while(rest > 0){
                    date.setDate(date.getDate() + add);
                    var work = true;
                    var holiday = HolidayUtil.getHoliday(date.getFullYear(), date.getMonth() + 1, date.getDate());
                    if(!holiday){
                      var week = date.getDay();
                      if(0 == week || 6 == week){
                        work = false;
                      }
                    }else {
                      work = holiday.isWork();
                    }
                    if(work){
                      rest--;
                    }
                  }
                }
              }
              return _fromDate(date);
            },
            getLunar:function(){
              return Lunar.fromDate(this._p.calendar);
            },
            getJulianDay:function(){
              var y = this._p.year;
              var m = this._p.month;
              var d = this._p.day + ((this._p.second / 60 + this._p.minute) / 60 + this._p.hour) / 24;
              var n = 0;
              var g = false;
              if (y * 372 + m * 31 + Math.floor(d) >= 588829) {
                g = true;
              }
              if (m <= 2) {
                m += 12;
                y--;
              }
              if (g) {
                n = Math.floor(y / 100);
                n = 2 - n + Math.floor(n / 4);
              }
              return Math.floor(365.25 * (y + 4716)) + Math.floor(30.6001 * (m + 1)) + d + n - 1524.5;
            },
            getCalendar:function(){
              return this._p.calendar;
            }
          };
        };
        var _fromBaZi=function(yearGanZhi,monthGanZhi,dayGanZhi,timeGanZhi,sect,baseYear){
          sect = (1==sect)?1:2;
          baseYear = (undefined==baseYear)?1900:baseYear;
          var l = [];
          var today = _fromDate(new Date());
          var lunar = today.getLunar();
          var offsetYear = LunarUtil.getJiaZiIndex(lunar.getYearInGanZhiExact())-LunarUtil.getJiaZiIndex(yearGanZhi);
          if(offsetYear<0){
            offsetYear = offsetYear+60;
          }
          var startYear = today.getYear() - offsetYear;
          var hour = 0;
          var timeZhi = timeGanZhi.substr(1);
          for(var i=0,j=LunarUtil.ZHI.length;i<j;i++){
            if(LunarUtil.ZHI[i]===timeZhi){
              hour = (i-1)*2;
            }
          }
          while(startYear>=baseYear){
            var year = startYear-1;
            var counter = 0;
            var month = 12;
            var day;
            var solar;
            var found = false;
            while (counter < 15) {
              if(year>=baseYear){
                day = 1;
                solar = _fromYmdHms(year, month, day, hour, 0, 0);
                lunar = solar.getLunar();
                if(lunar.getYearInGanZhiExact()===yearGanZhi && lunar.getMonthInGanZhiExact()===monthGanZhi){
                  found = true;
                  break;
                }
              }
              month++;
              if(month > 12){
                month = 1;
                year++;
              }
              counter++;
            }
            if(found){
              counter = 0;
              month--;
              if(month<1){
                month = 12;
                year--;
              }
              day = 1;
              solar = _fromYmdHms(year, month, day, hour, 0, 0);
              while (counter < 61) {
                lunar = solar.getLunar();
                var dgz = (2==sect)?lunar.getDayInGanZhiExact2():lunar.getDayInGanZhiExact();
                if (lunar.getYearInGanZhiExact()===yearGanZhi && lunar.getMonthInGanZhiExact()===monthGanZhi && dgz===dayGanZhi && lunar.getTimeInGanZhi()===timeGanZhi) {
                  l.push(solar);
                  break;
                }
                solar = solar.next(1);
                counter++;
              }
            }
            startYear -= 60;
          }
          return l;
        };
        return {
          J2000:2451545,
          fromYmd:function(y,m,d){return _fromYmdHms(y,m,d,0,0,0);},
          fromYmdHms:function(y,m,d,hour,minute,second){return _fromYmdHms(y,m,d,hour,minute,second);},
          fromDate:function(date){return _fromDate(date);},
          fromJulianDay:function(julianDay){return _fromJulianDay(julianDay);},
          fromBaZi:function(yearGanZhi,monthGanZhi,dayGanZhi,timeGanZhi){return _fromBaZi(yearGanZhi,monthGanZhi,dayGanZhi,timeGanZhi);}
        };
      })();
      var Lunar = (function(){
        var _diff = function(after, before) {
          var current = ExactDate.fromYmdHms(before.getFullYear(), before.getMonth()+1, before.getDate(), before.getHours(), before.getMinutes(), before.getSeconds());
          var n = 0;
          while(current<after){
            n++;
            current.setDate(current.getDate()+1);
          }
          return n;
        };
        var _computeJieQi = function(o,ly) {
          o['jieQiList'] = [];
          o['jieQi'] = {};
          var julianDays = ly.getJieQiJulianDays();
          for (var i = 0, j = Lunar.JIE_QI_IN_USE.length; i < j; i++) {
            var key = Lunar.JIE_QI_IN_USE[i];
            o['jieQiList'].push(key);
            o['jieQi'][key] = Solar.fromJulianDay(julianDays[i]);
          }
        };
        var _computeYear = function(o,solar,year){
          //以正月初一开始
          var offset = year - 4;
          var yearGanIndex = offset % 10;
          var yearZhiIndex = offset % 12;

          if (yearGanIndex < 0) {
            yearGanIndex += 10;
          }

          if (yearZhiIndex < 0) {
            yearZhiIndex += 12;
          }

          //以立春作为新一年的开始的干支纪年
          var g = yearGanIndex;
          var z = yearZhiIndex;

          //精确的干支纪年，以立春交接时刻为准
          var gExact = yearGanIndex;
          var zExact = yearZhiIndex;

          var solarYear = solar.getYear();
          var solarYmd = solar.toYmd();
          var solarYmdHms = solar.toYmdHms();

          //获取立春的阳历时刻
          var liChun = o['jieQi']['立春'];
          if (liChun.getYear() != solarYear) {
            liChun = o['jieQi']['LI_CHUN'];
          }
          var liChunYmd = liChun.toYmd();
          var liChunYmdHms = liChun.toYmdHms();

          //阳历和阴历年份相同代表正月初一及以后
          if(year===solarYear){
            //立春日期判断
            if(solarYmd<liChunYmd) {
              g--;
              z--;
            }
            //立春交接时刻判断
            if(solarYmdHms<liChunYmdHms) {
              gExact--;
              zExact--;
            }
          }else if (year < solarYear){
            if(solarYmd>=liChunYmd) {
              g++;
              z++;
            }
            if(solarYmdHms>=liChunYmdHms) {
              gExact++;
              zExact++;
            }
          }

          o['yearGanIndex'] = yearGanIndex;
          o['yearZhiIndex'] = yearZhiIndex;
          o['yearGanIndexByLiChun'] = (g<0?g+10:g)%10;
          o['yearZhiIndexByLiChun'] = (z<0?z+12:z)%12;
          o['yearGanIndexExact'] = (gExact<0?gExact+10:gExact)%10;
          o['yearZhiIndexExact'] = (zExact<0?zExact+12:zExact)%12;
        };
        var _computeMonth = function(o,solar){
          var start = null,i;
          var end;
          var size = Lunar.JIE_QI_IN_USE.length;

          //序号：大雪以前-3，大雪到小寒之间-2，小寒到立春之间-1，立春之后0
          var index = -3;
          for(i=0;i<size;i+=2){
            end = o.jieQi[Lunar.JIE_QI_IN_USE[i]];
            var ymd = solar.toYmd();
            var symd = null==start?ymd:start.toYmd();
            if(ymd>=symd&&ymd<end.toYmd()){
              break;
            }
            start = end;
            index++;
          }
          var offset = (((o.yearGanIndexByLiChun+(index<0?1:0)) % 5 + 1) * 2) % 10;
          o['monthGanIndex'] = ((index<0?index+10:index) + offset) % 10;
          o['monthZhiIndex'] = ((index<0?index+12:index) + LunarUtil.BASE_MONTH_ZHI_INDEX) % 12;

          start = null;
          index = -3;
          for(i=0;i<size;i+=2){
            end = o.jieQi[Lunar.JIE_QI_IN_USE[i]];
            var time = solar.toYmdHms();
            var stime = null==start?time:start.toYmdHms();
            if(time>=stime&&time<end.toYmdHms()){
              break;
            }
            start = end;
            index++;
          }
          offset = (((o.yearGanIndexExact+(index<0?1:0)) % 5 + 1) * 2) % 10;
          o['monthGanIndexExact'] = ((index<0?index+10:index) + offset) % 10;
          o['monthZhiIndexExact'] = ((index<0?index+12:index) + LunarUtil.BASE_MONTH_ZHI_INDEX) % 12;
        };
        var _computeDay = function(o,solar,hour,minute){
          var noon = Solar.fromYmdHms(solar.getYear(), solar.getMonth(), solar.getDay(), 12, 0, 0);
          var offset = Math.floor(noon.getJulianDay()) - 11;
          var dayGanIndex = offset % 10;
          var dayZhiIndex = offset % 12;

          o['dayGanIndex'] = dayGanIndex;
          o['dayZhiIndex'] = dayZhiIndex;
          var dayGanExact = dayGanIndex;
          var dayZhiExact = dayZhiIndex;
          o['dayGanIndexExact2'] = dayGanExact;
          o['dayZhiIndexExact2'] = dayZhiExact;
          var hm = (hour<10?'0':'')+hour+':'+(minute<10?'0':'')+minute;
          if(hm>='23:00'&&hm<='23:59'){
            dayGanExact++;
            if(dayGanExact>=10){
              dayGanExact -= 10;
            }
            dayZhiExact++;
            if(dayZhiExact>=12){
              dayZhiExact -= 12;
            }
          }
          o['dayGanIndexExact'] = dayGanExact;
          o['dayZhiIndexExact'] = dayZhiExact;
        };
        var _computeTime = function(o,hour,minute){
          var timeZhiIndex = LunarUtil.getTimeZhiIndex((hour<10?'0':'')+hour+':'+(minute<10?'0':'')+minute);
          o['timeZhiIndex'] = timeZhiIndex;
          o['timeGanIndex'] = (o['dayGanIndexExact']%5*2+timeZhiIndex)%10;
        };
        var _computeWeek = function(o,solar){
          o['weekIndex'] = solar.getWeek();
        };
        var _compute = function(year,hour,minute,second,solar,ly){
          var o = {};
          _computeJieQi(o, ly);
          _computeYear(o, solar, year);
          _computeMonth(o, solar);
          _computeDay(o, solar, hour, minute);
          _computeTime(o, hour, minute);
          _computeWeek(o, solar);
          return o;
        };
        var _fromDate = function(date){
          var c = ExactDate.fromYmd(date.getFullYear(),date.getMonth()+1,date.getDate());
          var lunarYear = 0;
          var lunarMonth = 0;
          var lunarDay = 0;
          var y = c.getFullYear();
          var ly = LunarYear.fromYear(y);
          var lms = ly.getMonths();
          for (var i = 0, j = lms.length; i < j; i++) {
            var m = lms[i];
            // 初一
            var firstDay = Solar.fromJulianDay(m.getFirstJulianDay()).getCalendar();
            firstDay.setHours(0);
            firstDay.setMinutes(0);
            firstDay.setSeconds(0);
            firstDay.setMilliseconds(0);
            var days = _diff(c, firstDay);
            if (days < m.getDayCount()) {
              lunarYear = m.getYear();
              lunarMonth = m.getMonth();
              lunarDay = days + 1;
              break;
            }
          }
          return _new(lunarYear, lunarMonth, lunarDay, date.getHours(), date.getMinutes(), date.getSeconds(), Solar.fromDate(date), ly);
        };
        var _fromYmdHms = function(lunarYear,lunarMonth,lunarDay,hour,minute,second) {
          var y = LunarYear.fromYear(lunarYear);
          var m = y.getMonth(lunarMonth);
          if (null == m) {
            throw 'wrong lunar year '+lunarYear+' month '+lunarMonth;
          }
          if (lunarDay < 1) {
            throw 'lunar day must bigger than 0';
          }
          var days = m.getDayCount();
          if (lunarDay > days) {
            throw 'only '+days+' days in lunar year '+lunarYear+' month '+lunarMonth;
          }
          var noon = Solar.fromJulianDay(m.getFirstJulianDay() + lunarDay - 1);
          var solar = Solar.fromYmdHms(noon.getYear(), noon.getMonth(), noon.getDay(), hour, minute, second);
          return _new(lunarYear, lunarMonth, lunarDay, hour, minute, second, solar, y);
        };
        var _new = function(year,month,day,hour,minute,second,solar,ly){
          var gz = _compute(year,hour,minute,second,solar,ly);
          return {
            _p:{
              year:year,
              month:month,
              day:day,
              hour:hour,
              minute:minute,
              second:second,
              timeGanIndex:gz.timeGanIndex,
              timeZhiIndex:gz.timeZhiIndex,
              dayGanIndex:gz.dayGanIndex,
              dayZhiIndex:gz.dayZhiIndex,
              dayGanIndexExact:gz.dayGanIndexExact,
              dayZhiIndexExact:gz.dayZhiIndexExact,
              dayGanIndexExact2:gz.dayGanIndexExact2,
              dayZhiIndexExact2:gz.dayZhiIndexExact2,
              monthGanIndex:gz.monthGanIndex,
              monthZhiIndex:gz.monthZhiIndex,
              monthGanIndexExact:gz.monthGanIndexExact,
              monthZhiIndexExact:gz.monthZhiIndexExact,
              yearGanIndex:gz.yearGanIndex,
              yearZhiIndex:gz.yearZhiIndex,
              yearGanIndexByLiChun:gz.yearGanIndexByLiChun,
              yearZhiIndexByLiChun:gz.yearZhiIndexByLiChun,
              yearGanIndexExact:gz.yearGanIndexExact,
              yearZhiIndexExact:gz.yearZhiIndexExact,
              weekIndex:gz.weekIndex,
              jieQi:gz.jieQi,
              jieQiList:gz.jieQiList,
              solar:solar,
              eightChar:null
            },
            getYear:function(){return this._p.year;},
            getMonth:function(){return this._p.month;},
            getDay:function(){return this._p.day;},
            getHour:function(){return this._p.hour;},
            getMinute:function(){return this._p.minute;},
            getSecond:function(){return this._p.second;},
            getTimeGanIndex:function(){return this._p.timeGanIndex;},
            getTimeZhiIndex:function(){return this._p.timeZhiIndex;},
            getDayGanIndex:function(){return this._p.dayGanIndex;},
            getDayGanIndexExact:function(){return this._p.dayGanIndexExact;},
            getDayGanIndexExact2:function(){return this._p.dayGanIndexExact2;},
            getDayZhiIndex:function(){return this._p.dayZhiIndex;},
            getDayZhiIndexExact:function(){return this._p.dayZhiIndexExact;},
            getDayZhiIndexExact2:function(){return this._p.dayZhiIndexExact2;},
            getMonthGanIndex:function(){return this._p.monthGanIndex;},
            getMonthGanIndexExact:function(){return this._p.monthGanIndexExact;},
            getMonthZhiIndex:function(){return this._p.monthZhiIndex;},
            getMonthZhiIndexExact:function(){return this._p.monthZhiIndexExact;},
            getYearGanIndex:function(){return this._p.yearGanIndex;},
            getYearGanIndexByLiChun:function(){return this._p.yearGanIndexByLiChun;},
            getYearGanIndexExact:function(){return this._p.yearGanIndexExact;},
            getYearZhiIndex:function(){return this._p.yearZhiIndex;},
            getYearZhiIndexByLiChun:function(){return this._p.yearZhiIndexByLiChun;},
            getYearZhiIndexExact:function(){return this._p.yearZhiIndexExact;},
            getGan:function(){return this.getYearGan();},
            getZhi:function(){return this.getYearZhi();},
            getYearGan:function(){return LunarUtil.GAN[this._p.yearGanIndex+1];},
            getYearGanByLiChun:function(){return LunarUtil.GAN[this._p.yearGanIndexByLiChun+1];},
            getYearGanExact:function(){return LunarUtil.GAN[this._p.yearGanIndexExact+1];},
            getYearZhi:function(){return LunarUtil.ZHI[this._p.yearZhiIndex+1];},
            getYearZhiByLiChun:function(){return LunarUtil.ZHI[this._p.yearZhiIndexByLiChun+1];},
            getYearZhiExact:function(){return LunarUtil.ZHI[this._p.yearZhiIndexExact+1];},
            getYearInGanZhi:function(){return this.getYearGan()+this.getYearZhi();},
            getYearInGanZhiByLiChun:function(){return this.getYearGanByLiChun()+this.getYearZhiByLiChun();},
            getYearInGanZhiExact:function(){return this.getYearGanExact()+this.getYearZhiExact();},
            getMonthGan:function(){return LunarUtil.GAN[this._p.monthGanIndex+1];},
            getMonthGanExact:function(){return LunarUtil.GAN[this._p.monthGanIndexExact+1];},
            getMonthZhi:function(){return LunarUtil.ZHI[this._p.monthZhiIndex+1];},
            getMonthZhiExact:function(){return LunarUtil.ZHI[this._p.monthZhiIndexExact+1];},
            getMonthInGanZhi:function(){return this.getMonthGan()+this.getMonthZhi();},
            getMonthInGanZhiExact:function(){return this.getMonthGanExact()+this.getMonthZhiExact();},
            getDayGan:function(){return LunarUtil.GAN[this._p.dayGanIndex+1];},
            getDayGanExact:function(){return LunarUtil.GAN[this._p.dayGanIndexExact+1];},
            getDayGanExact2:function(){return LunarUtil.GAN[this._p.dayGanIndexExact2+1];},
            getDayZhi:function(){return LunarUtil.ZHI[this._p.dayZhiIndex+1];},
            getDayZhiExact:function(){return LunarUtil.ZHI[this._p.dayZhiIndexExact+1];},
            getDayZhiExact2:function(){return LunarUtil.ZHI[this._p.dayZhiIndexExact2+1];},
            getDayInGanZhi:function(){return this.getDayGan()+this.getDayZhi();},
            getDayInGanZhiExact:function(){return this.getDayGanExact()+this.getDayZhiExact();},
            getDayInGanZhiExact2:function(){return this.getDayGanExact2()+this.getDayZhiExact2();},
            getTimeGan:function(){return LunarUtil.GAN[this._p.timeGanIndex+1];},
            getTimeZhi:function(){return LunarUtil.ZHI[this._p.timeZhiIndex+1];},
            getTimeInGanZhi:function(){return this.getTimeGan()+this.getTimeZhi();},
            getShengxiao:function(){return this.getYearShengXiao();},
            getYearShengXiao:function(){return LunarUtil.SHENGXIAO[this._p.yearZhiIndex+1];},
            getYearShengXiaoByLiChun:function(){return LunarUtil.SHENGXIAO[this._p.yearZhiIndexByLiChun+1];},
            getYearShengXiaoExact:function(){return LunarUtil.SHENGXIAO[this._p.yearZhiIndexExact+1];},
            getMonthShengXiao:function(){return LunarUtil.SHENGXIAO[this._p.monthZhiIndex+1];},
            getMonthShengXiaoExact:function(){return LunarUtil.SHENGXIAO[this._p.monthZhiIndexExact+1];},
            getDayShengXiao:function(){return LunarUtil.SHENGXIAO[this._p.dayZhiIndex+1];},
            getTimeShengXiao:function(){return LunarUtil.SHENGXIAO[this._p.timeZhiIndex+1];},
            getYearInChinese:function(){
              var y = (this._p.year+'');
              var s = '';
              var zero = '0'.charCodeAt(0);
              for(var i=0,j=y.length;i<j;i++){
                s+=LunarUtil.NUMBER[y.charCodeAt(i)-zero];
              }
              return s;
            },
            getMonthInChinese:function(){
              var month = this._p.month;
              return (month<0?'闰':'')+LunarUtil.MONTH[Math.abs(month)];
            },
            getDayInChinese:function(){
              return LunarUtil.DAY[this._p.day];
            },
            getPengZuGan:function(){
              return LunarUtil.PENGZU_GAN[this._p.dayGanIndex+1];
            },
            getPengZuZhi:function(){
              return LunarUtil.PENGZU_ZHI[this._p.dayZhiIndex+1];
            },
            getPositionXi:function(){
              return this.getDayPositionXi();
            },
            getPositionXiDesc:function(){
              return this.getDayPositionXiDesc();
            },
            getPositionYangGui:function(){
              return this.getDayPositionYangGui();
            },
            getPositionYangGuiDesc:function(){
              return this.getDayPositionYangGuiDesc();
            },
            getPositionYinGui:function(){
              return this.getDayPositionYinGui();
            },
            getPositionYinGuiDesc:function(){
              return this.getDayPositionYinGuiDesc();
            },
            getPositionFu:function(){
              return this.getDayPositionFu();
            },
            getPositionFuDesc:function(){
              return this.getDayPositionFuDesc();
            },
            getPositionCai:function(){
              return this.getDayPositionCai();
            },
            getPositionCaiDesc:function(){
              return this.getDayPositionCaiDesc();
            },
            getDayPositionXi:function(){
              return LunarUtil.POSITION_XI[this._p.dayGanIndex+1];
            },
            getDayPositionXiDesc:function(){
              return LunarUtil.POSITION_DESC[this.getDayPositionXi()];
            },
            getDayPositionYangGui:function(){
              return LunarUtil.POSITION_YANG_GUI[this._p.dayGanIndex+1];
            },
            getDayPositionYangGuiDesc:function(){
              return LunarUtil.POSITION_DESC[this.getDayPositionYangGui()];
            },
            getDayPositionYinGui:function(){
              return LunarUtil.POSITION_YIN_GUI[this._p.dayGanIndex+1];
            },
            getDayPositionYinGuiDesc:function(){
              return LunarUtil.POSITION_DESC[this.getDayPositionYinGui()];
            },
            getDayPositionFu:function(){
              return LunarUtil.POSITION_FU[this._p.dayGanIndex+1];
            },
            getDayPositionFuDesc:function(){
              return LunarUtil.POSITION_DESC[this.getDayPositionFu()];
            },
            getDayPositionCai:function(){
              return LunarUtil.POSITION_CAI[this._p.dayGanIndex+1];
            },
            getDayPositionCaiDesc:function(){
              return LunarUtil.POSITION_DESC[this.getDayPositionCai()];
            },
            getTimePositionXi:function(){
              return LunarUtil.POSITION_XI[this._p.timeGanIndex+1];
            },
            getTimePositionXiDesc:function(){
              return LunarUtil.POSITION_DESC[this.getTimePositionXi()];
            },
            getTimePositionYangGui:function(){
              return LunarUtil.POSITION_YANG_GUI[this._p.timeGanIndex+1];
            },
            getTimePositionYangGuiDesc:function(){
              return LunarUtil.POSITION_DESC[this.getTimePositionYangGui()];
            },
            getTimePositionYinGui:function(){
              return LunarUtil.POSITION_YIN_GUI[this._p.timeGanIndex+1];
            },
            getTimePositionYinGuiDesc:function(){
              return LunarUtil.POSITION_DESC[this.getTimePositionYinGui()];
            },
            getTimePositionFu:function(){
              return LunarUtil.POSITION_FU[this._p.timeGanIndex+1];
            },
            getTimePositionFuDesc:function(){
              return LunarUtil.POSITION_DESC[this.getTimePositionFu()];
            },
            getTimePositionCai:function(){
              return LunarUtil.POSITION_CAI[this._p.timeGanIndex+1];
            },
            getTimePositionCaiDesc:function(){
              return LunarUtil.POSITION_DESC[this.getTimePositionCai()];
            },
            getChong:function(){
              return this.getDayChong();
            },
            getChongGan:function(){
              return this.getDayChongGan();
            },
            getChongGanTie:function(){
              return this.getDayChongGanTie();
            },
            getChongShengXiao:function(){
              return this.getDayChongShengXiao();
            },
            getChongDesc:function(){
              return this.getDayChongDesc();
            },
            getSha:function(){
              return this.getDaySha();
            },
            getDayChong:function(){
              return LunarUtil.CHONG[this.getDayZhi()];
            },
            getDayChongGan:function(){
              return LunarUtil.CHONG_GAN[this.getDayGan()];
            },
            getDayChongGanTie:function(){
              return LunarUtil.CHONG_GAN_TIE[this.getDayGan()];
            },
            getDayChongShengXiao:function(){
              var chong = this.getChong();
              for(var i=0,j=LunarUtil.ZHI.length;i<j;i++){
                if(LunarUtil.ZHI[i]===chong){
                  return LunarUtil.SHENGXIAO[i];
                }
              }
              return '';
            },
            getDayChongDesc:function(){
              return '('+this.getDayChongGan()+this.getDayChong()+')'+this.getDayChongShengXiao();
            },
            getDaySha:function(){
              return LunarUtil.SHA[this.getDayZhi()];
            },
            getTimeChong:function(){
              return LunarUtil.CHONG[this.getTimeZhi()];
            },
            getTimeChongGan:function(){
              return LunarUtil.CHONG_GAN[this.getTimeGan()];
            },
            getTimeChongGanTie:function(){
              return LunarUtil.CHONG_GAN_TIE[this.getTimeGan()];
            },
            getTimeChongShengXiao:function(){
              var chong = this.getTimeChong();
              for(var i=0,j=LunarUtil.ZHI.length;i<j;i++){
                if(LunarUtil.ZHI[i]===chong){
                  return LunarUtil.SHENGXIAO[i];
                }
              }
              return '';
            },
            getTimeChongDesc:function(){
              return '('+this.getTimeChongGan()+this.getTimeChong()+')'+this.getTimeChongShengXiao();
            },
            getTimeSha:function(){
              return LunarUtil.SHA[this.getTimeZhi()];
            },
            getYearNaYin:function(){
              return LunarUtil.NAYIN[this.getYearInGanZhi()];
            },
            getMonthNaYin:function(){
              return LunarUtil.NAYIN[this.getMonthInGanZhi()];
            },
            getDayNaYin:function(){
              return LunarUtil.NAYIN[this.getDayInGanZhi()];
            },
            getTimeNaYin:function(){
              return LunarUtil.NAYIN[this.getTimeInGanZhi()];
            },
            getSeason:function(){
              return LunarUtil.SEASON[Math.abs(this._p.month)];
            },
            _convertJieQi:function(name){
              var jq = name;
              if('DONG_ZHI'===jq){
                jq = '冬至';
              }else if('DA_HAN'===jq){
                jq = '大寒';
              }else if('XIAO_HAN'===jq){
                jq = '小寒';
              }else if('LI_CHUN'===jq){
                jq = '立春';
              }else if('DA_XUE'===jq){
                jq = '大雪';
              }else if('YU_SHUI'===jq){
                jq = '雨水';
              }else if('JING_ZHE'===jq){
                jq = '惊蛰';
              }
              return jq;
            },
            getJie:function(){
              var d,jie='';
              for(var i=1,j=Lunar.JIE_QI.length;i<j;i+=2){
                var key = Lunar.JIE_QI[i];
                d = this._p.jieQi[key];
                if(d.getYear()===this._p.solar.getYear()&&d.getMonth()===this._p.solar.getMonth()&&d.getDay()===this._p.solar.getDay()){
                  jie=key;
                  break;
                }
              }
              return this._convertJieQi(jie);
            },
            getQi:function(){
              var d,qi='';
              for(var i=0,j=Lunar.JIE_QI.length;i<j;i+=2){
                var key = Lunar.JIE_QI[i];
                d = this._p.jieQi[key];
                if(d.getYear()===this._p.solar.getYear()&&d.getMonth()===this._p.solar.getMonth()&&d.getDay()===this._p.solar.getDay()){
                  qi=key;
                  break;
                }
              }
              return this._convertJieQi(qi);
            },
            getJieQi:function(){
              var name = '';
              for(var key in this._p.jieQi){
                var d = this._p.jieQi[key];
                if(d.getYear()==this._p.solar.getYear()&&d.getMonth()==this._p.solar.getMonth()&&d.getDay()==this._p.solar.getDay()){
                  name = key;
                  break;
                }
              }
              return this._convertJieQi(name);
            },
            getWeek:function(){
              return this._p.weekIndex;
            },
            getWeekInChinese:function(){
              return SolarUtil.WEEK[this.getWeek()];
            },
            getXiu:function(){
              return LunarUtil.XIU[this.getDayZhi()+this.getWeek()];
            },
            getXiuLuck:function(){
              return LunarUtil.XIU_LUCK[this.getXiu()];
            },
            getXiuSong:function(){
              return LunarUtil.XIU_SONG[this.getXiu()];
            },
            getZheng:function(){
              return LunarUtil.ZHENG[this.getXiu()];
            },
            getAnimal:function(){
              return LunarUtil.ANIMAL[this.getXiu()];
            },
            getGong:function(){
              return LunarUtil.GONG[this.getXiu()];
            },
            getShou:function(){
              return LunarUtil.SHOU[this.getGong()];
            },
            getFestivals:function(){
              var l = [];
              var f = LunarUtil.FESTIVAL[this._p.month+'-'+this._p.day];
              if(f){
                l.push(f);
              }
              if (Math.abs(this._p.month) == 12 && this._p.day >= 29 && this._p.year != this.next(1).getYear()) {
                l.push('除夕');
              }
              return l;
            },
            getOtherFestivals:function(){
              var l = [];
              var fs = LunarUtil.OTHER_FESTIVAL[this._p.month+'-'+this._p.day];
              if(fs){
                for(var i=0,j=fs.length;i<j;i++){
                  l.push(fs[i]);
                }
              }
              return l;
            },
            getBaZi:function(){
              var bz = this.getEightChar();
              var l = [];
              l.push(bz.getYear());
              l.push(bz.getMonth());
              l.push(bz.getDay());
              l.push(bz.getTime());
              return l;
            },
            getBaZiWuXing:function(){
              var bz = this.getEightChar();
              var l = [];
              l.push(bz.getYearWuXing());
              l.push(bz.getMonthWuXing());
              l.push(bz.getDayWuXing());
              l.push(bz.getTimeWuXing());
              return l;
            },
            getBaZiNaYin:function(){
              var bz = this.getEightChar();
              var l = [];
              l.push(bz.getYearNaYin());
              l.push(bz.getMonthNaYin());
              l.push(bz.getDayNaYin());
              l.push(bz.getTimeNaYin());
              return l;
            },
            getBaZiShiShenGan:function(){
              var bz = this.getEightChar();
              var l = [];
              l.push(bz.getYearShiShenGan());
              l.push(bz.getMonthShiShenGan());
              l.push(bz.getDayShiShenGan());
              l.push(bz.getTimeShiShenGan());
              return l;
            },
            getBaZiShiShenZhi:function(){
              var bz = this.getEightChar();
              var l = [];
              l.push(bz.getYearShiShenZhi()[0]);
              l.push(bz.getMonthShiShenZhi()[0]);
              l.push(bz.getDayShiShenZhi()[0]);
              l.push(bz.getTimeShiShenZhi()[0]);
              return l;
            },
            getBaZiShiShenYearZhi:function(){
              return this.getEightChar().getYearShiShenZhi();
            },
            getBaZiShiShenMonthZhi:function(){
              return this.getEightChar().getMonthShiShenZhi();
            },
            getBaZiShiShenDayZhi:function(){
              return this.getEightChar().getDayShiShenZhi();
            },
            getBaZiShiShenTimeZhi:function(){
              return this.getEightChar().getTimeShiShenZhi();
            },
            getZhiXing:function(){
              var offset = this._p.dayZhiIndex-this._p.monthZhiIndex;
              if(offset<0){
                offset += 12;
              }
              return LunarUtil.ZHI_XING[offset+1];
            },
            getDayTianShen:function(){
              var monthZhi = this.getMonthZhi();
              var offset = LunarUtil.ZHI_TIAN_SHEN_OFFSET[monthZhi];
              return LunarUtil.TIAN_SHEN[(this._p.dayZhiIndex+offset)%12+1];
            },
            getTimeTianShen:function(){
              var dayZhi = this.getDayZhiExact();
              var offset = LunarUtil.ZHI_TIAN_SHEN_OFFSET[dayZhi];
              return LunarUtil.TIAN_SHEN[(this._p.timeZhiIndex+offset)%12+1];
            },
            getDayTianShenType:function(){
              return LunarUtil.TIAN_SHEN_TYPE[this.getDayTianShen()];
            },
            getTimeTianShenType:function(){
              return LunarUtil.TIAN_SHEN_TYPE[this.getTimeTianShen()];
            },
            getDayTianShenLuck:function(){
              return LunarUtil.TIAN_SHEN_TYPE_LUCK[this.getDayTianShenType()];
            },
            getTimeTianShenLuck:function(){
              return LunarUtil.TIAN_SHEN_TYPE_LUCK[this.getTimeTianShenType()];
            },
            getDayPositionTai:function(){
              var offset = this._p.dayGanIndex-this._p.dayZhiIndex;
              if(offset<0){
                offset += 12;
              }
              return LunarUtil.POSITION_TAI_DAY[offset*5+this._p.dayGanIndex];
            },
            getMonthPositionTai:function(){
              var m = this._p.month;
              if(m<0){
                return '';
              }
              return LunarUtil.POSITION_TAI_MONTH[m-1];
            },
            getDayYi:function(){
              return LunarUtil.getDayYi(this.getMonthInGanZhiExact(),this.getDayInGanZhi());
            },
            getDayJi:function(){
              return LunarUtil.getDayJi(this.getMonthInGanZhiExact(),this.getDayInGanZhi());
            },
            getDayJiShen:function(){
              return LunarUtil.getDayJiShen(this.getMonth(),this.getDayInGanZhi());
            },
            getDayXiongSha:function(){
              return LunarUtil.getDayXiongSha(this.getMonth(),this.getDayInGanZhi());
            },
            getTimeYi:function(){
              return LunarUtil.getTimeYi(this.getDayInGanZhiExact(),this.getTimeInGanZhi());
            },
            getTimeJi:function(){
              return LunarUtil.getTimeJi(this.getDayInGanZhiExact(),this.getTimeInGanZhi());
            },
            getYueXiang:function(){
              return LunarUtil.YUE_XIANG[this._p.day];
            },
            getYearNineStar:function(){
              var index = -(this._p.year - 1900) % 9;
              if(index<0){
                index += 9;
              }
              return NineStar.fromIndex(index);
            },
            getMonthNineStar:function(){
              var start = 2;
              var yearZhi = this.getYearZhi();
              if ('子午卯酉'.indexOf(yearZhi)>-1) {
                start = 8;
              } else if ('辰戌丑未'.indexOf(yearZhi)>-1) {
                start = 5;
              }
              // 寅月起，所以需要-2
              var monthIndex = this._p.monthZhiIndex-2;
              if(monthIndex<0){
                monthIndex += 12;
              }
              var index = start-monthIndex-1;
              while(index<0){
                index += 9;
              }
              return NineStar.fromIndex(index);
            },
            getDayNineStar:function(){
              //顺逆
              var solarYmd = this._p.solar.toYmd();
              var yuShui = this._p.jieQi['雨水'].toYmd();
              var guYu = this._p.jieQi['谷雨'].toYmd();
              var xiaZhi = this._p.jieQi['夏至'].toYmd();
              var chuShu = this._p.jieQi['处暑'].toYmd();
              var shuangJiang = this._p.jieQi['霜降'].toYmd();

              var start = 6;
              var asc = false;
              if(solarYmd>=this._p.jieQi['冬至'].toYmd()&& solarYmd<yuShui){
                asc = true;
                start = 1;
              } else if(solarYmd>=yuShui && solarYmd<guYu){
                asc = true;
                start = 7;
              } else if(solarYmd>=guYu && solarYmd<xiaZhi){
                asc = true;
                start = 4;
              } else if(solarYmd>=xiaZhi && solarYmd<chuShu){
                start = 9;
              } else if(solarYmd>=chuShu && solarYmd<shuangJiang){
                start = 3;
              }
              var ganZhiIndex = LunarUtil.getJiaZiIndex(this.getDayInGanZhi())%9;
              var index = asc?start+ganZhiIndex-1:start-ganZhiIndex-1;
              if(index>8){
                index -= 9;
              }
              if(index<0){
                index += 9;
              }
              return NineStar.fromIndex(index);
            },
            getTimeNineStar:function(){
              //顺逆
              var solarYmd = this._p.solar.toYmd();
              var asc = false;
              if(solarYmd>=this._p.jieQi['冬至'].toYmd() && solarYmd<this._p.jieQi['夏至'].toYmd()){
                asc = true;
              }
              var start = asc?7:3;
              var dayZhi = this.getDayZhi();
              if ('子午卯酉'.indexOf(dayZhi)>-1) {
                start = asc?1:9;
              } else if ('辰戌丑未'.indexOf(dayZhi)>-1) {
                start = asc?4:6;
              }
              var index = asc?start+this._p.timeZhiIndex-1:start-this._p.timeZhiIndex-1;
              if(index>8){
                index -= 9;
              }
              if(index<0){
                index += 9;
              }
              return NineStar.fromIndex(index);
            },
            getSolar:function(){
              return this._p.solar;
            },
            getJieQiTable:function(){
              return this._p.jieQi;
            },
            getJieQiList:function(){
              return this._p.jieQiList;
            },
            getNextJie:function(){
              var conditions = [];
              for(var i=0,j=Lunar.JIE_QI_IN_USE.length/2;i<j;i++){
                conditions.push(Lunar.JIE_QI_IN_USE[i*2]);
              }
              return this._getNearJieQi(true,conditions);
            },
            getPrevJie:function() {
              var conditions = [];
              for (var i = 0, j = Lunar.JIE_QI_IN_USE.length / 2; i < j; i++) {
                conditions.push(Lunar.JIE_QI_IN_USE[i * 2]);
              }
              return this._getNearJieQi(false, conditions);
            },
            getNextQi:function() {
              var conditions = [];
              for (var i = 0, j = Lunar.JIE_QI_IN_USE.length / 2; i < j; i++) {
                conditions.push(Lunar.JIE_QI_IN_USE[i * 2 + 1]);
              }
              return this._getNearJieQi(true, conditions);
            },
            getPrevQi:function() {
              var conditions = [];
              for (var i = 0, j = Lunar.JIE_QI_IN_USE.length / 2; i < j; i++) {
                conditions.push(Lunar.JIE_QI_IN_USE[i * 2 + 1]);
              }
              return this._getNearJieQi(false, conditions);
            },
            getNextJieQi:function(){return this._getNearJieQi(true,null);},
            getPrevJieQi:function(){return this._getNearJieQi(false,null);},
            _buildJieQi:function(name, solar){
              var jie=false,qi=false,i,j;
              for(i=0,j=Lunar.JIE_QI.length;i<j;i++){
                if(Lunar.JIE_QI[i]===name){
                  if(i%2==0){
                    qi = true;
                  }else {
                    jie = true;
                  }
                  break;
                }
              }
              return {
                _p: {
                  name: name,
                  solar: solar,
                  jie: jie,
                  qi: qi
                },
                getName: function(){return this._p.name;},
                getSolar: function(){return this._p.solar;},
                setName: function(name){this._p.name=name;},
                setSolar: function(solar){this._p.solar=solar;},
                isJie: function(){return this._p.jie;},
                isQi: function(){return this._p.qi;},
                toString: function(){return this.getName();}
              };
            },
            _getNearJieQi:function(forward, conditions){
              var name = null,near = null,filters = {},filter = false;
              if(null!=conditions){
                for(var i=0,j=conditions.length;i<j;i++){
                  filters[conditions[i]] = true;
                  filter = true;
                }
              }
              var today = this._p.solar.toYmdHms();
              for(var key in this._p.jieQi){
                var jq = this._convertJieQi(key);
                if(filter){
                  if(!filters[jq]){
                    continue;
                  }
                }
                var solar = this._p.jieQi[key];
                var day = solar.toYmdHms();
                if(forward){
                  if(day<today){
                    continue;
                  }
                  if(null==near || day<near.toYmdHms()){
                    name = jq;
                    near = solar;
                  }
                }else {
                  if(day>today){
                    continue;
                  }
                  if(null==near || day>near.toYmdHms()) {
                    name = jq;
                    near = solar;
                  }
                }
              }
              if(null==near){
                return null;
              }
              return this._buildJieQi(name, near);
            },
            getCurrentJieQi:function(){
              var name = this.getJieQi();
              return name.length>0 ? this._buildJieQi(name,this.solar) : null;
            },
            getCurrentJie:function(){
              var name = this.getJie();
              return name.length>0 ? this._buildJieQi(name,this.solar) : null;
            },
            getCurrentQi:function(){
              var name = this.getQi();
              return name.length>0 ? this._buildJieQi(name,this.solar) : null;
            },
            getEightChar:function(){
              if(!this._p.eightChar){
                this._p.eightChar=EightChar.fromLunar(this);
              }
              return this._p.eightChar;
            },
            next:function(days){
              return this._p.solar.next(days).getLunar();
            },
            getYearXun:function(){
              return LunarUtil.getXun(this.getYearInGanZhi());
            },
            getMonthXun:function(){
              return LunarUtil.getXun(this.getMonthInGanZhi());
            },
            getDayXun:function(){
              return LunarUtil.getXun(this.getDayInGanZhi());
            },
            getTimeXun:function(){
              return LunarUtil.getXun(this.getTimeInGanZhi());
            },
            getYearXunByLiChun:function(){
              return LunarUtil.getXun(this.getYearInGanZhiByLiChun());
            },
            getYearXunExact:function(){
              return LunarUtil.getXun(this.getYearInGanZhiExact());
            },
            getMonthXunExact:function(){
              return LunarUtil.getXun(this.getMonthInGanZhiExact());
            },
            getDayXunExact:function(){
              return LunarUtil.getXun(this.getDayInGanZhiExact());
            },
            getDayXunExact2:function(){
              return LunarUtil.getXun(this.getDayInGanZhiExact2());
            },
            getYearXunKong:function(){
              return LunarUtil.getXunKong(this.getYearInGanZhi());
            },
            getMonthXunKong:function(){
              return LunarUtil.getXunKong(this.getMonthInGanZhi());
            },
            getDayXunKong:function(){
              return LunarUtil.getXunKong(this.getDayInGanZhi());
            },
            getTimeXunKong:function(){
              return LunarUtil.getXunKong(this.getTimeInGanZhi());
            },
            getYearXunKongByLiChun:function(){
              return LunarUtil.getXunKong(this.getYearInGanZhiByLiChun());
            },
            getYearXunKongExact:function(){
              return LunarUtil.getXunKong(this.getYearInGanZhiExact());
            },
            getMonthXunKongExact:function(){
              return LunarUtil.getXunKong(this.getMonthInGanZhiExact());
            },
            getDayXunKongExact:function(){
              return LunarUtil.getXunKong(this.getDayInGanZhiExact());
            },
            getDayXunKongExact2:function(){
              return LunarUtil.getXunKong(this.getDayInGanZhiExact2());
            },
            toString:function(){
              return this.getYearInChinese()+'年'+this.getMonthInChinese()+'月'+this.getDayInChinese();
            },
            toFullString:function(){
              var s = this.toString();
              s += ' '+this.getYearInGanZhi()+'('+this.getYearShengXiao()+')年';
              s += ' '+this.getMonthInGanZhi()+'('+this.getMonthShengXiao()+')月';
              s += ' '+this.getDayInGanZhi()+'('+this.getDayShengXiao()+')日';
              s += ' '+this.getTimeZhi()+'('+this.getTimeShengXiao()+')时';
              s += ' 纳音['+this.getYearNaYin()+' '+this.getMonthNaYin()+' '+this.getDayNaYin()+' '+this.getTimeNaYin()+']';
              s += ' 星期'+this.getWeekInChinese();
              var festivals = this.getFestivals();
              var i,j;
              for(i=0,j=festivals.length;i<j;i++){
                s += ' ('+festivals[i]+')';
              }
              var otherFestivals = this.getOtherFestivals();
              for(i=0,j=otherFestivals.length;i<j;i++){
                s += ' ('+otherFestivals[i]+')';
              }
              var jq = this.getJieQi();
              if(jq.length>0){
                s += ' ['+jq+']';
              }
              s += ' '+this.getGong()+'方'+this.getShou();
              s += ' 星宿['+this.getXiu()+this.getZheng()+this.getAnimal()+']('+this.getXiuLuck()+')';
              s += ' 彭祖百忌['+this.getPengZuGan()+' '+this.getPengZuZhi()+']';
              s += ' 喜神方位['+this.getDayPositionXi()+']('+this.getDayPositionXiDesc()+')';
              s += ' 阳贵神方位['+this.getDayPositionYangGui()+']('+this.getDayPositionYangGuiDesc()+')';
              s += ' 阴贵神方位['+this.getDayPositionYinGui()+']('+this.getDayPositionYinGuiDesc()+')';
              s += ' 福神方位['+this.getDayPositionFu()+']('+this.getDayPositionFuDesc()+')';
              s += ' 财神方位['+this.getDayPositionCai()+']('+this.getDayPositionCaiDesc()+')';
              s += ' 冲['+this.getDayChongDesc()+']';
              s += ' 煞['+this.getDaySha()+']';
              return s;
            },
            _buildNameAndIndex: function(name, index){
              return {
                _p:{
                  name: name,
                  index: index
                },
                getName: function(){return this._p.name;},
                setName: function(name){this._p.name = name;},
                getIndex: function(){return this._p.index;},
                setIndex: function(index){this._p.index = index;},
                toString: function(){return this.getName();},
                toFullString: function(){return this.getName()+'第'+this.getIndex()+'天';}
              };
            },
            getShuJiu:function(){
              var currentCalendar = ExactDate.fromYmd(this._p.solar.getYear(),this._p.solar.getMonth(),this._p.solar.getDay());
              var start = this._p.jieQi['DONG_ZHI'];
              var startCalendar = ExactDate.fromYmd(start.getYear(),start.getMonth(),start.getDay());
              if (currentCalendar < startCalendar) {
                start = this._p.jieQi['冬至'];
                startCalendar = ExactDate.fromYmd(start.getYear(),start.getMonth(),start.getDay());
              }
              var endCalendar = ExactDate.fromYmd(start.getYear(),start.getMonth(),start.getDay());
              endCalendar.setDate(endCalendar.getDate() + 81);
              if (currentCalendar < startCalendar || currentCalendar >= endCalendar) {
                return null;
              }
              var days = _diff(currentCalendar,startCalendar);
              return this._buildNameAndIndex(LunarUtil.NUMBER[Math.floor(days / 9) + 1] + '九', days % 9 + 1);
            },
            getFu:function(){
              var currentCalendar = ExactDate.fromYmd(this._p.solar.getYear(),this._p.solar.getMonth(),this._p.solar.getDay());
              var xiaZhi = this._p.jieQi['夏至'];
              var liQiu = this._p.jieQi['立秋'];
              var startCalendar = ExactDate.fromYmd(xiaZhi.getYear(),xiaZhi.getMonth(),xiaZhi.getDay());

              // 第1个庚日
              var add = 6 - xiaZhi.getLunar().getDayGanIndex();
              if (add < 0) {
                add += 10;
              }
              // 第3个庚日，即初伏第1天
              add += 20;
              startCalendar.setDate(startCalendar.getDate() + add);

              // 初伏以前
              if (currentCalendar < startCalendar) {
                return null;
              }

              var days = _diff(currentCalendar,startCalendar);
              if (days < 10) {
                return this._buildNameAndIndex('初伏', days + 1);
              }

              // 第4个庚日，中伏第1天
              startCalendar.setDate(startCalendar.getDate() + 10);

              days = _diff(currentCalendar,startCalendar);
              if (days < 10) {
                return this._buildNameAndIndex('中伏', days + 1);
              }

              // 第5个庚日，中伏第11天或末伏第1天
              startCalendar.setDate(startCalendar.getDate() + 10);

              var liQiuCalendar = ExactDate.fromYmd(liQiu.getYear(),liQiu.getMonth(),liQiu.getDay());

              days = _diff(currentCalendar,startCalendar);
              // 末伏
              if (liQiuCalendar <= startCalendar) {
                if (days < 10) {
                  return this._buildNameAndIndex('末伏', days + 1);
                }
              } else {
                // 中伏
                if (days < 10) {
                  return this._buildNameAndIndex('中伏', days + 11);
                }
                // 末伏第1天
                startCalendar.setDate(startCalendar.getDate() + 10);
                days = _diff(currentCalendar,startCalendar);
                if (days < 10) {
                  return this._buildNameAndIndex('末伏', days + 1);
                }
              }
              return null;
            },
            getLiuYao:function(){
              return LunarUtil.LIU_YAO[(Math.abs(this._p.month)+this._p.day-2)%6];
            },
            getWuHou:function(){
              var jieQi = this.getPrevJieQi();
              var name = jieQi.getName();
              var offset = 0;
              for(var i=0,j=Lunar.JIE_QI.length;i<j;i++){
                if(name === Lunar.JIE_QI[i]){
                  offset = i;
                  break;
                }
              }
              var currentCalendar = ExactDate.fromYmd(this._p.solar.getYear(),this._p.solar.getMonth(),this._p.solar.getDay());
              var startSolar = jieQi.getSolar();
              var startCalendar = ExactDate.fromYmd(startSolar.getYear(),startSolar.getMonth(),startSolar.getDay());
              var days = _diff(currentCalendar,startCalendar);
              return LunarUtil.WU_HOU[(offset*3+Math.floor(days/5)) % LunarUtil.WU_HOU.length];
            },
            getDayLu:function(){
              var gan = LunarUtil.LU[this.getDayGan()];
              var zhi = LunarUtil.LU[this.getDayZhi()];
              var lu = gan + '命互禄';
              if (zhi) {
                lu += ' ' + zhi + '命进禄';
              }
              return lu;
            },
            getTimes:function(){
              var l = [];
              l.push(LunarTime.fromYmdHms(this._p.year, this._p.month, this._p.day, 0, 0, 0));
              for(var i = 0; i < 12; i++){
                l.push(LunarTime.fromYmdHms(this._p.year, this._p.month, this._p.day, (i+1)*2-1, 0, 0));
              }
              return l;
            }
          };
        };
        return {
          JIE_QI: ['冬至','小寒','大寒','立春','雨水','惊蛰','春分','清明','谷雨','立夏','小满','芒种','夏至','小暑','大暑','立秋','处暑','白露','秋分','寒露','霜降','立冬','小雪','大雪'],
          JIE_QI_IN_USE: ['DA_XUE', '冬至', '小寒', '大寒', '立春', '雨水', '惊蛰', '春分', '清明', '谷雨', '立夏', '小满', '芒种', '夏至', '小暑', '大暑', '立秋', '处暑', '白露', '秋分', '寒露', '霜降', '立冬', '小雪', '大雪', 'DONG_ZHI', 'XIAO_HAN', 'DA_HAN', 'LI_CHUN', 'YU_SHUI', 'JING_ZHE'],
          fromYmdHms:function(y,m,d,hour,minute,second){return _fromYmdHms(y,m,d,hour,minute,second);},
          fromYmd:function(y,m,d){return _fromYmdHms(y,m,d,0,0,0);},
          fromDate:function(date){return _fromDate(date);}
        };
      })();
      var SolarWeek = (function(){
        var _fromDate = function(date,start){
          return _fromYmd(date.getFullYear(),date.getMonth()+1,date.getDate(),start);
        };
        var _fromYmd = function(y,m,d,start){
          return {
            _p:{
              year:y,
              month:m,
              day:d,
              start:start,
              calendar:ExactDate.fromYmd(y,m,d)
            },
            getYear:function(){
              return this._p.year;
            },
            getMonth:function(){
              return this._p.month;
            },
            getDay:function(){
              return this._p.day;
            },
            getStart:function(){
              return this._p.start;
            },
            /**
             * 获取当前日期是在当月第几周
             * @return number 周序号，从1开始
             */
            getIndex:function(){
              var firstDate = ExactDate.fromYmd(this._p.year,this._p.month,1);
              var firstDayWeek = firstDate.getDay();
              if(firstDayWeek===0){
                firstDayWeek = 7;
              }
              return Math.ceil((this._p.day+firstDayWeek-this._p.start)/7);
            },
            /**
             * 周推移
             * @param weeks 推移的周数，负数为倒推
             * @param separateMonth 是否按月单独计算
             * @return object 推移后的阳历周
             */
            next:function(weeks,separateMonth){
              if(0===weeks){
                return _fromYmd(this._p.year,this._p.month,this._p.day,this._p.start);
              }
              var date;
              if(separateMonth){
                var n = weeks;
                date = ExactDate.fromYmd(this._p.year,this._p.month,this._p.day);
                var week = _fromDate(date,this._p.start);
                var month = this._p.month;
                var plus = n>0;
                while(0!==n){
                  date.setDate(date.getDate()+(plus?7:-7));
                  week = _fromDate(date,this._p.start);
                  var weekMonth = week.getMonth();
                  if(month!==weekMonth){
                    var index = week.getIndex();
                    if(plus){
                      if(1===index){
                        var firstDay = week.getFirstDay();
                        week = _fromYmd(firstDay.getYear(),firstDay.getMonth(),firstDay.getDay(),this._p.start);
                        weekMonth = week.getMonth();
                      }else {
                        date = ExactDate.fromYmd(week.getYear(),week.getMonth(),1);
                        week = _fromDate(date,this._p.start);
                      }
                    }else {
                      var size = SolarUtil.getWeeksOfMonth(week.getYear(),week.getMonth(),this._p.start);
                      if(size===index){
                        var lastDay = week.getFirstDay().next(6);
                        week = _fromYmd(lastDay.getYear(),lastDay.getMonth(),lastDay.getDay(),this._p.start);
                        weekMonth = week.getMonth();
                      }else {
                        date = ExactDate.fromYmd(week.getYear(),week.getMonth(),SolarUtil.getDaysOfMonth(week.getYear(),week.getMonth()));
                        week = _fromDate(date,this._p.start);
                      }
                    }
                    month = weekMonth;
                  }
                  n-=plus?1:-1;
                }
                return week;
              }else {
                date = ExactDate.fromYmd(this._p.year,this._p.month,this._p.day);
                date.setDate(date.getDate()+weeks*7);
                return _fromDate(date,this._p.start);
              }
            },
            /**
             * 获取本周第一天的阳历日期（可能跨月）
             * @return object 本周第一天的阳历日期
             */
            getFirstDay:function(){
              var date = ExactDate.fromYmd(this._p.year,this._p.month,this._p.day);
              var prev = date.getDay()-this._p.start;
              if(prev<0){
                prev += 7;
              }
              date.setDate(date.getDate()-prev);
              return Solar.fromDate(date);
            },
            /**
             * 获取本周第一天的阳历日期（仅限当月）
             * @return object 本周第一天的阳历日期
             */
            getFirstDayInMonth:function(){
              var index = 0;
              var days = this.getDays();
              for(var i = 0;i<days.length;i++){
                if(this._p.month===days[i].getMonth()){
                  index = i;
                  break;
                }
              }
              return days[index];
            },
            /**
             * 获取本周的阳历日期列表（可能跨月）
             * @return Array 本周的阳历日期列表
             */
            getDays:function(){
              var firstDay = this.getFirstDay();
              var l = [];
              l.push(firstDay);
              for(var i = 1;i<7;i++){
                l.push(firstDay.next(i));
              }
              return l;
            },
            /**
             * 获取本周的阳历日期列表（仅限当月）
             * @return Array 本周的阳历日期列表（仅限当月）
             */
            getDaysInMonth:function(){
              var days = this.getDays();
              var l = [];
              for(var i = 0;i<days.length;i++){
                var day = days[i];
                if(this._p.month!==day.getMonth()){
                  continue;
                }
                l.push(day);
              }
              return l;
            },
            toString:function(){
              return this.getYear()+'.'+this.getMonth()+'.'+this.getIndex();
            },
            toFullString:function(){
              return this.getYear()+'年'+this.getMonth()+'月第'+this.getIndex()+'周';
            }
          };
        };
        return {
          /**
           * 指定年月日生成当天所在的阳历周
           * @param y 年份
           * @param m 月份
           * @param d 日期
           * @param start 星期几作为一周的开始，1234560分别代表星期一至星期天
           * @return object 阳历周
           */
          fromYmd:function(y,m,d,start){return _fromYmd(y,m,d,start);},
          /**
           * 指定日期生成当天所在的阳历周
           * @param date 日期
           * @param start 星期几作为一周的开始，1234560分别代表星期一至星期天
           * @return object 阳历周
           */
          fromDate:function(date,start){return _fromDate(date,start);}
        };
      })();
      var SolarMonth = (function(){
        var _fromDate = function(date){
          return _fromYm(date.getFullYear(),date.getMonth()+1);
        };
        var _fromYm = function(y,m){
          return {
            _p:{
              year:y,
              month:m,
              calendar:ExactDate.fromYmd(y,m,1)
            },
            getYear:function(){
              return this._p.year;
            },
            getMonth:function(){
              return this._p.month;
            },
            next:function(months){
              var date = ExactDate.fromYmd(this._p.year,this._p.month,1);
              date.setMonth(date.getMonth()+months);
              return _fromDate(date);
            },
            getDays:function(){
              var l = [];
              var d = Solar.fromYmd(this._p.year,this._p.month,1);
              l.push(d);
              var days = SolarUtil.getDaysOfMonth(this._p.year,this._p.month);
              for(var i = 1;i<days;i++){
                l.push(d.next(i));
              }
              return l;
            },
            getWeeks:function(start){
              var l = [];
              var weeks = SolarUtil.getWeeksOfMonth(this._p.year,this._p.month,start);
              for(var i = 0;i<weeks;i++){
                l.push(SolarWeek.fromYmd(this._p.year,this._p.month,1+i*7,start));
              }
              return l;
            },
            toString:function(){
              return this.getYear()+'-'+this.getMonth();
            },
            toFullString:function(){
              return this.getYear()+'年'+this.getMonth()+'月';
            }
          };
        };
        return {
          fromYm:function(y,m){return _fromYm(y,m);},
          fromDate:function(date){return _fromDate(date);}
        };
      })();
      var SolarSeason = (function(){
        var _fromDate = function(date){
          return _fromYm(date.getFullYear(),date.getMonth()+1);
        };
        var _fromYm = function(y,m){
          return {
            _p:{
              year:y,
              month:m,
              calendar:ExactDate.fromYmd(y,m,1)
            },
            getYear:function(){
              return this._p.year;
            },
            getMonth:function(){
              return this._p.month;
            },
            /**
             * 获取当月是第几季度
             * @return number 季度序号，从1开始
             */
            getIndex:function(){
              return Math.ceil(this._p.month/3);
            },
            /**
             * 季度推移
             * @param seasons 推移的季度数，负数为倒推
             * @return object 推移后的季度
             */
            next:function(seasons){
              if(0===seasons){
                return _fromYm(this._p.year,this._p.month);
              }
              var date = ExactDate.fromYmd(this._p.year,this._p.month,1);
              date.setMonth(date.getMonth()+3*seasons);
              return _fromDate(date);
            },
            /**
             * 获取本季度的月份
             * @return Array 本季度的月份列表
             */
            getMonths:function(){
              var l = [];
              var index = this.getIndex()-1;
              for(var i=0;i<3;i++){
                l.push(SolarMonth.fromYm(this._p.year,3*index+i+1));
              }
              return l;
            },
            toString:function(){
              return this.getYear()+'.'+this.getIndex();
            },
            toFullString:function(){
              return this.getYear()+'年'+this.getIndex()+'季度';
            }
          };
        };
        return {
          fromYm:function(y,m){return _fromYm(y,m);},
          fromDate:function(date){return _fromDate(date);}
        };
      })();
      var SolarHalfYear = (function(){
        var _fromDate = function(date){
          return _fromYm(date.getFullYear(),date.getMonth()+1);
        };
        var _fromYm = function(y,m){
          return {
            _p:{
              year:y,
              month:m,
              calendar:ExactDate.fromYmd(y,m,1)
            },
            getYear:function(){
              return this._p.year;
            },
            getMonth:function(){
              return this._p.month;
            },
            /**
             * 获取当月是第几半年
             * @return number 半年序号，从1开始
             */
            getIndex:function(){
              return Math.ceil(this._p.month/6);
            },
            /**
             * 半年推移
             * @param halfYears 推移的半年数，负数为倒推
             * @return object 推移后的半年
             */
            next:function(halfYears){
              if(0===halfYears){
                return _fromYm(this._p.year,this._p.month);
              }
              var date = ExactDate.fromYmd(this._p.year,this._p.month,1);
              date.setMonth(date.getMonth()+6*halfYears);
              return _fromDate(date);
            },
            /**
             * 获取本半年的月份
             * @return Array 本半年的月份列表
             */
            getMonths:function(){
              var l = [];
              var index = this.getIndex()-1;
              for(var i=0;i<6;i++){
                l.push(SolarMonth.fromYm(this._p.year,6*index+i+1));
              }
              return l;
            },
            toString:function(){
              return this.getYear()+'.'+this.getIndex();
            },
            toFullString:function(){
              return this.getYear()+'年'+['上','下'][this.getIndex()-1]+'半年';
            }
          };
        };
        return {
          fromYm:function(y,m){return _fromYm(y,m);},
          fromDate:function(date){return _fromDate(date);}
        };
      })();
      var SolarYear = (function(){
        var _fromDate = function(date){
          return _fromYear(date.getFullYear());
        };
        var _fromYear = function(y){
          return {
            _p:{
              year:y,
              calendar:ExactDate.fromYmd(y,1,1)
            },
            getYear:function(){
              return this._p.year;
            },
            next:function(years){
              var date = ExactDate.fromYmd(this._p.year,1,1);
              date.setFullYear(date.getFullYear()+years);
              return _fromDate(date);
            },
            getMonths:function(){
              var l = [];
              var m = SolarMonth.fromYm(this._p.year,1);
              l.push(m);
              for(var i = 1;i<12;i++){
                l.push(m.next(i));
              }
              return l;
            },
            toString:function(){
              return this.getYear()+'';
            },
            toFullString:function(){
              return this.getYear()+'年';
            }
          };
        };
        return {
          fromYear:function(y){return _fromYear(y);},
          fromDate:function(date){return _fromDate(date);}
        };
      })();
      var LunarYear = (function(){
        var _LEAP_11 = [75, 94, 170, 238, 265, 322, 389, 469, 553, 583, 610, 678, 735, 754, 773, 849, 887, 936, 1050, 1069, 1126, 1145, 1164, 1183, 1259, 1278, 1308, 1373, 1403, 1441, 1460, 1498, 1555, 1593, 1612, 1631, 1642, 2033, 2128, 2147, 2242, 2614, 2728, 2910, 3062, 3244, 3339, 3616, 3711, 3730, 3825, 4007, 4159, 4197, 4322, 4341, 4379, 4417, 4531, 4599, 4694, 4713, 4789, 4808, 4971, 5085, 5104, 5161, 5180, 5199, 5294, 5305, 5476, 5677, 5696, 5772, 5791, 5848, 5886, 6049, 6068, 6144, 6163, 6258, 6402, 6440, 6497, 6516, 6630, 6641, 6660, 6679, 6736, 6774, 6850, 6869, 6899, 6918, 6994, 7013, 7032, 7051, 7070, 7089, 7108, 7127, 7146, 7222, 7271, 7290, 7309, 7366, 7385, 7404, 7442, 7461, 7480, 7491, 7499, 7594, 7624, 7643, 7662, 7681, 7719, 7738, 7814, 7863, 7882, 7901, 7939, 7958, 7977, 7996, 8034, 8053, 8072, 8091, 8121, 8159, 8186, 8216, 8235, 8254, 8273, 8311, 8330, 8341, 8349, 8368, 8444, 8463, 8474, 8493, 8531, 8569, 8588, 8626, 8664, 8683, 8694, 8702, 8713, 8721, 8751, 8789, 8808, 8816, 8827, 8846, 8884, 8903, 8922, 8941, 8971, 9036, 9066, 9085, 9104, 9123, 9142, 9161, 9180, 9199, 9218, 9256, 9294, 9313, 9324, 9343, 9362, 9381, 9419, 9438, 9476, 9514, 9533, 9544, 9552, 9563, 9571, 9582, 9601, 9639, 9658, 9666, 9677, 9696, 9734, 9753, 9772, 9791, 9802, 9821, 9886, 9897, 9916, 9935, 9954, 9973, 9992];
        var _LEAP_12 = [37, 56, 113, 132, 151, 189, 208, 227, 246, 284, 303, 341, 360, 379, 417, 436, 458, 477, 496, 515, 534, 572, 591, 629, 648, 667, 697, 716, 792, 811, 830, 868, 906, 925, 944, 963, 982, 1001, 1020, 1039, 1058, 1088, 1153, 1202, 1221, 1240, 1297, 1335, 1392, 1411, 1422, 1430, 1517, 1525, 1536, 1574, 3358, 3472, 3806, 3988, 4751, 4941, 5066, 5123, 5275, 5343, 5438, 5457, 5495, 5533, 5552, 5715, 5810, 5829, 5905, 5924, 6421, 6535, 6793, 6812, 6888, 6907, 7002, 7184, 7260, 7279, 7374, 7556, 7746, 7757, 7776, 7833, 7852, 7871, 7966, 8015, 8110, 8129, 8148, 8224, 8243, 8338, 8406, 8425, 8482, 8501, 8520, 8558, 8596, 8607, 8615, 8645, 8740, 8778, 8835, 8865, 8930, 8960, 8979, 8998, 9017, 9055, 9074, 9093, 9112, 9150, 9188, 9237, 9275, 9332, 9351, 9370, 9408, 9427, 9446, 9457, 9465, 9495, 9560, 9590, 9628, 9647, 9685, 9715, 9742, 9780, 9810, 9818, 9829, 9848, 9867, 9905, 9924, 9943, 9962, 10000];
        var _LEAP = {};
        var _CACHE = {};
        var _initLeap = function() {
          var i, j;
          for (i = 0, j = _LEAP_11.length; i < j; i++) {
            _LEAP['_' + _LEAP_11[i]] = 13;
          }
          for (i = 0, j = _LEAP_12.length; i < j; i++) {
            _LEAP['_' + _LEAP_12[i]] = 14;
          }
        };
        _initLeap();
        var _fromYear = function(lunarYear){
          return {
            _p:{
              year:lunarYear,
              months:[],
              jieQiJulianDays:[]
            },
            getYear:function(){return this._p.year;},
            getJieQiJulianDays:function(){return this._p.jieQiJulianDays;},
            getMonths:function(){return this._p.months;},
            getMonth:function(lunarMonth){
              for (var i = 0, j = this._p.months.length; i < j; i++) {
                var m = this._p.months[i];
                if (m.getYear() == this._p.year && m.getMonth() == lunarMonth) {
                  return m;
                }
              }
              return null;
            },
            getLeapMonth:function(){
              for (var i = 0, j = this._p.months.length; i < j; i++) {
                var m = this._p.months[i];
                if (m.getYear() == this._p.year && m.isLeap()) {
                  return Math.abs(m.getMonth());
                }
              }
              return 0;
            },
            getZhiShui:function(){
              var offset = 4 - Solar.fromJulianDay(this.getMonth(1).getFirstJulianDay()).getLunar().getDayZhiIndex();
              if (offset < 0) {
                offset += 12;
              }
              return LunarUtil.NUMBER[offset+1] + '龙治水';
            },
            getFenBing:function(){
              var offset = 2 - Solar.fromJulianDay(this.getMonth(1).getFirstJulianDay()).getLunar().getDayGanIndex();
              if (offset < 0) {
                offset += 10;
              }
              return LunarUtil.NUMBER[offset+1] + '人分饼';
            },
            getGengTian:function(){
              var offset = 1 - Solar.fromJulianDay(this.getMonth(1).getFirstJulianDay()).getLunar().getDayZhiIndex();
              if (offset < 0) {
                offset += 12;
              }
              return LunarUtil.NUMBER[offset+1] + '牛耕田';
            },
            getDeJin:function(){
              var offset = 7 - Solar.fromJulianDay(this.getMonth(1).getFirstJulianDay()).getLunar().getDayGanIndex();
              if (offset < 0) {
                offset += 10;
              }
              return LunarUtil.NUMBER[offset+1] + '日得金';
            },
            toString:function(){
              return this.getYear()+'';
            },
            toFullString:function(){
              return this.getYear()+'年';
            },
            _compute:function(){
              this._p.months = [];
              this._p.jieQiJulianDays = [];
              // 节气(中午12点)，长度25
              var jq = [];
              // 合朔，即每月初一(中午12点)，长度16
              var hs = [];
              // 每月天数，长度15
              var dayCounts = [];
              var i,j;
              var currentYear = this._p.year;
              var year = currentYear - 2000;
              // 从上年的大雪到下年的大寒
              for (i = 0, j = Lunar.JIE_QI_IN_USE.length; i < j; i++) {
                // 精确的节气
                var t = 36525 * ShouXingUtil.saLonT((year + (17 + i) * 15.0 / 360) * ShouXingUtil.PI_2);
                t += ShouXingUtil.ONE_THIRD - ShouXingUtil.dtT(t);
                this._p.jieQiJulianDays.push(t + Solar.J2000);
                // 按中午12点算的节气
                if (i > 0 && i < 26) {
                  jq[i - 1] = Math.round(t);
                }
              }

              // 冬至前的初一
              var w = ShouXingUtil.calcShuo(jq[0]);
              if (w > jq[0]) {
                w -= 29.5306;
              }
              // 递推每月初一
              for (i = 0; i < 16; i++) {
                hs.push(ShouXingUtil.calcShuo(w + 29.5306 * i));
              }
              // 每月天数
              for (i = 0; i < 15; i++) {
                dayCounts.push(Math.floor(hs[i + 1] - hs[i]));
              }

              var currentYearLeap = _LEAP['_' + currentYear];
              if (!currentYearLeap) {
                currentYearLeap = -1;
                if (hs[13] <= jq[24]) {
                  i = 1;
                  while (hs[i + 1] > jq[2 * i] && i < 13) {
                    i++;
                  }
                  currentYearLeap = i;
                }
              }

              var prevYear = currentYear - 1;
              var prevYearLeap = _LEAP['_' + prevYear];
              prevYearLeap = prevYearLeap ? prevYearLeap - 12 : -1;

              var y = this._p.year - 1;
              var m = 11;
              for (i = 0, j = dayCounts.length; i < j; i++) {
                var cm = m;
                var isNextLeap = false;
                if (y == currentYear && i == currentYearLeap) {
                  cm = -cm;
                } else if (y == prevYear && i == prevYearLeap) {
                  cm = -cm;
                }
                if (y == currentYear && i + 1 == currentYearLeap) {
                  isNextLeap = true;
                } else if (y == prevYear && i + 1 == prevYearLeap) {
                  isNextLeap = true;
                }
                this._p.months.push(LunarMonth._(y, cm, dayCounts[i], hs[i] + Solar.J2000));
                if (!isNextLeap) {
                  m++;
                }
                if (m == 13) {
                  m = 1;
                  y++;
                }
              }
              return this;
            }
          }._compute();
        };
        var _fromCachedYear = function(lunarYear) {
          var key = '_' + lunarYear;
          var obj = _CACHE[key];
          if (!obj) {
            obj = _fromYear(lunarYear);
            _CACHE[key] = obj;
          }
          return obj;
        };
        return {
          fromYear:function(lunarYear){return _fromCachedYear(lunarYear);}
        };
      })();
      var LunarMonth = (function(){
        var _fromYm = function(lunarYear,lunarMonth){
          return LunarYear.fromYear(lunarYear).getMonth(lunarMonth);
        };
        var _new = function(lunarYear, lunarMonth, dayCount, firstJulianDay){
          return {
            _p: {
              year: lunarYear,
              month: lunarMonth,
              dayCount: dayCount,
              firstJulianDay: firstJulianDay
            },
            getYear:function(){return this._p.year;},
            getMonth:function(){return this._p.month;},
            getDayCount:function(){return this._p.dayCount;},
            getFirstJulianDay:function(){return this._p.firstJulianDay;},
            isLeap:function(){return this._p.month<0;},
            toString:function(){return this.getYear()+'年'+(this.isLeap()?'闰':'')+LunarUtil.MONTH[Math.abs(this.getMonth())]+'月('+this.getDayCount()+')天';}
          };
        };
        return {
          fromYm:function(lunarYear,lunarMonth){return _fromYm(lunarYear,lunarMonth);},
          _:function(lunarYear, lunarMonth, dayCount, firstJulianDay){return _new(lunarYear, lunarMonth, dayCount, firstJulianDay);}
        };
      })();
      var ShouXingUtil = (function(){
        return {
          PI_2: 2*Math.PI,
          ONE_THIRD: 1.0/3,
          SECOND_PER_DAY: 86400,
          SECOND_PER_RAD: 648000 / Math.PI,
          NUT_B:[2.1824, -33.75705, 36e-6, -1720, 920, 3.5069, 1256.66393, 11e-6, -132, 57, 1.3375, 16799.4182, -51e-6, -23, 10, 4.3649, -67.5141, 72e-6, 21, -9, 0.04, -628.302, 0, -14, 0, 2.36, 8328.691, 0, 7, 0, 3.46, 1884.966, 0, -5, 2, 5.44, 16833.175, 0, -4, 2, 3.69, 25128.110, 0, -3, 0, 3.55, 628.362, 0, 2, 0],
          DT_AT:[-4000, 108371.7, -13036.80, 392.000, 0.0000, -500, 17201.0, -627.82, 16.170, -0.3413, -150, 12200.6, -346.41, 5.403, -0.1593, 150, 9113.8, -328.13, -1.647, 0.0377, 500, 5707.5, -391.41, 0.915, 0.3145, 900, 2203.4, -283.45, 13.034, -0.1778, 1300, 490.1, -57.35, 2.085, -0.0072, 1600, 120.0, -9.81, -1.532, 0.1403, 1700, 10.2, -0.91, 0.510, -0.0370, 1800, 13.4, -0.72, 0.202, -0.0193, 1830, 7.8, -1.81, 0.416, -0.0247, 1860, 8.3, -0.13, -0.406, 0.0292, 1880, -5.4, 0.32, -0.183, 0.0173, 1900, -2.3, 2.06, 0.169, -0.0135, 1920, 21.2, 1.69, -0.304, 0.0167, 1940, 24.2, 1.22, -0.064, 0.0031, 1960, 33.2, 0.51, 0.231, -0.0109, 1980, 51.0, 1.29, -0.026, 0.0032, 2000, 63.87, 0.1, 0, 0, 2005, 64.7, 0.4, 0, 0, 2015, 69],
          XL0:[10000000000, 20, 578, 920, 1100, 1124, 1136, 1148, 1217, 1226, 1229, 1229, 1229, 1229, 1937, 2363, 2618, 2633, 2660, 2666, 17534704567, 0.00000000000, 0.00000000000, 334165646, 4.669256804, 6283.075849991, 3489428, 4.6261024, 12566.1517000, 349706, 2.744118, 5753.384885, 341757, 2.828866, 3.523118, 313590, 3.627670, 77713.771468, 267622, 4.418084, 7860.419392, 234269, 6.135162, 3930.209696, 132429, 0.742464, 11506.769770, 127317, 2.037097, 529.690965, 119917, 1.109629, 1577.343542, 99025, 5.23268, 5884.92685, 90186, 2.04505, 26.29832, 85722, 3.50849, 398.14900, 77979, 1.17883, 5223.69392, 75314, 2.53339, 5507.55324, 50526, 4.58293, 18849.22755, 49238, 4.20507, 775.52261, 35666, 2.91954, 0.06731, 31709, 5.84902, 11790.62909, 28413, 1.89869, 796.29801, 27104, 0.31489, 10977.07880, 24281, 0.34481, 5486.77784, 20616, 4.80647, 2544.31442, 20539, 1.86948, 5573.14280, 20226, 2.45768, 6069.77675, 15552, 0.83306, 213.29910, 13221, 3.41118, 2942.46342, 12618, 1.08303, 20.77540, 11513, 0.64545, 0.98032, 10285, 0.63600, 4694.00295, 10190, 0.97569, 15720.83878, 10172, 4.26680, 7.11355, 9921, 6.2099, 2146.1654, 9761, 0.6810, 155.4204, 8580, 5.9832, 161000.6857, 8513, 1.2987, 6275.9623, 8471, 3.6708, 71430.6956, 7964, 1.8079, 17260.1547, 7876, 3.0370, 12036.4607, 7465, 1.7551, 5088.6288, 7387, 3.5032, 3154.6871, 7355, 4.6793, 801.8209, 6963, 0.8330, 9437.7629, 6245, 3.9776, 8827.3903, 6115, 1.8184, 7084.8968, 5696, 2.7843, 6286.5990, 5612, 4.3869, 14143.4952, 5558, 3.4701, 6279.5527, 5199, 0.1891, 12139.5535, 5161, 1.3328, 1748.0164, 5115, 0.2831, 5856.4777, 4900, 0.4874, 1194.4470, 4104, 5.3682, 8429.2413, 4094, 2.3985, 19651.0485, 3920, 6.1683, 10447.3878, 3677, 6.0413, 10213.2855, 3660, 2.5696, 1059.3819, 3595, 1.7088, 2352.8662, 3557, 1.7760, 6812.7668, 3329, 0.5931, 17789.8456, 3041, 0.4429, 83996.8473, 3005, 2.7398, 1349.8674, 2535, 3.1647, 4690.4798, 2474, 0.2148, 3.5904, 2366, 0.4847, 8031.0923, 2357, 2.0653, 3340.6124, 2282, 5.2220, 4705.7323, 2189, 5.5559, 553.5694, 2142, 1.4256, 16730.4637, 2109, 4.1483, 951.7184, 2030, 0.3713, 283.8593, 1992, 5.2221, 12168.0027, 1986, 5.7747, 6309.3742, 1912, 3.8222, 23581.2582, 1889, 5.3863, 149854.4001, 1790, 2.2149, 13367.9726, 1748, 4.5605, 135.0651, 1622, 5.9884, 11769.8537, 1508, 4.1957, 6256.7775, 1442, 4.1932, 242.7286, 1435, 3.7236, 38.0277, 1397, 4.4014, 6681.2249, 1362, 1.8893, 7632.9433, 1250, 1.1305, 5.5229, 1205, 2.6223, 955.5997, 1200, 1.0035, 632.7837, 1129, 0.1774, 4164.3120, 1083, 0.3273, 103.0928, 1052, 0.9387, 11926.2544, 1050, 5.3591, 1592.5960, 1033, 6.1998, 6438.4962, 1001, 6.0291, 5746.2713, 980, 0.999, 11371.705, 980, 5.244, 27511.468, 938, 2.624, 5760.498, 923, 0.483, 522.577, 922, 4.571, 4292.331, 905, 5.337, 6386.169, 862, 4.165, 7058.598, 841, 3.299, 7234.794, 836, 4.539, 25132.303, 813, 6.112, 4732.031, 812, 6.271, 426.598, 801, 5.821, 28.449, 787, 0.996, 5643.179, 776, 2.957, 23013.540, 769, 3.121, 7238.676, 758, 3.974, 11499.656, 735, 4.386, 316.392, 731, 0.607, 11513.883, 719, 3.998, 74.782, 706, 0.323, 263.084, 676, 5.911, 90955.552, 663, 3.665, 17298.182, 653, 5.791, 18073.705, 630, 4.717, 6836.645, 615, 1.458, 233141.314, 612, 1.075, 19804.827, 596, 3.321, 6283.009, 596, 2.876, 6283.143, 555, 2.452, 12352.853, 541, 5.392, 419.485, 531, 0.382, 31441.678, 519, 4.065, 6208.294, 513, 2.361, 10973.556, 494, 5.737, 9917.697, 450, 3.272, 11015.106, 449, 3.653, 206.186, 447, 2.064, 7079.374, 435, 4.423, 5216.580, 421, 1.906, 245.832, 413, 0.921, 3738.761, 402, 0.840, 20.355, 387, 1.826, 11856.219, 379, 2.344, 3.881, 374, 2.954, 3128.389, 370, 5.031, 536.805, 365, 1.018, 16200.773, 365, 1.083, 88860.057, 352, 5.978, 3894.182, 352, 2.056, 244287.600, 351, 3.713, 6290.189, 340, 1.106, 14712.317, 339, 0.978, 8635.942, 339, 3.202, 5120.601, 333, 0.837, 6496.375, 325, 3.479, 6133.513, 316, 5.089, 21228.392, 316, 1.328, 10873.986, 309, 3.646, 10.637, 303, 1.802, 35371.887, 296, 3.397, 9225.539, 288, 6.026, 154717.610, 281, 2.585, 14314.168, 262, 3.856, 266.607, 262, 2.579, 22483.849, 257, 1.561, 23543.231, 255, 3.949, 1990.745, 251, 3.744, 10575.407, 240, 1.161, 10984.192, 238, 0.106, 7.046, 236, 4.272, 6040.347, 234, 3.577, 10969.965, 211, 3.714, 65147.620, 210, 0.754, 13521.751, 207, 4.228, 5650.292, 202, 0.814, 170.673, 201, 4.629, 6037.244, 200, 0.381, 6172.870, 199, 3.933, 6206.810, 199, 5.197, 6262.300, 197, 1.046, 18209.330, 195, 1.070, 5230.807, 195, 4.869, 36.028, 194, 4.313, 6244.943, 192, 1.229, 709.933, 192, 5.595, 6282.096, 192, 0.602, 6284.056, 189, 3.744, 23.878, 188, 1.904, 15.252, 188, 0.867, 22003.915, 182, 3.681, 15110.466, 181, 0.491, 1.484, 179, 3.222, 39302.097, 179, 1.259, 12559.038, 62833196674749, 0.000000000000, 0.000000000000, 20605886, 2.67823456, 6283.07584999, 430343, 2.635127, 12566.151700, 42526, 1.59047, 3.52312, 11926, 5.79557, 26.29832, 10898, 2.96618, 1577.34354, 9348, 2.5921, 18849.2275, 7212, 1.1385, 529.6910, 6777, 1.8747, 398.1490, 6733, 4.4092, 5507.5532, 5903, 2.8880, 5223.6939, 5598, 2.1747, 155.4204, 4541, 0.3980, 796.2980, 3637, 0.4662, 775.5226, 2896, 2.6471, 7.1135, 2084, 5.3414, 0.9803, 1910, 1.8463, 5486.7778, 1851, 4.9686, 213.2991, 1729, 2.9912, 6275.9623, 1623, 0.0322, 2544.3144, 1583, 1.4305, 2146.1654, 1462, 1.2053, 10977.0788, 1246, 2.8343, 1748.0164, 1188, 3.2580, 5088.6288, 1181, 5.2738, 1194.4470, 1151, 2.0750, 4694.0030, 1064, 0.7661, 553.5694, 997, 1.303, 6286.599, 972, 4.239, 1349.867, 945, 2.700, 242.729, 858, 5.645, 951.718, 758, 5.301, 2352.866, 639, 2.650, 9437.763, 610, 4.666, 4690.480, 583, 1.766, 1059.382, 531, 0.909, 3154.687, 522, 5.661, 71430.696, 520, 1.854, 801.821, 504, 1.425, 6438.496, 433, 0.241, 6812.767, 426, 0.774, 10447.388, 413, 5.240, 7084.897, 374, 2.001, 8031.092, 356, 2.429, 14143.495, 350, 4.800, 6279.553, 337, 0.888, 12036.461, 337, 3.862, 1592.596, 325, 3.400, 7632.943, 322, 0.616, 8429.241, 318, 3.188, 4705.732, 297, 6.070, 4292.331, 295, 1.431, 5746.271, 290, 2.325, 20.355, 275, 0.935, 5760.498, 270, 4.804, 7234.794, 253, 6.223, 6836.645, 228, 5.003, 17789.846, 225, 5.672, 11499.656, 215, 5.202, 11513.883, 208, 3.955, 10213.286, 208, 2.268, 522.577, 206, 2.224, 5856.478, 206, 2.550, 25132.303, 203, 0.910, 6256.778, 189, 0.532, 3340.612, 188, 4.735, 83996.847, 179, 1.474, 4164.312, 178, 3.025, 5.523, 177, 3.026, 5753.385, 159, 4.637, 3.286, 157, 6.124, 5216.580, 155, 3.077, 6681.225, 154, 4.200, 13367.973, 143, 1.191, 3894.182, 138, 3.093, 135.065, 136, 4.245, 426.598, 134, 5.765, 6040.347, 128, 3.085, 5643.179, 127, 2.092, 6290.189, 125, 3.077, 11926.254, 125, 3.445, 536.805, 114, 3.244, 12168.003, 112, 2.318, 16730.464, 111, 3.901, 11506.770, 111, 5.320, 23.878, 105, 3.750, 7860.419, 103, 2.447, 1990.745, 96, 0.82, 3.88, 96, 4.08, 6127.66, 91, 5.42, 206.19, 91, 0.42, 7079.37, 88, 5.17, 11790.63, 81, 0.34, 9917.70, 80, 3.89, 10973.56, 78, 2.40, 1589.07, 78, 2.58, 11371.70, 77, 3.98, 955.60, 77, 3.36, 36.03, 76, 1.30, 103.09, 75, 5.18, 10969.97, 75, 4.96, 6496.37, 73, 5.21, 38.03, 72, 2.65, 6309.37, 70, 5.61, 3738.76, 69, 2.60, 3496.03, 69, 0.39, 15.25, 69, 2.78, 20.78, 65, 1.13, 7058.60, 64, 4.28, 28.45, 61, 5.63, 10984.19, 60, 0.73, 419.48, 60, 5.28, 10575.41, 58, 5.55, 17298.18, 58, 3.19, 4732.03, 5291887, 0.0000000, 0.0000000, 871984, 1.072097, 6283.075850, 30913, 0.86729, 12566.15170, 2734, 0.0530, 3.5231, 1633, 5.1883, 26.2983, 1575, 3.6846, 155.4204, 954, 0.757, 18849.228, 894, 2.057, 77713.771, 695, 0.827, 775.523, 506, 4.663, 1577.344, 406, 1.031, 7.114, 381, 3.441, 5573.143, 346, 5.141, 796.298, 317, 6.053, 5507.553, 302, 1.192, 242.729, 289, 6.117, 529.691, 271, 0.306, 398.149, 254, 2.280, 553.569, 237, 4.381, 5223.694, 208, 3.754, 0.980, 168, 0.902, 951.718, 153, 5.759, 1349.867, 145, 4.364, 1748.016, 134, 3.721, 1194.447, 125, 2.948, 6438.496, 122, 2.973, 2146.165, 110, 1.271, 161000.686, 104, 0.604, 3154.687, 100, 5.986, 6286.599, 92, 4.80, 5088.63, 89, 5.23, 7084.90, 83, 3.31, 213.30, 76, 3.42, 5486.78, 71, 6.19, 4690.48, 68, 3.43, 4694.00, 65, 1.60, 2544.31, 64, 1.98, 801.82, 61, 2.48, 10977.08, 50, 1.44, 6836.65, 49, 2.34, 1592.60, 46, 1.31, 4292.33, 46, 3.81, 149854.40, 43, 0.04, 7234.79, 40, 4.94, 7632.94, 39, 1.57, 71430.70, 38, 3.17, 6309.37, 35, 0.99, 6040.35, 35, 0.67, 1059.38, 31, 3.18, 2352.87, 31, 3.55, 8031.09, 30, 1.92, 10447.39, 30, 2.52, 6127.66, 28, 4.42, 9437.76, 28, 2.71, 3894.18, 27, 0.67, 25132.30, 26, 5.27, 6812.77, 25, 0.55, 6279.55, 23, 1.38, 4705.73, 22, 0.64, 6256.78, 20, 6.07, 640.88, 28923, 5.84384, 6283.07585, 3496, 0.0000, 0.0000, 1682, 5.4877, 12566.1517, 296, 5.196, 155.420, 129, 4.722, 3.523, 71, 5.30, 18849.23, 64, 5.97, 242.73, 40, 3.79, 553.57, 11408, 3.14159, 0.00000, 772, 4.134, 6283.076, 77, 3.84, 12566.15, 42, 0.42, 155.42, 88, 3.14, 0.00, 17, 2.77, 6283.08, 5, 2.01, 155.42, 3, 2.21, 12566.15, 27962, 3.19870, 84334.66158, 10164, 5.42249, 5507.55324, 8045, 3.8801, 5223.6939, 4381, 3.7044, 2352.8662, 3193, 4.0003, 1577.3435, 2272, 3.9847, 1047.7473, 1814, 4.9837, 6283.0758, 1639, 3.5646, 5856.4777, 1444, 3.7028, 9437.7629, 1430, 3.4112, 10213.2855, 1125, 4.8282, 14143.4952, 1090, 2.0857, 6812.7668, 1037, 4.0566, 71092.8814, 971, 3.473, 4694.003, 915, 1.142, 6620.890, 878, 4.440, 5753.385, 837, 4.993, 7084.897, 770, 5.554, 167621.576, 719, 3.602, 529.691, 692, 4.326, 6275.962, 558, 4.410, 7860.419, 529, 2.484, 4705.732, 521, 6.250, 18073.705, 903, 3.897, 5507.553, 618, 1.730, 5223.694, 380, 5.244, 2352.866, 166, 1.627, 84334.662, 10001398880, 0.00000000000, 0.00000000000, 167069963, 3.098463508, 6283.075849991, 1395602, 3.0552461, 12566.1517000, 308372, 5.198467, 77713.771468, 162846, 1.173877, 5753.384885, 157557, 2.846852, 7860.419392, 92480, 5.45292, 11506.76977, 54244, 4.56409, 3930.20970, 47211, 3.66100, 5884.92685, 34598, 0.96369, 5507.55324, 32878, 5.89984, 5223.69392, 30678, 0.29867, 5573.14280, 24319, 4.27350, 11790.62909, 21183, 5.84715, 1577.34354, 18575, 5.02194, 10977.07880, 17484, 3.01194, 18849.22755, 10984, 5.05511, 5486.77784, 9832, 0.8868, 6069.7768, 8650, 5.6896, 15720.8388, 8583, 1.2708, 161000.6857, 6490, 0.2725, 17260.1547, 6292, 0.9218, 529.6910, 5706, 2.0137, 83996.8473, 5574, 5.2416, 71430.6956, 4938, 3.2450, 2544.3144, 4696, 2.5781, 775.5226, 4466, 5.5372, 9437.7629, 4252, 6.0111, 6275.9623, 3897, 5.3607, 4694.0030, 3825, 2.3926, 8827.3903, 3749, 0.8295, 19651.0485, 3696, 4.9011, 12139.5535, 3566, 1.6747, 12036.4607, 3454, 1.8427, 2942.4634, 3319, 0.2437, 7084.8968, 3192, 0.1837, 5088.6288, 3185, 1.7778, 398.1490, 2846, 1.2134, 6286.5990, 2779, 1.8993, 6279.5527, 2628, 4.5890, 10447.3878, 2460, 3.7866, 8429.2413, 2393, 4.9960, 5856.4777, 2359, 0.2687, 796.2980, 2329, 2.8078, 14143.4952, 2210, 1.9500, 3154.6871, 2035, 4.6527, 2146.1654, 1951, 5.3823, 2352.8662, 1883, 0.6731, 149854.4001, 1833, 2.2535, 23581.2582, 1796, 0.1987, 6812.7668, 1731, 6.1520, 16730.4637, 1717, 4.4332, 10213.2855, 1619, 5.2316, 17789.8456, 1381, 5.1896, 8031.0923, 1364, 3.6852, 4705.7323, 1314, 0.6529, 13367.9726, 1041, 4.3329, 11769.8537, 1017, 1.5939, 4690.4798, 998, 4.201, 6309.374, 966, 3.676, 27511.468, 874, 6.064, 1748.016, 779, 3.674, 12168.003, 771, 0.312, 7632.943, 756, 2.626, 6256.778, 746, 5.648, 11926.254, 693, 2.924, 6681.225, 680, 1.423, 23013.540, 674, 0.563, 3340.612, 663, 5.661, 11371.705, 659, 3.136, 801.821, 648, 2.650, 19804.827, 615, 3.029, 233141.314, 612, 5.134, 1194.447, 563, 4.341, 90955.552, 552, 2.091, 17298.182, 534, 5.100, 31441.678, 531, 2.407, 11499.656, 523, 4.624, 6438.496, 513, 5.324, 11513.883, 477, 0.256, 11856.219, 461, 1.722, 7234.794, 458, 3.766, 6386.169, 458, 4.466, 5746.271, 423, 1.055, 5760.498, 422, 1.557, 7238.676, 415, 2.599, 7058.598, 401, 3.030, 1059.382, 397, 1.201, 1349.867, 379, 4.907, 4164.312, 360, 5.707, 5643.179, 352, 3.626, 244287.600, 348, 0.761, 10973.556, 342, 3.001, 4292.331, 336, 4.546, 4732.031, 334, 3.138, 6836.645, 324, 4.164, 9917.697, 316, 1.691, 11015.106, 307, 0.238, 35371.887, 298, 1.306, 6283.143, 298, 1.750, 6283.009, 293, 5.738, 16200.773, 286, 5.928, 14712.317, 281, 3.515, 21228.392, 280, 5.663, 8635.942, 277, 0.513, 26.298, 268, 4.207, 18073.705, 266, 0.900, 12352.853, 260, 2.962, 25132.303, 255, 2.477, 6208.294, 242, 2.800, 709.933, 231, 1.054, 22483.849, 229, 1.070, 14314.168, 216, 1.314, 154717.610, 215, 6.038, 10873.986, 200, 0.561, 7079.374, 198, 2.614, 951.718, 197, 4.369, 167283.762, 186, 2.861, 5216.580, 183, 1.660, 39302.097, 183, 5.912, 3738.761, 175, 2.145, 6290.189, 173, 2.168, 10575.407, 171, 3.702, 1592.596, 171, 1.343, 3128.389, 164, 5.550, 6496.375, 164, 5.856, 10984.192, 161, 1.998, 10969.965, 161, 1.909, 6133.513, 157, 4.955, 25158.602, 154, 6.216, 23543.231, 153, 5.357, 13521.751, 150, 5.770, 18209.330, 150, 5.439, 155.420, 139, 1.778, 9225.539, 139, 1.626, 5120.601, 128, 2.460, 13916.019, 123, 0.717, 143571.324, 122, 2.654, 88860.057, 121, 4.414, 3894.182, 121, 1.192, 3.523, 120, 4.030, 553.569, 119, 1.513, 17654.781, 117, 3.117, 14945.316, 113, 2.698, 6040.347, 110, 3.085, 43232.307, 109, 0.998, 955.600, 108, 2.939, 17256.632, 107, 5.285, 65147.620, 103, 0.139, 11712.955, 103, 5.850, 213.299, 102, 3.046, 6037.244, 101, 2.842, 8662.240, 100, 3.626, 6262.300, 98, 2.36, 6206.81, 98, 5.11, 6172.87, 98, 2.00, 15110.47, 97, 2.67, 5650.29, 97, 2.75, 6244.94, 96, 4.02, 6282.10, 96, 5.31, 6284.06, 92, 0.10, 29088.81, 85, 3.26, 20426.57, 84, 2.60, 28766.92, 81, 3.58, 10177.26, 80, 5.81, 5230.81, 78, 2.53, 16496.36, 77, 4.06, 6127.66, 73, 0.04, 5481.25, 72, 5.96, 12559.04, 72, 5.92, 4136.91, 71, 5.49, 22003.91, 70, 3.41, 7.11, 69, 0.62, 11403.68, 69, 3.90, 1589.07, 69, 1.96, 12416.59, 69, 4.51, 426.60, 67, 1.61, 11087.29, 66, 4.50, 47162.52, 66, 5.08, 283.86, 66, 4.32, 16858.48, 65, 1.04, 6062.66, 64, 1.59, 18319.54, 63, 5.70, 45892.73, 63, 4.60, 66567.49, 63, 3.82, 13517.87, 62, 2.62, 11190.38, 61, 1.54, 33019.02, 60, 5.58, 10344.30, 60, 5.38, 316428.23, 60, 5.78, 632.78, 59, 6.12, 9623.69, 57, 0.16, 17267.27, 57, 3.86, 6076.89, 57, 1.98, 7668.64, 56, 4.78, 20199.09, 55, 4.56, 18875.53, 55, 3.51, 17253.04, 54, 3.07, 226858.24, 54, 4.83, 18422.63, 53, 5.02, 12132.44, 52, 3.63, 5333.90, 52, 0.97, 155427.54, 51, 3.36, 20597.24, 50, 0.99, 11609.86, 50, 2.21, 1990.75, 48, 1.62, 12146.67, 48, 1.17, 12569.67, 47, 4.62, 5436.99, 47, 1.81, 12562.63, 47, 0.59, 21954.16, 47, 0.76, 7342.46, 46, 0.27, 4590.91, 46, 3.77, 156137.48, 45, 5.66, 10454.50, 44, 5.84, 3496.03, 43, 0.24, 17996.03, 41, 5.93, 51092.73, 41, 4.21, 12592.45, 40, 5.14, 1551.05, 40, 5.28, 15671.08, 39, 3.69, 18052.93, 39, 4.94, 24356.78, 38, 2.72, 11933.37, 38, 5.23, 7477.52, 38, 4.99, 9779.11, 37, 3.70, 9388.01, 37, 4.44, 4535.06, 36, 2.16, 28237.23, 36, 2.54, 242.73, 36, 0.22, 5429.88, 35, 6.15, 19800.95, 35, 2.92, 36949.23, 34, 5.63, 2379.16, 34, 5.73, 16460.33, 34, 5.11, 5849.36, 33, 6.19, 6268.85, 10301861, 1.10748970, 6283.07584999, 172124, 1.064423, 12566.151700, 70222, 3.14159, 0.00000, 3235, 1.0217, 18849.2275, 3080, 2.8435, 5507.5532, 2497, 1.3191, 5223.6939, 1849, 1.4243, 1577.3435, 1008, 5.9138, 10977.0788, 865, 1.420, 6275.962, 863, 0.271, 5486.778, 507, 1.686, 5088.629, 499, 6.014, 6286.599, 467, 5.987, 529.691, 440, 0.518, 4694.003, 410, 1.084, 9437.763, 387, 4.750, 2544.314, 375, 5.071, 796.298, 352, 0.023, 83996.847, 344, 0.949, 71430.696, 341, 5.412, 775.523, 322, 6.156, 2146.165, 286, 5.484, 10447.388, 284, 3.420, 2352.866, 255, 6.132, 6438.496, 252, 0.243, 398.149, 243, 3.092, 4690.480, 225, 3.689, 7084.897, 220, 4.952, 6812.767, 219, 0.420, 8031.092, 209, 1.282, 1748.016, 193, 5.314, 8429.241, 185, 1.820, 7632.943, 175, 3.229, 6279.553, 173, 1.537, 4705.732, 158, 4.097, 11499.656, 158, 5.539, 3154.687, 150, 3.633, 11513.883, 148, 3.222, 7234.794, 147, 3.653, 1194.447, 144, 0.817, 14143.495, 135, 6.151, 5746.271, 134, 4.644, 6836.645, 128, 2.693, 1349.867, 123, 5.650, 5760.498, 118, 2.577, 13367.973, 113, 3.357, 17789.846, 110, 4.497, 4292.331, 108, 5.828, 12036.461, 102, 5.621, 6256.778, 99, 1.14, 1059.38, 98, 0.66, 5856.48, 93, 2.32, 10213.29, 92, 0.77, 16730.46, 88, 1.50, 11926.25, 86, 1.42, 5753.38, 85, 0.66, 155.42, 81, 1.64, 6681.22, 80, 4.11, 951.72, 66, 4.55, 5216.58, 65, 0.98, 25132.30, 64, 4.19, 6040.35, 64, 0.52, 6290.19, 63, 1.51, 5643.18, 59, 6.18, 4164.31, 57, 2.30, 10973.56, 55, 2.32, 11506.77, 55, 2.20, 1592.60, 55, 5.27, 3340.61, 54, 5.54, 553.57, 53, 5.04, 9917.70, 53, 0.92, 11371.70, 52, 3.98, 17298.18, 52, 3.60, 10969.97, 49, 5.91, 3894.18, 49, 2.51, 6127.66, 48, 1.67, 12168.00, 46, 0.31, 801.82, 42, 3.70, 10575.41, 42, 4.05, 10984.19, 40, 2.17, 7860.42, 40, 4.17, 26.30, 38, 5.82, 7058.60, 37, 3.39, 6496.37, 36, 1.08, 6309.37, 36, 5.34, 7079.37, 34, 3.62, 11790.63, 32, 0.32, 16200.77, 31, 4.24, 3738.76, 29, 4.55, 11856.22, 29, 1.26, 8635.94, 27, 3.45, 5884.93, 26, 5.08, 10177.26, 26, 5.38, 21228.39, 24, 2.26, 11712.96, 24, 1.05, 242.73, 24, 5.59, 6069.78, 23, 3.63, 6284.06, 23, 1.64, 4732.03, 22, 3.46, 213.30, 21, 1.05, 3496.03, 21, 3.92, 13916.02, 21, 4.01, 5230.81, 20, 5.16, 12352.85, 20, 0.69, 1990.75, 19, 2.73, 6062.66, 19, 5.01, 11015.11, 18, 6.04, 6283.01, 18, 2.85, 7238.68, 18, 5.60, 6283.14, 18, 5.16, 17253.04, 18, 2.54, 14314.17, 17, 1.58, 7.11, 17, 0.98, 3930.21, 17, 4.75, 17267.27, 16, 2.19, 6076.89, 16, 2.19, 18073.70, 16, 6.12, 3.52, 16, 4.61, 9623.69, 16, 3.40, 16496.36, 15, 0.19, 9779.11, 15, 5.30, 13517.87, 15, 4.26, 3128.39, 15, 0.81, 709.93, 14, 0.50, 25158.60, 14, 4.38, 4136.91, 13, 0.98, 65147.62, 13, 3.31, 154717.61, 13, 2.11, 1589.07, 13, 1.92, 22483.85, 12, 6.03, 9225.54, 12, 1.53, 12559.04, 12, 5.82, 6282.10, 12, 5.61, 5642.20, 12, 2.38, 167283.76, 12, 0.39, 12132.44, 12, 3.98, 4686.89, 12, 5.81, 12569.67, 12, 0.56, 5849.36, 11, 0.45, 6172.87, 11, 5.80, 16858.48, 11, 6.22, 12146.67, 11, 2.27, 5429.88, 435939, 5.784551, 6283.075850, 12363, 5.57935, 12566.15170, 1234, 3.1416, 0.0000, 879, 3.628, 77713.771, 569, 1.870, 5573.143, 330, 5.470, 18849.228, 147, 4.480, 5507.553, 110, 2.842, 161000.686, 101, 2.815, 5223.694, 85, 3.11, 1577.34, 65, 5.47, 775.52, 61, 1.38, 6438.50, 50, 4.42, 6286.60, 47, 3.66, 7084.90, 46, 5.39, 149854.40, 42, 0.90, 10977.08, 40, 3.20, 5088.63, 35, 1.81, 5486.78, 32, 5.35, 3154.69, 30, 3.52, 796.30, 29, 4.62, 4690.48, 28, 1.84, 4694.00, 27, 3.14, 71430.70, 27, 6.17, 6836.65, 26, 1.42, 2146.17, 25, 2.81, 1748.02, 24, 2.18, 155.42, 23, 4.76, 7234.79, 21, 3.38, 7632.94, 21, 0.22, 4705.73, 20, 4.22, 1349.87, 20, 2.01, 1194.45, 20, 4.58, 529.69, 19, 1.59, 6309.37, 18, 5.70, 6040.35, 18, 6.03, 4292.33, 17, 2.90, 9437.76, 17, 2.00, 8031.09, 17, 5.78, 83996.85, 16, 0.05, 2544.31, 15, 0.95, 6127.66, 14, 0.36, 10447.39, 14, 1.48, 2352.87, 13, 0.77, 553.57, 13, 5.48, 951.72, 13, 5.27, 6279.55, 13, 3.76, 6812.77, 11, 5.41, 6256.78, 10, 0.68, 1592.60, 10, 4.95, 398.15, 10, 1.15, 3894.18, 10, 5.20, 244287.60, 10, 1.94, 11856.22, 9, 5.39, 25132.30, 8, 6.18, 1059.38, 8, 0.69, 8429.24, 8, 5.85, 242.73, 7, 5.26, 14143.50, 7, 0.52, 801.82, 6, 2.24, 8635.94, 6, 4.00, 13367.97, 6, 2.77, 90955.55, 6, 5.17, 7058.60, 5, 1.46, 233141.31, 5, 4.13, 7860.42, 5, 3.91, 26.30, 5, 3.89, 12036.46, 5, 5.58, 6290.19, 5, 5.54, 1990.75, 5, 0.83, 11506.77, 5, 6.22, 6681.22, 4, 5.26, 10575.41, 4, 1.91, 7477.52, 4, 0.43, 10213.29, 4, 1.09, 709.93, 4, 5.09, 11015.11, 4, 4.22, 88860.06, 4, 3.57, 7079.37, 4, 1.98, 6284.06, 4, 3.93, 10973.56, 4, 6.18, 9917.70, 4, 0.36, 10177.26, 4, 2.75, 3738.76, 4, 3.33, 5643.18, 4, 5.36, 25158.60, 14459, 4.27319, 6283.07585, 673, 3.917, 12566.152, 77, 0.00, 0.00, 25, 3.73, 18849.23, 4, 2.80, 6286.60, 386, 2.564, 6283.076, 31, 2.27, 12566.15, 5, 3.44, 5573.14, 2, 2.05, 18849.23, 1, 2.06, 77713.77, 1, 4.41, 161000.69, 1, 3.82, 149854.40, 1, 4.08, 6127.66, 1, 5.26, 6438.50, 9, 1.22, 6283.08, 1, 0.66, 12566.15],
          XL1:[
            [22639.586, 0.78475822, 8328.691424623, 1.5229241, 25.0719, -0.123598, 4586.438, 0.1873974, 7214.06286536, -2.184756, -18.860, 0.08280, 2369.914, 2.5429520, 15542.75428998, -0.661832, 6.212, -0.04080, 769.026, 3.140313, 16657.38284925, 3.04585, 50.144, -0.2472, 666.418, 1.527671, 628.30195521, -0.02664, 0.062, -0.0054, 411.596, 4.826607, 16866.9323150, -1.28012, -1.07, -0.0059, 211.656, 4.115028, -1114.6285593, -3.70768, -43.93, 0.2064, 205.436, 0.230523, 6585.7609101, -2.15812, -18.92, 0.0882, 191.956, 4.898507, 23871.4457146, 0.86109, 31.28, -0.164, 164.729, 2.586078, 14914.4523348, -0.6352, 6.15, -0.035, 147.321, 5.45530, -7700.3894694, -1.5496, -25.01, 0.118, 124.988, 0.48608, 7771.3771450, -0.3309, 3.11, -0.020, 109.380, 3.88323, 8956.9933798, 1.4963, 25.13, -0.129, 55.177, 5.57033, -1324.1780250, 0.6183, 7.3, -0.035, 45.100, 0.89898, 25195.623740, 0.2428, 24.0, -0.129, 39.533, 3.81213, -8538.240890, 2.8030, 26.1, -0.118, 38.430, 4.30115, 22756.817155, -2.8466, -12.6, 0.042, 36.124, 5.49587, 24986.074274, 4.5688, 75.2, -0.371, 30.773, 1.94559, 14428.125731, -4.3695, -37.7, 0.166, 28.397, 3.28586, 7842.364821, -2.2114, -18.8, 0.077, 24.358, 5.64142, 16171.056245, -0.6885, 6.3, -0.046, 18.585, 4.41371, -557.314280, -1.8538, -22.0, 0.10, 17.954, 3.58454, 8399.679100, -0.3576, 3.2, -0.03, 14.530, 4.9416, 23243.143759, 0.888, 31.2, -0.16, 14.380, 0.9709, 32200.137139, 2.384, 56.4, -0.29, 14.251, 5.7641, -2.301200, 1.523, 25.1, -0.12, 13.899, 0.3735, 31085.508580, -1.324, 12.4, -0.08, 13.194, 1.7595, -9443.319984, -5.231, -69.0, 0.33, 9.679, 3.0997, -16029.080894, -3.072, -50.1, 0.24, 9.366, 0.3016, 24080.995180, -3.465, -19.9, 0.08, 8.606, 4.1582, -1742.930514, -3.681, -44.0, 0.21, 8.453, 2.8416, 16100.068570, 1.192, 28.2, -0.14, 8.050, 2.6292, 14286.150380, -0.609, 6.1, -0.03, 7.630, 6.2388, 17285.684804, 3.019, 50.2, -0.25, 7.447, 1.4845, 1256.603910, -0.053, 0.1, -0.01, 7.371, 0.2736, 5957.458955, -2.131, -19.0, 0.09, 7.063, 5.6715, 33.757047, -0.308, -3.6, 0.02, 6.383, 4.7843, 7004.513400, 2.141, 32.4, -0.16, 5.742, 2.6572, 32409.686605, -1.942, 5, -0.05, 4.374, 4.3443, 22128.51520, -2.820, -13, 0.05, 3.998, 3.2545, 33524.31516, 1.766, 49, -0.25, 3.210, 2.2443, 14985.44001, -2.516, -16, 0.06, 2.915, 1.7138, 24499.74767, 0.834, 31, -0.17, 2.732, 1.9887, 13799.82378, -4.343, -38, 0.17, 2.568, 5.4122, -7072.08751, -1.576, -25, 0.11, 2.521, 3.2427, 8470.66678, -2.238, -19, 0.07, 2.489, 4.0719, -486.32660, -3.734, -44, 0.20, 2.146, 5.6135, -1952.47998, 0.645, 7, -0.03, 1.978, 2.7291, 39414.20000, 0.199, 37, -0.21, 1.934, 1.5682, 33314.76570, 6.092, 100, -0.5, 1.871, 0.4166, 30457.20662, -1.297, 12, -0.1, 1.753, 2.0582, -8886.00570, -3.38, -47, 0.2, 1.437, 2.386, -695.87607, 0.59, 7, 0, 1.373, 3.026, -209.54947, 4.33, 51, -0.2, 1.262, 5.940, 16728.37052, 1.17, 28, -0.1, 1.224, 6.172, 6656.74859, -4.04, -41, 0.2, 1.187, 5.873, 6099.43431, -5.89, -63, 0.3, 1.177, 1.014, 31571.83518, 2.41, 56, -0.3, 1.162, 3.840, 9585.29534, 1.47, 25, -0.1, 1.143, 5.639, 8364.73984, -2.18, -19, 0.1, 1.078, 1.229, 70.98768, -1.88, -22, 0.1, 1.059, 3.326, 40528.82856, 3.91, 81, -0.4, 0.990, 5.013, 40738.37803, -0.42, 30, -0.2, 0.948, 5.687, -17772.01141, -6.75, -94, 0.5, 0.876, 0.298, -0.35232, 0, 0, 0, 0.822, 2.994, 393.02097, 0, 0, 0, 0.788, 1.836, 8326.39022, 3.05, 50, -0.2, 0.752, 4.985, 22614.84180, 0.91, 31, -0.2, 0.740, 2.875, 8330.99262, 0, 0, 0, 0.669, 0.744, -24357.77232, -4.60, -75, 0.4, 0.644, 1.314, 8393.12577, -2.18, -19, 0.1, 0.639, 5.888, 575.33849, 0, 0, 0, 0.635, 1.116, 23385.11911, -2.87, -13, 0, 0.584, 5.197, 24428.75999, 2.71, 53, -0.3, 0.583, 3.513, -9095.55517, 0.95, 4, 0, 0.572, 6.059, 29970.88002, -5.03, -32, 0.1, 0.565, 2.960, 0.32863, 1.52, 25, -0.1, 0.561, 4.001, -17981.56087, -2.43, -43, 0.2, 0.557, 0.529, 7143.07519, -0.30, 3, 0, 0.546, 2.311, 25614.37623, 4.54, 75, -0.4, 0.536, 4.229, 15752.30376, -4.99, -45, 0.2, 0.493, 3.316, -8294.9344, -1.83, -29, 0.1, 0.491, 1.744, 8362.4485, 1.21, 21, -0.1, 0.478, 1.803, -10071.6219, -5.20, -69, 0.3, 0.454, 0.857, 15333.2048, 3.66, 57, -0.3, 0.445, 2.071, 8311.7707, -2.18, -19, 0.1, 0.426, 0.345, 23452.6932, -3.44, -20, 0.1, 0.420, 4.941, 33733.8646, -2.56, -2, 0, 0.413, 1.642, 17495.2343, -1.31, -1, 0, 0.404, 1.458, 23314.1314, -0.99, 9, -0.1, 0.395, 2.132, 38299.5714, -3.51, -6, 0, 0.382, 2.700, 31781.3846, -1.92, 5, 0, 0.375, 4.827, 6376.2114, 2.17, 32, -0.2, 0.361, 3.867, 16833.1753, -0.97, 3, 0, 0.358, 5.044, 15056.4277, -4.40, -38, 0.2, 0.350, 5.157, -8257.7037, -3.40, -47, 0.2, 0.344, 4.233, 157.7344, 0, 0, 0, 0.340, 2.672, 13657.8484, -0.58, 6, 0, 0.329, 5.610, 41853.0066, 3.29, 74, -0.4, 0.325, 5.895, -39.8149, 0, 0, 0, 0.309, 4.387, 21500.2132, -2.79, -13, 0.1, 0.302, 1.278, 786.0419, 0, 0, 0, 0.302, 5.341, -24567.3218, -0.27, -24, 0.1, 0.301, 1.045, 5889.8848, -1.57, -12, 0, 0.294, 4.201, -2371.2325, -3.65, -44, 0.2, 0.293, 3.704, 21642.1886, -6.55, -57, 0.2, 0.290, 4.069, 32828.4391, 2.36, 56, -0.3, 0.289, 3.472, 31713.8105, -1.35, 12, -0.1, 0.285, 5.407, -33.7814, 0.31, 4, 0, 0.283, 5.998, -16.9207, -3.71, -44, 0.2, 0.283, 2.772, 38785.8980, 0.23, 37, -0.2, 0.274, 5.343, 15613.7420, -2.54, -16, 0.1, 0.263, 3.997, 25823.9257, 0.22, 24, -0.1, 0.254, 0.600, 24638.3095, -1.61, 2, 0, 0.253, 1.344, 6447.1991, 0.29, 10, -0.1, 0.250, 0.887, 141.9754, -3.76, -44, 0.2, 0.247, 0.317, 5329.1570, -2.10, -19, 0.1, 0.245, 0.141, 36.0484, -3.71, -44, 0.2, 0.231, 2.287, 14357.1381, -2.49, -16, 0.1, 0.227, 5.158, 2.6298, 0, 0, 0, 0.219, 5.085, 47742.8914, 1.72, 63, -0.3, 0.211, 2.145, 6638.7244, -2.18, -19, 0.1, 0.201, 4.415, 39623.7495, -4.13, -14, 0, 0.194, 2.091, 588.4927, 0, 0, 0, 0.193, 3.057, -15400.7789, -3.10, -50, 0, 0.186, 5.598, 16799.3582, -0.72, 6, 0, 0.185, 3.886, 1150.6770, 0, 0, 0, 0.183, 1.619, 7178.0144, 1.52, 25, 0, 0.181, 2.635, 8328.3391, 1.52, 25, 0, 0.181, 2.077, 8329.0437, 1.52, 25, 0, 0.179, 3.215, -9652.8694, -0.90, -18, 0, 0.176, 1.716, -8815.0180, -5.26, -69, 0, 0.175, 5.673, 550.7553, 0, 0, 0, 0.170, 2.060, 31295.0580, -5.6, -39, 0, 0.167, 1.239, 7211.7617, -0.7, 6, 0, 0.165, 4.499, 14967.4158, -0.7, 6, 0, 0.164, 3.595, 15540.4531, 0.9, 31, 0, 0.164, 4.237, 522.3694, 0, 0, 0, 0.163, 4.633, 15545.0555, -2.2, -19, 0, 0.161, 0.478, 6428.0209, -2.2, -19, 0, 0.158, 2.03, 13171.5218, -4.3, -38, 0, 0.157, 2.28, 7216.3641, -3.7, -44, 0, 0.154, 5.65, 7935.6705, 1.5, 25, 0, 0.152, 0.46, 29828.9047, -1.3, 12, 0, 0.151, 1.19, -0.7113, 0, 0, 0, 0.150, 1.42, 23942.4334, -1.0, 9, 0, 0.144, 2.75, 7753.3529, 1.5, 25, 0, 0.137, 2.08, 7213.7105, -2.2, -19, 0, 0.137, 1.44, 7214.4152, -2.2, -19, 0, 0.136, 4.46, -1185.6162, -1.8, -22, 0, 0.136, 3.03, 8000.1048, -2.2, -19, 0, 0.134, 2.83, 14756.7124, -0.7, 6, 0, 0.131, 5.05, 6821.0419, -2.2, -19, 0, 0.128, 5.99, -17214.6971, -4.9, -72, 0, 0.127, 5.35, 8721.7124, 1.5, 25, 0, 0.126, 4.49, 46628.2629, -2.0, 19, 0, 0.125, 5.94, 7149.6285, 1.5, 25, 0, 0.124, 1.09, 49067.0695, 1.1, 55, 0, 0.121, 2.88, 15471.7666, 1.2, 28, 0, 0.111, 3.92, 41643.4571, 7.6, 125, -1, 0.110, 1.96, 8904.0299, 1.5, 25, 0, 0.106, 3.30, -18.0489, -2.2, -19, 0, 0.105, 2.30, -4.9310, 1.5, 25, 0, 0.104, 2.22, -6.5590, -1.9, -22, 0, 0.101, 1.44, 1884.9059, -0.1, 0, 0, 0.100, 5.92, 5471.1324, -5.9, -63, 0, 0.099, 1.12, 15149.7333, -0.7, 6, 0, 0.096, 4.73, 15508.9972, -0.4, 10, 0, 0.095, 5.18, 7230.9835, 1.5, 25, 0, 0.093, 3.37, 39900.5266, 3.9, 81, 0, 0.092, 2.01, 25057.0619, 2.7, 53, 0, 0.092, 1.21, -79.6298, 0, 0, 0, 0.092, 1.65, -26310.2523, -4.0, -68, 0, 0.091, 1.01, 42062.5561, -1.0, 23, 0, 0.090, 6.10, 29342.5781, -5.0, -32, 0, 0.090, 4.43, 15542.4020, -0.7, 6, 0, 0.090, 3.80, 15543.1066, -0.7, 6, 0, 0.089, 4.15, 6063.3859, -2.2, -19, 0, 0.086, 4.03, 52.9691, 0, 0, 0, 0.085, 0.49, 47952.4409, -2.6, 11, 0, 0.085, 1.60, 7632.8154, 2.1, 32, 0, 0.084, 0.22, 14392.0773, -0.7, 6, 0, 0.083, 6.22, 6028.4466, -4.0, -41, 0, 0.083, 0.63, -7909.9389, 2.8, 26, 0, 0.083, 5.20, -77.5523, 0, 0, 0, 0.082, 2.74, 8786.1467, -2.2, -19, 0, 0.080, 2.43, 9166.5428, -2.8, -26, 0, 0.080, 3.70, -25405.1732, 4.1, 27, 0, 0.078, 5.68, 48857.5200, 5.4, 106, -1, 0.077, 1.85, 8315.5735, -2.2, -19, 0, 0.075, 5.46, -18191.1103, 1.9, 8, 0, 0.075, 1.41, -16238.6304, 1.3, 1, 0, 0.074, 5.06, 40110.0761, -0.4, 30, 0, 0.072, 2.10, 64.4343, -3.7, -44, 0, 0.071, 2.17, 37671.2695, -3.5, -6, 0, 0.069, 1.71, 16693.4313, -0.7, 6, 0, 0.069, 3.33, -26100.7028, -8.3, -119, 1, 0.068, 1.09, 8329.4028, 1.5, 25, 0, 0.068, 3.62, 8327.9801, 1.5, 25, 0, 0.068, 2.41, 16833.1509, -1.0, 3, 0, 0.067, 3.40, 24709.2971, -3.5, -20, 0, 0.067, 1.65, 8346.7156, -0.3, 3, 0, 0.066, 2.61, 22547.2677, 1.5, 39, 0, 0.066, 3.50, 15576.5113, -1.0, 3, 0, 0.065, 5.76, 33037.9886, -2.0, 5, 0, 0.065, 4.58, 8322.1325, -0.3, 3, 0, 0.065, 6.20, 17913.9868, 3.0, 50, 0, 0.065, 1.50, 22685.8295, -1.0, 9, 0, 0.065, 2.37, 7180.3058, -1.9, -15, 0, 0.064, 1.06, 30943.5332, 2.4, 56, 0, 0.064, 1.89, 8288.8765, 1.5, 25, 0, 0.064, 4.70, 6.0335, 0.3, 4, 0, 0.063, 2.83, 8368.5063, 1.5, 25, 0, 0.063, 5.66, -2580.7819, 0.7, 7, 0, 0.062, 3.78, 7056.3285, -2.2, -19, 0, 0.061, 1.49, 8294.9100, 1.8, 29, 0, 0.061, 0.12, -10281.1714, -0.9, -18, 0, 0.061, 3.06, -8362.4729, -1.2, -21, 0, 0.061, 4.43, 8170.9571, 1.5, 25, 0, 0.059, 5.78, -13.1179, -3.7, -44, 0, 0.059, 5.97, 6625.5702, -2.2, -19, 0, 0.058, 5.01, -0.5080, -0.3, 0, 0, 0.058, 2.73, 7161.0938, -2.2, -19, 0, 0.057, 0.19, 7214.0629, -2.2, -19, 0, 0.057, 4.00, 22199.5029, -4.7, -35, 0, 0.057, 5.38, 8119.1420, 5.8, 76, 0, 0.056, 1.07, 7542.6495, 1.5, 25, 0, 0.056, 0.28, 8486.4258, 1.5, 25, 0, 0.054, 4.19, 16655.0816, 4.6, 75, 0, 0.053, 0.72, 7267.0320, -2.2, -19, 0, 0.053, 3.12, 12.6192, 0.6, 7, 0, 0.052, 2.99, -32896.013, -1.8, -49, 0, 0.052, 3.46, 1097.708, 0, 0, 0, 0.051, 5.37, -6443.786, -1.6, -25, 0, 0.051, 1.35, 7789.401, -2.2, -19, 0, 0.051, 5.83, 40042.502, 0.2, 38, 0, 0.051, 3.63, 9114.733, 1.5, 25, 0, 0.050, 1.51, 8504.484, -2.5, -22, 0, 0.050, 5.23, 16659.684, 1.5, 25, 0, 0.050, 1.15, 7247.820, -2.5, -23, 0, 0.047, 0.25, -1290.421, 0.3, 0, 0, 0.047, 4.67, -32686.464, -6.1, -100, 0, 0.047, 3.49, 548.678, 0, 0, 0, 0.047, 2.37, 6663.308, -2.2, -19, 0, 0.046, 0.98, 1572.084, 0, 0, 0, 0.046, 2.04, 14954.262, -0.7, 6, 0, 0.046, 3.72, 6691.693, -2.2, -19, 0, 0.045, 6.19, -235.287, 0, 0, 0, 0.044, 2.96, 32967.001, -0.1, 27, 0, 0.044, 3.82, -1671.943, -5.6, -66, 0, 0.043, 5.82, 1179.063, 0, 0, 0, 0.043, 0.07, 34152.617, 1.7, 49, 0, 0.043, 3.71, 6514.773, -0.3, 0, 0, 0.043, 5.62, 15.732, -2.5, -23, 0, 0.043, 5.80, 8351.233, -2.2, -19, 0, 0.042, 0.27, 7740.199, 1.5, 25, 0, 0.042, 6.14, 15385.020, -0.7, 6, 0, 0.042, 6.13, 7285.051, -4.1, -41, 0, 0.041, 1.27, 32757.451, 4.2, 78, 0, 0.041, 4.46, 8275.722, 1.5, 25, 0, 0.040, 0.23, 8381.661, 1.5, 25, 0, 0.040, 5.87, -766.864, 2.5, 29, 0, 0.040, 1.66, 254.431, 0, 0, 0, 0.040, 0.40, 9027.981, -0.4, 0, 0, 0.040, 2.96, 7777.936, 1.5, 25, 0, 0.039, 4.67, 33943.068, 6.1, 100, 0, 0.039, 3.52, 8326.062, 1.5, 25, 0, 0.039, 3.75, 21013.887, -6.5, -57, 0, 0.039, 5.60, 606.978, 0, 0, 0, 0.039, 1.19, 8331.321, 1.5, 25, 0, 0.039, 2.84, 7211.433, -2.2, -19, 0, 0.038, 0.67, 7216.693, -2.2, -19, 0, 0.038, 6.22, 25161.867, 0.6, 28, 0, 0.038, 4.40, 7806.322, 1.5, 25, 0, 0.038, 4.16, 9179.168, -2.2, -19, 0, 0.037, 4.73, 14991.999, -0.7, 6, 0, 0.036, 0.35, 67.514, -0.6, -7, 0, 0.036, 3.70, 25266.611, -1.6, 0, 0, 0.036, 5.39, 16328.796, -0.7, 6, 0, 0.035, 1.44, 7174.248, -2.2, -19, 0, 0.035, 5.00, 15684.730, -4.4, -38, 0, 0.035, 0.39, -15.419, -2.2, -19, 0, 0.035, 6.07, 15020.385, -0.7, 6, 0, 0.034, 6.01, 7371.797, -2.2, -19, 0, 0.034, 0.96, -16623.626, -3.4, -54, 0, 0.033, 6.24, 9479.368, 1.5, 25, 0, 0.033, 3.21, 23661.896, 5.2, 82, 0, 0.033, 4.06, 8311.418, -2.2, -19, 0, 0.033, 2.40, 1965.105, 0, 0, 0, 0.033, 5.17, 15489.785, -0.7, 6, 0, 0.033, 5.03, 21986.540, 0.9, 31, 0, 0.033, 4.10, 16691.140, 2.7, 46, 0, 0.033, 5.13, 47114.589, 1.7, 63, 0, 0.033, 4.45, 8917.184, 1.5, 25, 0, 0.033, 4.23, 2.078, 0, 0, 0, 0.032, 2.33, 75.251, 1.5, 25, 0, 0.032, 2.10, 7253.878, -2.2, -19, 0, 0.032, 3.11, -0.224, 1.5, 25, 0, 0.032, 4.43, 16640.462, -0.7, 6, 0, 0.032, 5.68, 8328.363, 0, 0, 0, 0.031, 5.32, 8329.020, 3.0, 50, 0, 0.031, 3.70, 16118.093, -0.7, 6, 0, 0.030, 3.67, 16721.817, -0.7, 6, 0, 0.030, 5.27, -1881.492, -1.2, -15, 0, 0.030, 5.72, 8157.839, -2.2, -19, 0, 0.029, 5.73, -18400.313, -6.7, -94, 0, 0.029, 2.76, 16.000, -2.2, -19, 0, 0.029, 1.75, 8879.447, 1.5, 25, 0, 0.029, 0.32, 8851.061, 1.5, 25, 0, 0.029, 0.90, 14704.903, 3.7, 57, 0, 0.028, 2.90, 15595.723, -0.7, 6, 0, 0.028, 5.88, 16864.631, 0.2, 24, 0, 0.028, 0.63, 16869.234, -2.8, -26, 0, 0.028, 4.04, -18609.863, -2.4, -43, 0, 0.027, 5.83, 6727.736, -5.9, -63, 0, 0.027, 6.12, 418.752, 4.3, 51, 0, 0.027, 0.14, 41157.131, 3.9, 81, 0, 0.026, 3.80, 15.542, 0, 0, 0, 0.026, 1.68, 50181.698, 4.8, 99, -1, 0.026, 0.32, 315.469, 0, 0, 0, 0.025, 5.67, 19.188, 0.3, 0, 0, 0.025, 3.16, 62.133, -2.2, -19, 0, 0.025, 3.76, 15502.939, -0.7, 6, 0, 0.025, 4.53, 45999.961, -2.0, 19, 0, 0.024, 3.21, 837.851, -4.4, -51, 0, 0.024, 2.82, 38157.596, 0.3, 37, 0, 0.024, 5.21, 15540.124, -0.7, 6, 0, 0.024, 0.26, 14218.576, 0, 13, 0, 0.024, 3.01, 15545.384, -0.7, 6, 0, 0.024, 1.16, -17424.247, -0.6, -21, 0, 0.023, 2.34, -67.574, 0.6, 7, 0, 0.023, 2.44, 18.024, -1.9, -22, 0, 0.023, 3.70, 469.400, 0, 0, 0, 0.023, 0.72, 7136.511, -2.2, -19, 0, 0.023, 4.50, 15582.569, -0.7, 6, 0, 0.023, 2.80, -16586.395, -4.9, -72, 0, 0.023, 1.51, 80.182, 0, 0, 0, 0.023, 1.09, 5261.583, -1.5, -12, 0, 0.023, 0.56, 54956.954, -0.5, 44, 0, 0.023, 4.01, 8550.860, -2.2, -19, 0, 0.023, 4.46, 38995.448, -4.1, -14, 0, 0.023, 3.82, 2358.126, 0, 0, 0, 0.022, 3.77, 32271.125, 0.5, 34, 0, 0.022, 0.82, 15935.775, -0.7, 6, 0, 0.022, 1.07, 24013.421, -2.9, -13, 0, 0.022, 0.40, 8940.078, -2.2, -19, 0, 0.022, 2.06, 15700.489, -0.7, 6, 0, 0.022, 4.27, 15124.002, -5.0, -45, 0, 0.021, 1.16, 56071.583, 3.2, 88, 0, 0.021, 5.58, 9572.189, -2.2, -19, 0, 0.020, 1.70, -17.273, -3.7, -44, 0, 0.020, 3.05, 214.617, 0, 0, 0, 0.020, 4.41, 8391.048, -2.2, -19, 0, 0.020, 5.95, 23869.145, 2.4, 56, 0, 0.020, 0.42, 40947.927, -4.7, -21, 0, 0.019, 1.39, 5818.897, 0.3, 10, 0, 0.019, 0.71, 23873.747, -0.7, 6, 0, 0.019, 2.81, 7291.615, -2.2, -19, 0, 0.019, 5.09, 8428.018, -2.2, -19, 0, 0.019, 4.14, 6518.187, -1.6, -12, 0, 0.019, 3.85, 21.330, 0, 0, 0, 0.018, 0.66, 14445.046, -0.7, 6, 0, 0.018, 1.65, 0.966, -4.0, -48, 0, 0.018, 5.64, -17143.709, -6.8, -94, 0, 0.018, 6.01, 7736.432, -2.2, -19, 0, 0.018, 2.74, 31153.083, -1.9, 5, 0, 0.018, 4.58, 6116.355, -2.2, -19, 0, 0.018, 2.28, 46.401, 0.3, 0, 0, 0.018, 3.80, 10213.597, 1.4, 25, 0, 0.018, 2.84, 56281.132, -1.1, 36, 0, 0.018, 3.53, 8249.062, 1.5, 25, 0, 0.017, 4.43, 20871.911, -3, -13, 0, 0.017, 4.44, 627.596, 0, 0, 0, 0.017, 1.85, 628.308, 0, 0, 0, 0.017, 1.19, 8408.321, 2, 25, 0, 0.017, 1.95, 7214.056, -2, -19, 0, 0.017, 1.57, 7214.070, -2, -19, 0, 0.017, 1.65, 13870.811, -6, -60, 0, 0.017, 0.30, 22.542, -4, -44, 0, 0.017, 2.62, -119.445, 0, 0, 0, 0.016, 4.87, 5747.909, 2, 32, 0, 0.016, 4.45, 14339.108, -1, 6, 0, 0.016, 1.83, 41366.680, 0, 30, 0, 0.016, 4.53, 16309.618, -3, -23, 0, 0.016, 2.54, 15542.754, -1, 6, 0, 0.016, 6.05, 1203.646, 0, 0, 0, 0.015, 5.2, 2751.147, 0, 0, 0, 0.015, 1.8, -10699.924, -5, -69, 0, 0.015, 0.4, 22824.391, -3, -20, 0, 0.015, 2.1, 30666.756, -6, -39, 0, 0.015, 2.1, 6010.417, -2, -19, 0, 0.015, 0.7, -23729.470, -5, -75, 0, 0.015, 1.4, 14363.691, -1, 6, 0, 0.015, 5.8, 16900.689, -2, 0, 0, 0.015, 5.2, 23800.458, 3, 53, 0, 0.015, 5.3, 6035.000, -2, -19, 0, 0.015, 1.2, 8251.139, 2, 25, 0, 0.015, 3.6, -8.860, 0, 0, 0, 0.015, 0.8, 882.739, 0, 0, 0, 0.015, 3.0, 1021.329, 0, 0, 0, 0.015, 0.6, 23296.107, 1, 31, 0, 0.014, 5.4, 7227.181, 2, 25, 0, 0.014, 0.1, 7213.352, -2, -19, 0, 0.014, 4.0, 15506.706, 3, 50, 0, 0.014, 3.4, 7214.774, -2, -19, 0, 0.014, 4.6, 6665.385, -2, -19, 0, 0.014, 0.1, -8.636, -2, -22, 0, 0.014, 3.1, 15465.202, -1, 6, 0, 0.014, 4.9, 508.863, 0, 0, 0, 0.014, 3.5, 8406.244, 2, 25, 0, 0.014, 1.3, 13313.497, -8, -82, 0, 0.014, 2.8, 49276.619, -3, 0, 0, 0.014, 0.1, 30528.194, -3, -10, 0, 0.013, 1.7, 25128.050, 1, 31, 0, 0.013, 2.9, 14128.405, -1, 6, 0, 0.013, 3.4, 57395.761, 3, 80, 0, 0.013, 2.7, 13029.546, -1, 6, 0, 0.013, 3.9, 7802.556, -2, -19, 0, 0.013, 1.6, 8258.802, -2, -19, 0, 0.013, 2.2, 8417.709, -2, -19, 0, 0.013, 0.7, 9965.210, -2, -19, 0, 0.013, 3.4, 50391.247, 0, 48, 0, 0.013, 3.0, 7134.433, -2, -19, 0, 0.013, 2.9, 30599.182, -5, -31, 0, 0.013, 3.6, -9723.857, 1, 0, 0, 0.013, 4.8, 7607.084, -2, -19, 0, 0.012, 0.8, 23837.689, 1, 35, 0, 0.012, 3.6, 4.409, -4, -44, 0, 0.012, 5.0, 16657.031, 3, 50, 0, 0.012, 4.4, 16657.735, 3, 50, 0, 0.012, 1.1, 15578.803, -4, -38, 0, 0.012, 6.0, -11.490, 0, 0, 0, 0.012, 1.9, 8164.398, 0, 0, 0, 0.012, 2.4, 31852.372, -4, -17, 0, 0.012, 2.4, 6607.085, -2, -19, 0, 0.012, 4.2, 8359.870, 0, 0, 0, 0.012, 0.5, 5799.713, -2, -19, 0, 0.012, 2.7, 7220.622, 0, 0, 0, 0.012, 4.3, -139.720, 0, 0, 0, 0.012, 2.3, 13728.836, -2, -16, 0, 0.011, 3.6, 14912.146, 1, 31, 0, 0.011, 4.7, 14916.748, -2, -19, 0],
            [1.67680, 4.66926, 628.301955, -0.0266, 0.1, -0.005, 0.51642, 3.3721, 6585.760910, -2.158, -18.9, 0.09, 0.41383, 5.7277, 14914.452335, -0.635, 6.2, -0.04, 0.37115, 3.9695, 7700.389469, 1.550, 25.0, -0.12, 0.27560, 0.7416, 8956.993380, 1.496, 25.1, -0.13, 0.24599, 4.2253, -2.301200, 1.523, 25.1, -0.12, 0.07118, 0.1443, 7842.36482, -2.211, -19, 0.08, 0.06128, 2.4998, 16171.05625, -0.688, 6, 0, 0.04516, 0.443, 8399.67910, -0.36, 3, 0, 0.04048, 5.771, 14286.15038, -0.61, 6, 0, 0.03747, 4.626, 1256.60391, -0.05, 0, 0, 0.03707, 3.415, 5957.45895, -2.13, -19, 0.1, 0.03649, 1.800, 23243.14376, 0.89, 31, -0.2, 0.02438, 0.042, 16029.08089, 3.07, 50, -0.2, 0.02165, 1.017, -1742.93051, -3.68, -44, 0.2, 0.01923, 3.097, 17285.68480, 3.02, 50, -0.3, 0.01692, 1.280, 0.3286, 1.52, 25, -0.1, 0.01361, 0.298, 8326.3902, 3.05, 50, -0.2, 0.01293, 4.013, 7072.0875, 1.58, 25, -0.1, 0.01276, 4.413, 8330.9926, 0, 0, 0, 0.01270, 0.101, 8470.6668, -2.24, -19, 0.1, 0.01097, 1.203, 22128.5152, -2.82, -13, 0, 0.01088, 2.545, 15542.7543, -0.66, 6, 0, 0.00835, 0.190, 7214.0629, -2.18, -19, 0.1, 0.00734, 4.855, 24499.7477, 0.83, 31, -0.2, 0.00686, 5.130, 13799.8238, -4.34, -38, 0.2, 0.00631, 0.930, -486.3266, -3.73, -44, 0, 0.00585, 0.699, 9585.2953, 1.5, 25, 0, 0.00566, 4.073, 8328.3391, 1.5, 25, 0, 0.00566, 0.638, 8329.0437, 1.5, 25, 0, 0.00539, 2.472, -1952.4800, 0.6, 7, 0, 0.00509, 2.88, -0.7113, 0, 0, 0, 0.00469, 3.56, 30457.2066, -1.3, 12, 0, 0.00387, 0.78, -0.3523, 0, 0, 0, 0.00378, 1.84, 22614.8418, 0.9, 31, 0, 0.00362, 5.53, -695.8761, 0.6, 7, 0, 0.00317, 2.80, 16728.3705, 1.2, 28, 0, 0.00303, 6.07, 157.7344, 0, 0, 0, 0.00300, 2.53, 33.7570, -0.3, -4, 0, 0.00295, 4.16, 31571.8352, 2.4, 56, 0, 0.00289, 5.98, 7211.7617, -0.7, 6, 0, 0.00285, 2.06, 15540.4531, 0.9, 31, 0, 0.00283, 2.65, 2.6298, 0, 0, 0, 0.00282, 6.17, 15545.0555, -2.2, -19, 0, 0.00278, 1.23, -39.8149, 0, 0, 0, 0.00272, 3.82, 7216.3641, -3.7, -44, 0, 0.00270, 4.37, 70.9877, -1.9, -22, 0, 0.00256, 5.81, 13657.8484, -0.6, 6, 0, 0.00244, 5.64, -0.2237, 1.5, 25, 0, 0.00240, 2.96, 8311.7707, -2.2, -19, 0, 0.00239, 0.87, -33.7814, 0.3, 4, 0, 0.00216, 2.31, 15.9995, -2.2, -19, 0, 0.00186, 3.46, 5329.1570, -2.1, -19, 0, 0.00169, 2.40, 24357.772, 4.6, 75, 0, 0.00161, 5.80, 8329.403, 1.5, 25, 0, 0.00161, 5.20, 8327.980, 1.5, 25, 0, 0.00160, 4.26, 23385.119, -2.9, -13, 0, 0.00156, 1.26, 550.755, 0, 0, 0, 0.00155, 1.25, 21500.213, -2.8, -13, 0, 0.00152, 0.60, -16.921, -3.7, -44, 0, 0.00150, 2.71, -79.630, 0, 0, 0, 0.00150, 5.29, 15.542, 0, 0, 0, 0.00148, 1.06, -2371.232, -3.7, -44, 0, 0.00141, 0.77, 8328.691, 1.5, 25, 0, 0.00141, 3.67, 7143.075, -0.3, 0, 0, 0.00138, 5.45, 25614.376, 4.5, 75, 0, 0.00129, 4.90, 23871.446, 0.9, 31, 0, 0.00126, 4.03, 141.975, -3.8, -44, 0, 0.00124, 6.01, 522.369, 0, 0, 0, 0.00120, 4.94, -10071.622, -5.2, -69, 0, 0.00118, 5.07, -15.419, -2.2, -19, 0, 0.00107, 3.49, 23452.693, -3.4, -20, 0, 0.00104, 4.78, 17495.234, -1.3, 0, 0, 0.00103, 1.44, -18.049, -2.2, -19, 0, 0.00102, 5.63, 15542.402, -0.7, 6, 0, 0.00102, 2.59, 15543.107, -0.7, 6, 0, 0.00100, 4.11, -6.559, -1.9, -22, 0, 0.00097, 0.08, 15400.779, 3.1, 50, 0, 0.00096, 5.84, 31781.385, -1.9, 5, 0, 0.00094, 1.08, 8328.363, 0, 0, 0, 0.00094, 2.46, 16799.358, -0.7, 6, 0, 0.00094, 1.69, 6376.211, 2.2, 32, 0, 0.00093, 3.64, 8329.020, 3.0, 50, 0, 0.00093, 2.65, 16655.082, 4.6, 75, 0, 0.00090, 1.90, 15056.428, -4.4, -38, 0, 0.00089, 1.59, 52.969, 0, 0, 0, 0.00088, 2.02, -8257.704, -3.4, -47, 0, 0.00088, 3.02, 7213.711, -2.2, -19, 0, 0.00087, 0.50, 7214.415, -2.2, -19, 0, 0.00087, 0.49, 16659.684, 1.5, 25, 0, 0.00082, 5.64, -4.931, 1.5, 25, 0, 0.00079, 5.17, 13171.522, -4.3, -38, 0, 0.00076, 3.60, 29828.905, -1.3, 12, 0, 0.00076, 4.08, 24567.322, 0.3, 24, 0, 0.00076, 4.58, 1884.906, -0.1, 0, 0, 0.00073, 0.33, 31713.811, -1.4, 12, 0, 0.00073, 0.93, 32828.439, 2.4, 56, 0, 0.00071, 5.91, 38785.898, 0.2, 37, 0, 0.00069, 2.20, 15613.742, -2.5, -16, 0, 0.00066, 3.87, 15.732, -2.5, -23, 0, 0.00066, 0.86, 25823.926, 0.2, 24, 0, 0.00065, 2.52, 8170.957, 1.5, 25, 0, 0.00063, 0.18, 8322.132, -0.3, 0, 0, 0.00060, 5.84, 8326.062, 1.5, 25, 0, 0.00060, 5.15, 8331.321, 1.5, 25, 0, 0.00060, 2.18, 8486.426, 1.5, 25, 0, 0.00058, 2.30, -1.731, -4, -44, 0, 0.00058, 5.43, 14357.138, -2, -16, 0, 0.00057, 3.09, 8294.910, 2, 29, 0, 0.00057, 4.67, -8362.473, -1, -21, 0, 0.00056, 4.15, 16833.151, -1, 0, 0, 0.00054, 1.93, 7056.329, -2, -19, 0, 0.00054, 5.27, 8315.574, -2, -19, 0, 0.00052, 5.6, 8311.418, -2, -19, 0, 0.00052, 2.7, -77.552, 0, 0, 0, 0.00051, 4.3, 7230.984, 2, 25, 0, 0.00050, 0.4, -0.508, 0, 0, 0, 0.00049, 5.4, 7211.433, -2, -19, 0, 0.00049, 4.4, 7216.693, -2, -19, 0, 0.00049, 4.3, 16864.631, 0, 24, 0, 0.00049, 2.2, 16869.234, -3, -26, 0, 0.00047, 6.1, 627.596, 0, 0, 0, 0.00047, 5.0, 12.619, 1, 7, 0, 0.00045, 4.9, -8815.018, -5, -69, 0, 0.00044, 1.6, 62.133, -2, -19, 0, 0.00042, 2.9, -13.118, -4, -44, 0, 0.00042, 4.1, -119.445, 0, 0, 0, 0.00041, 4.3, 22756.817, -3, -13, 0, 0.00041, 3.6, 8288.877, 2, 25, 0, 0.00040, 0.5, 6663.308, -2, -19, 0, 0.00040, 1.1, 8368.506, 2, 25, 0, 0.00039, 4.1, 6443.786, 2, 25, 0, 0.00039, 3.1, 16657.383, 3, 50, 0, 0.00038, 0.1, 16657.031, 3, 50, 0, 0.00038, 3.0, 16657.735, 3, 50, 0, 0.00038, 4.6, 23942.433, -1, 9, 0, 0.00037, 4.3, 15385.020, -1, 6, 0, 0.00037, 5.0, 548.678, 0, 0, 0, 0.00036, 1.8, 7213.352, -2, -19, 0, 0.00036, 1.7, 7214.774, -2, -19, 0, 0.00035, 1.1, 7777.936, 2, 25, 0, 0.00035, 1.6, -8.860, 0, 0, 0, 0.00035, 4.4, 23869.145, 2, 56, 0, 0.00035, 2.0, 6691.693, -2, -19, 0, 0.00034, 1.3, -1185.616, -2, -22, 0, 0.00034, 2.2, 23873.747, -1, 6, 0, 0.00033, 2.0, -235.287, 0, 0, 0, 0.00033, 3.1, 17913.987, 3, 50, 0, 0.00033, 1.0, 8351.233, -2, -19, 0],
            [0.004870, 4.6693, 628.30196, -0.027, 0, -0.01, 0.002280, 2.6746, -2.30120, 1.523, 25, -0.12, 0.001500, 3.372, 6585.76091, -2.16, -19, 0.1, 0.001200, 5.728, 14914.45233, -0.64, 6, 0, 0.001080, 3.969, 7700.38947, 1.55, 25, -0.1, 0.000800, 0.742, 8956.99338, 1.50, 25, -0.1, 0.000254, 6.002, 0.3286, 1.52, 25, -0.1, 0.000210, 0.144, 7842.3648, -2.21, -19, 0, 0.000180, 2.500, 16171.0562, -0.7, 6, 0, 0.000130, 0.44, 8399.6791, -0.4, 3, 0, 0.000126, 5.03, 8326.3902, 3.0, 50, 0, 0.000120, 5.77, 14286.1504, -0.6, 6, 0, 0.000118, 5.96, 8330.9926, 0, 0, 0, 0.000110, 1.80, 23243.1438, 0.9, 31, 0, 0.000110, 3.42, 5957.4590, -2.1, -19, 0, 0.000110, 4.63, 1256.6039, -0.1, 0, 0, 0.000099, 4.70, -0.7113, 0, 0, 0, 0.000070, 0.04, 16029.0809, 3.1, 50, 0, 0.000070, 5.14, 8328.3391, 1.5, 25, 0, 0.000070, 5.85, 8329.0437, 1.5, 25, 0, 0.000060, 1.02, -1742.9305, -3.7, -44, 0, 0.000060, 3.10, 17285.6848, 3.0, 50, 0, 0.000054, 5.69, -0.352, 0, 0, 0, 0.000043, 0.52, 15.542, 0, 0, 0, 0.000041, 2.03, 2.630, 0, 0, 0, 0.000040, 0.10, 8470.667, -2.2, -19, 0, 0.000040, 4.01, 7072.088, 1.6, 25, 0, 0.000036, 2.93, -8.860, -0.3, 0, 0, 0.000030, 1.20, 22128.515, -2.8, -13, 0, 0.000030, 2.54, 15542.754, -0.7, 6, 0, 0.000027, 4.43, 7211.762, -0.7, 6, 0, 0.000026, 0.51, 15540.453, 0.9, 31, 0, 0.000026, 1.44, 15545.055, -2.2, -19, 0, 0.000025, 5.37, 7216.364, -3.7, -44, 0],
            [0.00001200, 1.041, -2.3012, 1.52, 25, -0.1, 0.00000170, 0.31, -0.711, 0, 0, 0]
          ],
          SHUO_KB:[1457698.231017, 29.53067166, 1546082.512234, 29.53085106, 1640640.735300, 29.53060000, 1642472.151543, 29.53085439, 1683430.509300, 29.53086148, 1752148.041079, 29.53085097, 1807665.420323, 29.53059851, 1883618.114100, 29.53060000, 1907360.704700, 29.53060000, 1936596.224900, 29.53060000, 1939135.675300, 29.53060000, 1947168.00],

          nutationLon2:function(t){
            var a = -1.742 * t, t2 = t * t, dl = 0;
            for (var i = 0, j = this.NUT_B.length; i < j; i += 5) {
              dl += (this.NUT_B[i + 3] + a) * Math.sin(this.NUT_B[i] + this.NUT_B[i + 1] * t + this.NUT_B[i + 2] * t2);
              a = 0;
            }
            return dl / 100 / this.SECOND_PER_RAD;
          },
          eLon:function(t,n){
            t /= 10;
            var v = 0, tn = 1;
            var n1, n2;
            var m;
            var c;
            var pn = 1;
            var n0, m0 = this.XL0[pn + 1] - this.XL0[pn];
            for (var i = 0; i < 6; i++, tn *= t) {
              n1 = Math.floor(this.XL0[pn + i]);
              n2 = Math.floor(this.XL0[pn + 1 + i]);
              n0 = n2 - n1;
              if (n0 == 0) {
                continue;
              }
              if (n < 0) {
                m = n2;
              } else {
                m = Math.floor((3 * n * n0 / m0 + 0.5) + n1);
                if (i != 0) {
                  m += 3;
                }
                if (m > n2) {
                  m = n2;
                }
              }
              c = 0;
              for (var j = n1; j < m; j += 3) {
                c += this.XL0[j] * Math.cos(this.XL0[j + 1] + t * this.XL0[j + 2]);
              }
              v += c * tn;
            }
            v /= this.XL0[0];
            var t2 = t * t;
            v += (-0.0728 - 2.7702 * t - 1.1019 * t2 - 0.0996 * t2 * t) / this.SECOND_PER_RAD;
            return v;
          },
          mLon:function(t,n){
            var ob = this.XL1;
            var obl = ob[0].length;
            var tn = 1;
            var v = 0;
            var j;
            var c;
            var t2 = t * t,
              t3 = t2 * t,
              t4 = t3 * t,
              t5 = t4 * t,
              tx = t - 10;
            v += (3.81034409 + 8399.684730072 * t - 3.319e-05 * t2 + 3.11e-08 * t3 - 2.033e-10 * t4) * this.SECOND_PER_RAD;
            v += 5028.792262 * t + 1.1124406 * t2 + 0.00007699 * t3 - 0.000023479 * t4 - 0.0000000178 * t5;
            if (tx > 0) {
              v += -0.866 + 1.43 * tx + 0.054 * tx * tx;
            }
            t2 /= 1e4;
            t3 /= 1e8;
            t4 /= 1e8;

            n *= 6;
            if (n < 0) {
              n = obl;
            }
            for (var i = 0, x = ob.length; i < x; i++, tn *= t) {
              var f = ob[i];
              var l = f.length;
              var m = Math.floor((n * l / obl + 0.5));
              if (i > 0) {
                m += 6;
              }
              if (m >= l) {
                m = l;
              }
              for (j = 0, c = 0; j < m; j += 6) {
                c += f[j] * Math.cos(f[j + 1] + t * f[j + 2] + t2 * f[j + 3] + t3 * f[j + 4] + t4 * f[j + 5]);
              }
              v += c * tn;
            }
            v /= this.SECOND_PER_RAD;
            return v;
          },
          gxcSunLon:function(t){
            var t2 = t * t;
            var v = -0.043126 + 628.301955 * t - 0.000002732 * t2;
            var e = 0.016708634 - 0.000042037 * t - 0.0000001267 * t2;
            return -20.49552 * (1 + e * Math.cos(v)) / this.SECOND_PER_RAD;
          },
          ev:function(t){
            var f = 628.307585 * t;
            return 628.332 + 21 * Math.sin(1.527 + f) + 0.44 * Math.sin(1.48 + f * 2) + 0.129 * Math.sin(5.82 + f) * t + 0.00055 * Math.sin(4.21 + f) * t * t;
          },
          saLon:function(t,n){
            return this.eLon(t, n) + this.nutationLon2(t) + this.gxcSunLon(t) + Math.PI;
          },
          dtExt:function(y,jsd){
            var dy = (y - 1820) / 100;
            return -20 + jsd * dy * dy;
          },
          dtCalc:function(y){
            var size = this.DT_AT.length;
            var y0 = this.DT_AT[size - 2];
            var t0 = this.DT_AT[size - 1];
            if (y >= y0) {
              var jsd = 31;
              if (y > y0 + 100) {
                return this.dtExt(y, jsd);
              }
              return this.dtExt(y, jsd) - (this.dtExt(y0, jsd) - t0) * (y0 + 100 - y) / 100;
            }
            var i;
            for (i = 0; i < size; i += 5) {
              if (y < this.DT_AT[i + 5]) {
                break;
              }
            }
            var t1 = (y - this.DT_AT[i]) / (this.DT_AT[i + 5] - this.DT_AT[i]) * 10, t2 = t1 * t1, t3 = t2 * t1;
            return this.DT_AT[i + 1] + this.DT_AT[i + 2] * t1 + this.DT_AT[i + 3] * t2 + this.DT_AT[i + 4] * t3;
          },
          dtT:function(t){
            return this.dtCalc(t / 365.2425 + 2000) / this.SECOND_PER_DAY;
          },
          mv:function(t){
            var v = 8399.71 - 914 * Math.sin(0.7848 + 8328.691425 * t + 0.0001523 * t * t);
            v -= 179 * Math.sin(2.543 + 15542.7543 * t) + 160 * Math.sin(0.1874 + 7214.0629 * t) + 62 * Math.sin(3.14 + 16657.3828 * t) + 34 * Math.sin(4.827 + 16866.9323 * t) + 22 * Math.sin(4.9 + 23871.4457 * t) + 12 * Math.sin(2.59 + 14914.4523 * t) + 7 * Math.sin(0.23 + 6585.7609 * t) + 5 * Math.sin(0.9 + 25195.624 * t) + 5 * Math.sin(2.32 - 7700.3895 * t) + 5 * Math.sin(3.88 + 8956.9934 * t) + 5 * Math.sin(0.49 + 7771.3771 * t);
            return v;
          },
          saLonT:function(w){
            var t, v = 628.3319653318;
            t = (w - 1.75347 - Math.PI) / v;
            v = this.ev(t);
            t += (w - this.saLon(t, 10)) / v;
            v = this.ev(t);
            t += (w - this.saLon(t, -1)) / v;
            return t;
          },
          msaLon:function(t,mn,sn){
            return this.mLon(t, mn) + (-3.4E-6) - (this.eLon(t, sn) + this.gxcSunLon(t) + Math.PI);
          },
          msaLonT:function(w){
            var t, v = 7771.37714500204;
            t = (w + 1.08472) / v;
            t += (w - this.msaLon(t, 3, 3)) / v;
            v = this.mv(t) - this.ev(t);
            t += (w - this.msaLon(t, 20, 10)) / v;
            t += (w - this.msaLon(t, -1, 60)) / v;
            return t;
          },
          msaLonT2:function(w){
            var t, v = 7771.37714500204;
            t = (w + 1.08472) / v;
            var l, t2 = t * t;
            t -= (-0.00003309 * t2 + 0.10976 * Math.cos(0.784758 + 8328.6914246 * t + 0.000152292 * t2) + 0.02224 * Math.cos(0.18740 + 7214.0628654 * t - 0.00021848 * t2) - 0.03342 * Math.cos(4.669257 + 628.307585 * t)) / v;
            t2 = t * t;
            l = this.mLon(t, 20) - (4.8950632 + 628.3319653318 * t + 0.000005297 * t2 + 0.0334166 * Math.cos(4.669257 + 628.307585 * t) + 0.0002061 * Math.cos(2.67823 + 628.307585 * t) * t + 0.000349 * Math.cos(4.6261 + 1256.61517 * t) - 20.5 / this.SECOND_PER_RAD);
            v = 7771.38 - 914 * Math.sin(0.7848 + 8328.691425 * t + 0.0001523 * t2) - 179 * Math.sin(2.543 + 15542.7543 * t) - 160 * Math.sin(0.1874 + 7214.0629 * t);
            t += (w - l) / v;
            return t;
          },
          shuoHigh:function(w){
            var t = this.msaLonT2(w) * 36525;
            t = t - this.dtT(t) + this.ONE_THIRD;
            var v = ((t + 0.5) % 1) * this.SECOND_PER_DAY;
            if (v < 1800 || v > this.SECOND_PER_DAY - 1800) {
              t = this.msaLonT(w) * 36525 - this.dtT(t) + this.ONE_THIRD;
            }
            return t;
          },
          shuoLow:function(w){
            var v = 7771.37714500204;
            var t = (w + 1.08472) / v;
            t -= (-0.0000331 * t * t + 0.10976 * Math.cos(0.785 + 8328.6914 * t) + 0.02224 * Math.cos(0.187 + 7214.0629 * t) - 0.03342 * Math.cos(4.669 + 628.3076 * t)) / v + (32 * (t + 1.8) * (t + 1.8) - 20) / this.SECOND_PER_DAY / 36525;
            return t * 36525 + this.ONE_THIRD;
          },
          calcShuo:function(jd){
            var size = this.SHUO_KB.length;
            var d = 0;
            var pc = 14, i;
            jd += Solar.J2000;
            var f1 = this.SHUO_KB[0] - pc, f2 = this.SHUO_KB[size - 1] - pc, f3 = 2436935;
            if (jd < f1 || jd >= f3) {
              d = Math.floor(this.shuoHigh(Math.floor((jd + pc - 2451551) / 29.5306) * Math.PI * 2) + 0.5);
            } else if (jd >= f1 && jd < f2) {
              for (i = 0; i < size; i += 2) {
                if (jd + pc < this.SHUO_KB[i + 2]) {
                  break;
                }
              }
              d = this.SHUO_KB[i] + this.SHUO_KB[i + 1] * Math.floor((jd + pc - this.SHUO_KB[i]) / this.SHUO_KB[i + 1]);
              d = Math.floor(d + 0.5);
              if (d == 1683460) {
                d++;
              }
              d -= Solar.J2000;
            } else if (jd >= f2 && jd < f3) {
              d = Math.floor(this.shuoLow(Math.floor((jd + pc - 2451551) / 29.5306) * Math.PI * 2) + 0.5);
              var from = Math.floor((jd - f2) / 29.5306);
              var n = this.SB.substr(from, 1);
              if ('1' == n) {
                d += 1;
              } else if ('2' == n) {
                d -= 1;
              }
            }
            return d;
          }
        };
      })();
      var SolarUtil = (function(){
        return {
          WEEK:['日','一','二','三','四','五','六'],
          DAYS_OF_MONTH:[31,28,31,30,31,30,31,31,30,31,30,31],
          XINGZUO:['白羊','金牛','双子','巨蟹','狮子','处女','天秤','天蝎','射手','摩羯','水瓶','双鱼'],
          FESTIVAL:{'1-1':'元旦节','2-14':'情人节','3-8':'妇女节','3-12':'植树节','3-15':'消费者权益日','4-1':'愚人节','5-1':'劳动节','5-4':'青年节','6-1':'儿童节','7-1':'建党节','8-1':'建军节','9-10':'教师节','10-1':'国庆节','12-24':'平安夜','12-25':'圣诞节'},
          OTHER_FESTIVAL:{'1-8':['周恩来逝世纪念日'],'1-10':['中国人民警察节','中国公安110宣传日'],'1-21':['列宁逝世纪念日'],'1-26':['国际海关日'],'2-2':['世界湿地日'],'2-4':['世界抗癌日'],'2-7':['京汉铁路罢工纪念'],'2-10':['国际气象节'],'2-19':['邓小平逝世纪念日'],'2-21':['国际母语日'],'2-24':['第三世界青年日'],'3-1':['国际海豹日'],'3-3':['全国爱耳日'],'3-5':['周恩来诞辰纪念日','中国青年志愿者服务日'],'3-6':['世界青光眼日'],'3-12':['孙中山逝世纪念日'],'3-14':['马克思逝世纪念日'],'3-17':['国际航海日'],'3-18':['全国科技人才活动日'],'3-21':['世界森林日','世界睡眠日'],'3-22':['世界水日'],'3-23':['世界气象日'],'3-24':['世界防治结核病日'],'4-2':['国际儿童图书日'],'4-7':['世界卫生日'],'4-22':['列宁诞辰纪念日'],'4-23':['世界图书和版权日'],'4-26':['世界知识产权日'],'5-3':['世界新闻自由日'],'5-5':['马克思诞辰纪念日'],'5-8':['世界红十字日'],'5-11':['世界肥胖日'],'5-27':['上海解放日'],'5-31':['世界无烟日'],'6-5':['世界环境日'],'6-6':['全国爱眼日'],'6-8':['世界海洋日'],'6-11':['中国人口日'],'6-14':['世界献血日'],'7-1':['香港回归纪念日'],'7-7':['中国人民抗日战争纪念日'],'7-11':['世界人口日'],'8-5':['恩格斯逝世纪念日'],'8-6':['国际电影节'],'8-12':['国际青年日'],'8-22':['邓小平诞辰纪念日'],'9-3':['中国抗日战争胜利纪念日'],'9-8':['世界扫盲日'],'9-9':['毛泽东逝世纪念日'],'9-14':['世界清洁地球日'],'9-18':['九一八事变纪念日'],'9-20':['全国爱牙日'],'9-21':['国际和平日'],'9-27':['世界旅游日'],'10-4':['世界动物日'],'10-10':['辛亥革命纪念日'],'10-13':['中国少年先锋队诞辰日'],'10-25':['抗美援朝纪念日'],'11-12':['孙中山诞辰纪念日'],'11-17':['国际大学生节'],'11-28':['恩格斯诞辰纪念日'],'12-1':['世界艾滋病日'],'12-12':['西安事变纪念日'],'12-13':['南京大屠杀纪念日'],'12-26':['毛泽东诞辰纪念日']},
          WEEK_FESTIVAL:{'5-2-0':'母亲节','6-3-0':'父亲节','11-4-4':'感恩节'},
          isLeapYear:function(year){return (year % 4 === 0 && year % 100 !== 0) || (year % 400 === 0);},
          getDaysOfMonth:function(year,month){
            var m = month-1;
            var d = this.DAYS_OF_MONTH[m];
            if(m===1&&this.isLeapYear(year)){
              d++;
            }
            return d;
          },
          getWeeksOfMonth:function(year,month,start){
            var days = this.getDaysOfMonth(year,month);
            var firstDate = ExactDate.fromYmd(year,month,1);
            var firstDayWeek = firstDate.getDay();
            return Math.ceil((days+firstDayWeek-start)/7);
          }
        };
      })();
      var LunarUtil = (function(){
        return {
          BASE_MONTH_ZHI_INDEX:2,
          XUN:['甲子','甲戌','甲申','甲午','甲辰','甲寅'],
          XUN_KONG:['戌亥','申酉','午未','辰巳','寅卯','子丑'],
          LIU_YAO:['先胜','友引','先负','佛灭','大安','赤口'],
          WU_HOU:['蚯蚓结','麋角解','水泉动','雁北乡','鹊始巢','雉始雊','鸡始乳','征鸟厉疾','水泽腹坚','东风解冻','蛰虫始振','鱼陟负冰','獭祭鱼','候雁北','草木萌动','桃始华','仓庚鸣','鹰化为鸠','玄鸟至','雷乃发声','始电','桐始华','田鼠化为鴽','虹始见','萍始生','鸣鸠拂奇羽','戴胜降于桑','蝼蝈鸣','蚯蚓出','王瓜生','苦菜秀','靡草死','麦秋至','螳螂生','鵙始鸣','反舌无声','鹿角解','蜩始鸣','半夏生','温风至','蟋蟀居壁','鹰始挚','腐草为萤','土润溽暑','大雨行时','凉风至','白露降','寒蝉鸣','鹰乃祭鸟','天地始肃','禾乃登','鸿雁来','玄鸟归','群鸟养羞','雷始收声','蛰虫坯户','水始涸','鸿雁来宾','雀入大水为蛤','菊有黄花','豺乃祭兽','草木黄落','蛰虫咸俯','水始冰','地始冻','雉入大水为蜃','虹藏不见','天气上升地气下降','闭塞而成冬','鹖鴠不鸣','虎始交','荔挺出'],
          GAN:['','甲','乙','丙','丁','戊','己','庚','辛','壬','癸'],
          POSITION_XI:['','艮','乾','坤','离','巽','艮','乾','坤','离','巽'],
          POSITION_YANG_GUI:['','坤','坤','兑','乾','艮','坎','离','艮','震','巽'],
          POSITION_YIN_GUI:['','艮','坎','乾','兑','坤','坤','艮','离','巽','震'],
          POSITION_FU:['','巽','巽','震','震','坎','离','坤','坤','乾','兑'],
          POSITION_CAI:['','艮','艮','坤','坤','坎','坎','震','震','离','离'],
          POSITION_TAI_DAY:['占门碓外东南','碓磨厕外东南','厨灶炉外正南','仓库门外正南','房床厕外正南','占门床外正南','占碓磨外正南','厨灶厕外西南','仓库炉外西南','房床门外西南','门鸡栖外西南','碓磨床外西南','厨灶碓外西南','仓库厕外西南','房床厕外正南','房床炉外正西','碓磨栖外正西','厨灶床外正西','仓库碓外西北','房床厕外西北','占门炉外西北','碓磨门外西北','厨灶栖外西北','仓库床外西北','房床碓外正北','占门厕外正北','碓磨炉外正北','厨灶门外正北','仓库栖外正北','占房床房内北','占门碓房内北','碓磨厕房内北','厨灶炉房内北','仓库门房内北','门鸡栖外西南','占门床房内南','占碓磨房内南','厨灶厕房内南','仓库炉房内南','房床门房内南','门鸡栖房内东','碓磨床房内东','厨灶碓房内东','仓库厕房内东','房床炉房内东','占大门外东北','碓磨栖外东北','厨灶床外东北','仓库碓外东北','房床厕外东北','占门炉外东北','碓磨门外正东','厨灶栖外正东','仓库床外正东','房床碓外正东','占门厕外正东','碓磨炉外东南','仓库栖外东南','占房床外东南','占门碓外东南'],
          POSITION_TAI_MONTH:['占房床','占户窗','占门堂','占厨灶','占身床','占床仓','占碓磨','占厕户','占门房','占房床','占炉灶','占房床'],
          ZHI:['','子','丑','寅','卯','辰','巳','午','未','申','酉','戌','亥'],
          ZHI_XING:['','建','除','满','平','定','执','破','危','成','收','开','闭'],
          JIA_ZI:['甲子','乙丑','丙寅','丁卯','戊辰','己巳','庚午','辛未','壬申','癸酉','甲戌','乙亥','丙子','丁丑','戊寅','己卯','庚辰','辛巳','壬午','癸未','甲申','乙酉','丙戌','丁亥','戊子','己丑','庚寅','辛卯','壬辰','癸巳','甲午','乙未','丙申','丁酉','戊戌','己亥','庚子','辛丑','壬寅','癸卯','甲辰','乙巳','丙午','丁未','戊申','己酉','庚戌','辛亥','壬子','癸丑','甲寅','乙卯','丙辰','丁巳','戊午','己未','庚申','辛酉','壬戌','癸亥'],
          TIAN_SHEN:['','青龙','明堂','天刑','朱雀','金匮','天德','白虎','玉堂','天牢','玄武','司命','勾陈'],
          ZHI_TIAN_SHEN_OFFSET:{'子':4,'丑':2,'寅':0,'卯':10,'辰':8,'巳':6,'午':4,'未':2,'申':0,'酉':10,'戌':8,'亥':6},
          TIAN_SHEN_TYPE:{'青龙':'黄道','明堂':'黄道','金匮':'黄道','天德':'黄道','玉堂':'黄道','司命':'黄道','天刑':'黑道','朱雀':'黑道','白虎':'黑道','天牢':'黑道','玄武':'黑道','勾陈':'黑道'},
          TIAN_SHEN_TYPE_LUCK:{'黄道':'吉','黑道':'凶'},
          PENGZU_GAN:['','甲不开仓财物耗散','乙不栽植千株不长','丙不修灶必见灾殃','丁不剃头头必生疮','戊不受田田主不祥','己不破券二比并亡','庚不经络织机虚张','辛不合酱主人不尝','壬不泱水更难提防','癸不词讼理弱敌强'],
          PENGZU_ZHI:['','子不问卜自惹祸殃','丑不冠带主不还乡','寅不祭祀神鬼不尝','卯不穿井水泉不香','辰不哭泣必主重丧','巳不远行财物伏藏','午不苫盖屋主更张','未不服药毒气入肠','申不安床鬼祟入房','酉不会客醉坐颠狂','戌不吃犬作怪上床','亥不嫁娶不利新郎'],
          NUMBER:['〇','一','二','三','四','五','六','七','八','九','十','十一','十二'],
          MONTH:['','正','二','三','四','五','六','七','八','九','十','冬','腊'],
          SEASON:['','孟春','仲春','季春','孟夏','仲夏','季夏','孟秋','仲秋','季秋','孟冬','仲冬','季冬'],
          SHENGXIAO:['','鼠','牛','虎','兔','龙','蛇','马','羊','猴','鸡','狗','猪'],
          DAY:['','初一','初二','初三','初四','初五','初六','初七','初八','初九','初十','十一','十二','十三','十四','十五','十六','十七','十八','十九','二十','廿一','廿二','廿三','廿四','廿五','廿六','廿七','廿八','廿九','三十'],
          YUE_XIANG:['','朔','既朔','蛾眉新','蛾眉新','蛾眉','夕月','上弦','上弦','九夜','宵','宵','宵','渐盈凸','小望','望','既望','立待','居待','寝待','更待','渐亏凸','下弦','下弦','有明','有明','蛾眉残','蛾眉残','残','晓','晦'],
          XIU:{'申1':'毕','申2':'翼','申3':'箕','申4':'奎','申5':'鬼','申6':'氐','申0':'虚','子1':'毕','子2':'翼','子3':'箕','子4':'奎','子5':'鬼','子6':'氐','子0':'虚','辰1':'毕','辰2':'翼','辰3':'箕','辰4':'奎','辰5':'鬼','辰6':'氐','辰0':'虚','巳1':'危','巳2':'觜','巳3':'轸','巳4':'斗','巳5':'娄','巳6':'柳','巳0':'房','酉1':'危','酉2':'觜','酉3':'轸','酉4':'斗','酉5':'娄','酉6':'柳','酉0':'房','丑1':'危','丑2':'觜','丑3':'轸','丑4':'斗','丑5':'娄','丑6':'柳','丑0':'房','寅1':'心','寅2':'室','寅3':'参','寅4':'角','寅5':'牛','寅6':'胃','寅0':'星','午1':'心','午2':'室','午3':'参','午4':'角','午5':'牛','午6':'胃','午0':'星','戌1':'心','戌2':'室','戌3':'参','戌4':'角','戌5':'牛','戌6':'胃','戌0':'星','亥1':'张','亥2':'尾','亥3':'壁','亥4':'井','亥5':'亢','亥6':'女','亥0':'昴','卯1':'张','卯2':'尾','卯3':'壁','卯4':'井','卯5':'亢','卯6':'女','卯0':'昴','未1':'张','未2':'尾','未3':'壁','未4':'井','未5':'亢','未6':'女','未0':'昴'},
          XIU_LUCK:{'角':'吉','亢':'凶','氐':'凶','房':'吉','心':'凶','尾':'吉','箕':'吉','斗':'吉','牛':'凶','女':'凶','虚':'凶','危':'凶','室':'吉','壁':'吉','奎':'凶','娄':'吉','胃':'吉','昴':'凶','毕':'吉','觜':'凶','参':'吉','井':'吉','鬼':'凶','柳':'凶','星':'凶','张':'吉','翼':'凶','轸':'吉'},
          XIU_SONG:{'角':'角星造作主荣昌，外进田财及女郎，嫁娶婚姻出贵子，文人及第见君王，惟有埋葬不可用，三年之后主瘟疫，起工修筑坟基地，堂前立见主人凶。','亢':'亢星造作长房当，十日之中主有殃，田地消磨官失职，接运定是虎狼伤，嫁娶婚姻用此日，儿孙新妇守空房，埋葬若还用此日，当时害祸主重伤。','氐':'氐星造作主灾凶，费尽田园仓库空，埋葬不可用此日，悬绳吊颈祸重重，若是婚姻离别散，夜招浪子入房中，行船必定遭沉没，更生聋哑子孙穷。','房':'房星造作田园进，钱财牛马遍山岗，更招外处田庄宅，荣华富贵福禄康，埋葬若然用此日，高官进职拜君王，嫁娶嫦娥至月殿，三年抱子至朝堂。','心':'心星造作大为凶，更遭刑讼狱囚中，忤逆官非宅产退，埋葬卒暴死相从，婚姻若是用此日，子死儿亡泪满胸，三年之内连遭祸，事事教君没始终。','尾':'尾星造作主天恩，富贵荣华福禄增，招财进宝兴家宅，和合婚姻贵子孙，埋葬若能依此日，男清女正子孙兴，开门放水招田宅，代代公侯远播名。','箕':'箕星造作主高强，岁岁年年大吉昌，埋葬修坟大吉利，田蚕牛马遍山岗，开门放水招田宅，箧满金银谷满仓，福荫高官加禄位，六亲丰禄乐安康。','斗':'斗星造作主招财，文武官员位鼎台，田宅家财千万进，坟堂修筑贵富来，开门放水招牛马，旺蚕男女主和谐，遇此吉宿来照护，时支福庆永无灾。','牛':'牛星造作主灾危，九横三灾不可推，家宅不安人口退，田蚕不利主人衰，嫁娶婚姻皆自损，金银财谷渐无之，若是开门并放水，牛猪羊马亦伤悲。','女':'女星造作损婆娘，兄弟相嫌似虎狼，埋葬生灾逢鬼怪，颠邪疾病主瘟惶，为事遭官财失散，泻利留连不可当，开门放水用此日，全家财散主离乡。','虚':'虚星造作主灾殃，男女孤眠不一双，内乱风声无礼节，儿孙媳妇伴人床，开门放水遭灾祸，虎咬蛇伤又卒亡，三三五五连年病，家破人亡不可当。','危':'危星不可造高楼，自遭刑吊见血光，三年孩子遭水厄，后生出外永不还，埋葬若还逢此日，周年百日取高堂，三年两载一悲伤，开门放水到官堂。','室':'室星修造进田牛，儿孙代代近王侯，家贵荣华天上至，寿如彭祖八千秋，开门放水招财帛，和合婚姻生贵儿，埋葬若能依此日，门庭兴旺福无休。','壁':'壁星造作主增财，丝蚕大熟福滔天，奴婢自来人口进，开门放水出英贤，埋葬招财官品进，家中诸事乐陶然，婚姻吉利主贵子，早播名誉著祖鞭。','奎':'奎星造作得祯祥，家内荣和大吉昌，若是埋葬阴卒死，当年定主两三伤，看看军令刑伤到，重重官事主瘟惶，开门放水遭灾祸，三年两次损儿郎。','娄':'娄星修造起门庭，财旺家和事事兴，外进钱财百日进，一家兄弟播高名，婚姻进益生贵子，玉帛金银箱满盈，放水开门皆吉利，男荣女贵寿康宁。','胃':'胃星造作事如何，家贵荣华喜气多，埋葬贵临官禄位，夫妇齐眉永保康，婚姻遇此家富贵，三灾九祸不逢他，从此门前多吉庆，儿孙代代拜金阶。','昴':'昴星造作进田牛，埋葬官灾不得休，重丧二日三人死，尽卖田园不记增，开门放水招灾祸，三岁孩儿白了头，婚姻不可逢此日，死别生离是可愁。','毕':'毕星造作主光前，买得田园有余钱，埋葬此日添官职，田蚕大熟永丰年，开门放水多吉庆，合家人口得安然，婚姻若得逢此日，生得孩儿福寿全。','觜':'觜星造作有徒刑，三年必定主伶丁，埋葬卒死多因此，取定寅年使杀人，三丧不止皆由此，一人药毒二人身，家门田地皆退败，仓库金银化作尘。','参':'参星造作旺人家，文星照耀大光华，只因造作田财旺，埋葬招疾哭黄沙，开门放水加官职，房房子孙见田加，婚姻许遁遭刑克，男女朝开幕落花。','井':'井星造作旺蚕田，金榜题名第一光，埋葬须防惊卒死，狂颠风疾入黄泉，开门放水招财帛，牛马猪羊旺莫言，贵人田塘来入宅，儿孙兴旺有余钱。','鬼':'鬼星起造卒人亡，堂前不见主人郎，埋葬此日官禄至，儿孙代代近君王，开门放水须伤死，嫁娶夫妻不久长，修土筑墙伤产女，手扶双女泪汪汪。','柳':'柳星造作主遭官，昼夜偷闭不暂安，埋葬瘟惶多疾病，田园退尽守冬寒，开门放水遭聋瞎，腰驼背曲似弓弯，更有棒刑宜谨慎，妇人随客走盘桓。','星':'星宿日好造新房，进职加官近帝王，不可埋葬并放水，凶星临位女人亡，生离死别无心恋，要自归休别嫁郎，孔子九曲殊难度，放水开门天命伤。','张':'张星日好造龙轩，年年并见进庄田，埋葬不久升官职，代代为官近帝前，开门放水招财帛，婚姻和合福绵绵，田蚕人满仓库满，百般顺意自安然。','翼':'翼星不利架高堂，三年二载见瘟惶，埋葬若还逢此日，子孙必定走他乡，婚姻此日不宜利，归家定是不相当，开门放水家须破，少女恋花贪外郎。','轸':'轸星临水造龙宫，代代为官受皇封，富贵荣华增寿禄，库满仓盈自昌隆，埋葬文昌来照助，宅舍安宁不见凶，更有为官沾帝宠，婚姻龙子入龙宫。'},
          ZHENG:{'角':'木','井':'木','奎':'木','斗':'木','亢':'金','鬼':'金','娄':'金','牛':'金','氐':'土','柳':'土','胃':'土','女':'土','房':'日','星':'日','昴':'日','虚':'日','心':'月','张':'月','毕':'月','危':'月','尾':'火','翼':'火','觜':'火','室':'火','箕':'水','轸':'水','参':'水','壁':'水'      },
          ANIMAL:{'角':'蛟','斗':'獬','奎':'狼','井':'犴','亢':'龙','牛':'牛','娄':'狗','鬼':'羊','女':'蝠','氐':'貉','胃':'彘','柳':'獐','房':'兔','虚':'鼠','昴':'鸡','星':'马','心':'狐','危':'燕','毕':'乌','张':'鹿','尾':'虎','室':'猪','觜':'猴','翼':'蛇','箕':'豹','壁':'獝','参':'猿','轸':'蚓'      },
          GONG:{'角':'东','井':'南','奎':'西','斗':'北','亢':'东','鬼':'南','娄':'西','牛':'北','氐':'南','柳':'南','胃':'西','女':'北','房':'东','星':'南','昴':'西','虚':'北','心':'东','张':'南','毕':'西','危':'北','尾':'东','翼':'南','觜':'西','室':'北','箕':'东','轸':'南','参':'西','壁':'北'      },
          SHOU:{'东':'青龙','南':'朱雀','西':'白虎','北':'玄武'},
          FESTIVAL:{'1-1':'春节','1-15':'元宵节','2-2':'龙头节','5-5':'端午节','7-7':'七夕节','8-15':'中秋节','9-9':'重阳节','12-8':'腊八节'},
          OTHER_FESTIVAL:{'1-1':['弥勒佛圣诞'],'1-8':['五殿阎罗天子诞'],'1-9':['玉皇上帝诞'],'1-13':['杨公忌'],'2-1':['一殿秦广王诞'],'2-2':['福德土地正神诞'],'2-3':['文昌帝君诞'],'2-6':['东华帝君诞'],'2-8':['释迦牟尼佛出家'],'2-11':['杨公忌'],'2-15':['释迦牟尼佛涅槃','太上老君诞'],'2-17':['东方杜将军诞'],'2-18':['四殿五官王诞','至圣先师孔子讳辰'],'2-19':['观音大士诞'],'2-21':['普贤菩萨诞'],'3-1':['二殿楚江王诞'],'3-3':['玄天上帝诞'],'3-8':['六殿卞城王诞'],'3-9':['杨公忌'],'3-12':['中央五道诞'],'3-15':['玄坛诞','昊天上帝诞'],'3-16':['准提菩萨诞'],'3-18':['中岳大帝诞','后土娘娘诞'],'3-20':['子孙娘娘诞'],'3-27':['七殿泰山王诞'],'3-28':['苍颉至圣先师诞'],'4-1':['八殿都市王诞'],'4-4':['文殊菩萨诞'],'4-7':['杨公忌'],'4-8':['释迦牟尼佛诞','九殿平等王诞'],'4-14':['纯阳祖师诞'],'4-15':['钟离祖师诞'],'4-17':['十殿转轮王诞'],'4-18':['紫徽大帝诞'],'4-20':['眼光圣母诞'],'5-1':['南极长生大帝诞'],'5-5':['杨公忌'],'5-8':['南方五道诞'],'5-11':['天下都城隍诞'],'5-12':['炳灵公诞'],'5-13':['关圣降'],'5-16':['天地元气造化万物之辰'],'5-18':['张天师诞'],'5-22':['孝娥神诞'],'6-3':['杨公忌'],'6-10':['金粟如来诞'],'6-13':['井泉龙王诞'],'6-19':['观音大士涅槃'],'6-23':['南方火神诞'],'6-24':['雷祖诞','关帝诞'],'7-1':['杨公忌'],'7-7':['魁星诞'],'7-12':['长真谭真人诞'],'7-13':['大势至菩萨诞'],'7-15':['中元节'],'7-18':['西王母诞'],'7-19':['太岁诞'],'7-22':['增福财神诞'],'7-29':['杨公忌'],'7-30':['地藏菩萨诞'],'8-1':['许真君诞'],'8-3':['司命灶君诞'],'8-5':['雷声大帝诞'],'8-10':['北斗大帝诞'],'8-12':['西方五道诞'],'8-16':['天曹掠刷真君降'],'8-18':['天人兴福之辰'],'8-23':['汉恒候张显王诞'],'8-24':['灶君夫人诞'],'8-27':['至圣先师孔子诞','杨公忌'],'9-1':['北斗九星降'],'9-2':['北斗九星降'],'9-3':['北斗九星降','五瘟神诞'],'9-4':['北斗九星降'],'9-5':['北斗九星降'],'9-6':['北斗九星降'],'9-7':['北斗九星降'],'9-8':['北斗九星降'],'9-9':['北斗九星降','酆都大帝诞'],'9-13':['孟婆尊神诞'],'9-17':['金龙四大王诞'],'9-19':['观世音菩萨出家'],'9-25':['杨公忌'],'9-30':['药师琉璃光佛诞'],'10-1':['寒衣节'],'10-3':['三茅诞'],'10-5':['达摩祖师诞'],'10-8':['佛涅槃日'],'10-15':['下元节'],'10-23':['杨公忌'],'10-27':['北极紫薇大帝降'],'11-4':['至圣先师孔子诞'],'11-6':['西岳大帝诞'],'11-11':['太乙救苦天尊诞'],'11-17':['阿弥陀佛诞'],'11-19':['太阳日宫诞'],'11-21':['杨公忌'],'11-23':['张仙诞'],'11-25':['掠刷大夫降'],'11-26':['北方五道诞'],'12-8':['释迦如来成佛之辰'],'12-16':['南岳大帝诞'],'12-19':['杨公忌'],'12-21':['天猷上帝诞'],'12-23':['小年','五岳神降'],'12-29':['华严菩萨诞']},
          CHONG:{'子':'午','丑':'未','寅':'申','卯':'酉','辰':'戌','巳':'亥','午':'子','未':'丑','申':'寅','酉':'卯','戌':'辰','亥':'巳'},
          CHONG_GAN:{'甲':'戊','乙':'己','丙':'庚','丁':'辛','戊':'壬','己':'癸','庚':'甲','辛':'乙','壬':'丙','癸':'丁'},
          CHONG_GAN_BAD:{'庚':'甲','辛':'乙','壬':'丙','癸':'丁'},
          CHONG_GAN_TIE:{'甲':'己','乙':'戊','丙':'辛','丁':'庚','戊':'癸','己':'壬','庚':'乙','辛':'甲','壬':'丁','癸':'丙'},
          CHONG_GAN_TIE_GOOD:{'甲':'己','丙':'辛','戊':'癸','庚':'乙','壬':'丁'},
          SHA:{'子':'南','丑':'东','寅':'北','卯':'西','辰':'南','巳':'东','午':'北','未':'西','申':'南','酉':'东','戌':'北','亥':'西'},
          POSITION_DESC:{'坎':'正北','艮':'东北','震':'正东','巽':'东南','离':'正南','坤':'西南','兑':'正西','乾':'西北','中':'中宫'},
          NAYIN:{'甲子':'海中金','甲午':'沙中金','丙寅':'炉中火','丙申':'山下火','戊辰':'大林木','戊戌':'平地木','庚午':'路旁土','庚子':'壁上土','壬申':'剑锋金','壬寅':'金箔金','甲戌':'山头火','甲辰':'覆灯火','丙子':'涧下水','丙午':'天河水','戊寅':'城头土','戊申':'大驿土','庚辰':'白蜡金','庚戌':'钗钏金','壬午':'杨柳木','壬子':'桑柘木','甲申':'泉中水','甲寅':'大溪水','丙戌':'屋上土','丙辰':'沙中土','戊子':'霹雳火','戊午':'天上火','庚寅':'松柏木','庚申':'石榴木','壬辰':'长流水','壬戌':'大海水','乙丑':'海中金','乙未':'沙中金','丁卯':'炉中火','丁酉':'山下火','己巳':'大林木','己亥':'平地木','辛未':'路旁土','辛丑':'壁上土','癸酉':'剑锋金','癸卯':'金箔金','乙亥':'山头火','乙巳':'覆灯火','丁丑':'涧下水','丁未':'天河水','己卯':'城头土','己酉':'大驿土','辛巳':'白蜡金','辛亥':'钗钏金','癸未':'杨柳木','癸丑':'桑柘木','乙酉':'泉中水','乙卯':'大溪水','丁亥':'屋上土','丁巳':'沙中土','己丑':'霹雳火','己未':'天上火','辛卯':'松柏木','辛酉':'石榴木','癸巳':'长流水','癸亥':'大海水'},
          WU_XING_GAN:{'甲':'木','乙':'木','丙':'火','丁':'火','戊':'土','己':'土','庚':'金','辛':'金','壬':'水','癸':'水'},
          WU_XING_ZHI:{'寅':'木','卯':'木','巳':'火','午':'火','辰':'土','丑':'土','戌':'土','未':'土','申':'金','酉':'金','亥':'水','子':'水'},
          SHI_SHEN_GAN:{'甲甲':'比肩','甲乙':'劫财','甲丙':'食神','甲丁':'伤官','甲戊':'偏财','甲己':'正财','甲庚':'七杀','甲辛':'正官','甲壬':'偏印','甲癸':'正印','乙乙':'比肩','乙甲':'劫财','乙丁':'食神','乙丙':'伤官','乙己':'偏财','乙戊':'正财','乙辛':'七杀','乙庚':'正官','乙癸':'偏印','乙壬':'正印','丙丙':'比肩','丙丁':'劫财','丙戊':'食神','丙己':'伤官','丙庚':'偏财','丙辛':'正财','丙壬':'七杀','丙癸':'正官','丙甲':'偏印','丙乙':'正印','丁丁':'比肩','丁丙':'劫财','丁己':'食神','丁戊':'伤官','丁辛':'偏财','丁庚':'正财','丁癸':'七杀','丁壬':'正官','丁乙':'偏印','丁甲':'正印','戊戊':'比肩','戊己':'劫财','戊庚':'食神','戊辛':'伤官','戊壬':'偏财','戊癸':'正财','戊甲':'七杀','戊乙':'正官','戊丙':'偏印','戊丁':'正印','己己':'比肩','己戊':'劫财','己辛':'食神','己庚':'伤官','己癸':'偏财','己壬':'正财','己乙':'七杀','己甲':'正官','己丁':'偏印','己丙':'正印','庚庚':'比肩','庚辛':'劫财','庚壬':'食神','庚癸':'伤官','庚甲':'偏财','庚乙':'正财','庚丙':'七杀','庚丁':'正官','庚戊':'偏印','庚己':'正印','辛辛':'比肩','辛庚':'劫财','辛癸':'食神','辛壬':'伤官','辛乙':'偏财','辛甲':'正财','辛丁':'七杀','辛丙':'正官','辛己':'偏印','辛戊':'正印','壬壬':'比肩','壬癸':'劫财','壬甲':'食神','壬乙':'伤官','壬丙':'偏财','壬丁':'正财','壬戊':'七杀','壬己':'正官','壬庚':'偏印','壬辛':'正印','癸癸':'比肩','癸壬':'劫财','癸乙':'食神','癸甲':'伤官','癸丁':'偏财','癸丙':'正财','癸己':'七杀','癸戊':'正官','癸辛':'偏印','癸庚':'正印'},
          SHI_SHEN_ZHI:{'甲子癸':'正印','甲丑癸':'正印','甲丑己':'正财','甲丑辛':'正官','甲寅丙':'食神','甲寅甲':'比肩','甲寅戊':'偏财','甲卯乙':'劫财','甲辰乙':'劫财','甲辰戊':'偏财','甲辰癸':'正印','甲巳戊':'偏财','甲巳丙':'食神','甲巳庚':'七杀','甲午丁':'伤官','甲午己':'正财','甲未乙':'劫财','甲未己':'正财','甲未丁':'伤官','甲申戊':'偏财','甲申庚':'七杀','甲申壬':'偏印','甲酉辛':'正官','甲戌辛':'正官','甲戌戊':'偏财','甲戌丁':'伤官','甲亥壬':'偏印','甲亥甲':'比肩','乙子癸':'偏印','乙丑癸':'偏印','乙丑己':'偏财','乙丑辛':'七杀','乙寅丙':'伤官','乙寅甲':'劫财','乙寅戊':'正财','乙卯乙':'比肩','乙辰乙':'比肩','乙辰戊':'正财','乙辰癸':'偏印','乙巳戊':'正财','乙巳丙':'伤官','乙巳庚':'正官','乙午丁':'食神','乙午己':'偏财','乙未乙':'比肩','乙未己':'偏财','乙未丁':'食神','乙申戊':'正财','乙申庚':'正官','乙申壬':'正印','乙酉辛':'七杀','乙戌辛':'七杀','乙戌戊':'正财','乙戌丁':'食神','乙亥壬':'正印','乙亥甲':'劫财','丙子癸':'正官','丙丑癸':'正官','丙丑己':'伤官','丙丑辛':'正财','丙寅丙':'比肩','丙寅甲':'偏印','丙寅戊':'食神','丙卯乙':'正印','丙辰乙':'正印','丙辰戊':'食神','丙辰癸':'正官','丙巳戊':'食神','丙巳丙':'比肩','丙巳庚':'偏财','丙午丁':'劫财','丙午己':'伤官','丙未乙':'正印','丙未己':'伤官','丙未丁':'劫财','丙申戊':'食神','丙申庚':'偏财','丙申壬':'七杀','丙酉辛':'正财','丙戌辛':'正财','丙戌戊':'食神','丙戌丁':'劫财','丙亥壬':'七杀','丙亥甲':'偏印','丁子癸':'七杀','丁丑癸':'七杀','丁丑己':'食神','丁丑辛':'偏财','丁寅丙':'劫财','丁寅甲':'正印','丁寅戊':'伤官','丁卯乙':'偏印','丁辰乙':'偏印','丁辰戊':'伤官','丁辰癸':'七杀','丁巳戊':'伤官','丁巳丙':'劫财','丁巳庚':'正财','丁午丁':'比肩','丁午己':'食神','丁未乙':'偏印','丁未己':'食神','丁未丁':'比肩','丁申戊':'伤官','丁申庚':'正财','丁申壬':'正官','丁酉辛':'偏财','丁戌辛':'偏财','丁戌戊':'伤官','丁戌丁':'比肩','丁亥壬':'正官','丁亥甲':'正印','戊子癸':'正财','戊丑癸':'正财','戊丑己':'劫财','戊丑辛':'伤官','戊寅丙':'偏印','戊寅甲':'七杀','戊寅戊':'比肩','戊卯乙':'正官','戊辰乙':'正官','戊辰戊':'比肩','戊辰癸':'正财','戊巳戊':'比肩','戊巳丙':'偏印','戊巳庚':'食神','戊午丁':'正印','戊午己':'劫财','戊未乙':'正官','戊未己':'劫财','戊未丁':'正印','戊申戊':'比肩','戊申庚':'食神','戊申壬':'偏财','戊酉辛':'伤官','戊戌辛':'伤官','戊戌戊':'比肩','戊戌丁':'正印','戊亥壬':'偏财','戊亥甲':'七杀','己子癸':'偏财','己丑癸':'偏财','己丑己':'比肩','己丑辛':'食神','己寅丙':'正印','己寅甲':'正官','己寅戊':'劫财','己卯乙':'七杀','己辰乙':'七杀','己辰戊':'劫财','己辰癸':'偏财','己巳戊':'劫财','己巳丙':'正印','己巳庚':'伤官','己午丁':'偏印','己午己':'比肩','己未乙':'七杀','己未己':'比肩','己未丁':'偏印','己申戊':'劫财','己申庚':'伤官','己申壬':'正财','己酉辛':'食神','己戌辛':'食神','己戌戊':'劫财','己戌丁':'偏印','己亥壬':'正财','己亥甲':'正官','庚子癸':'伤官','庚丑癸':'伤官','庚丑己':'正印','庚丑辛':'劫财','庚寅丙':'七杀','庚寅甲':'偏财','庚寅戊':'偏印','庚卯乙':'正财','庚辰乙':'正财','庚辰戊':'偏印','庚辰癸':'伤官','庚巳戊':'偏印','庚巳丙':'七杀','庚巳庚':'比肩','庚午丁':'正官','庚午己':'正印','庚未乙':'正财','庚未己':'正印','庚未丁':'正官','庚申戊':'偏印','庚申庚':'比肩','庚申壬':'食神','庚酉辛':'劫财','庚戌辛':'劫财','庚戌戊':'偏印','庚戌丁':'正官','庚亥壬':'食神','庚亥甲':'偏财','辛子癸':'食神','辛丑癸':'食神','辛丑己':'偏印','辛丑辛':'比肩','辛寅丙':'正官','辛寅甲':'正财','辛寅戊':'正印','辛卯乙':'偏财','辛辰乙':'偏财','辛辰戊':'正印','辛辰癸':'食神','辛巳戊':'正印','辛巳丙':'正官','辛巳庚':'劫财','辛午丁':'七杀','辛午己':'偏印','辛未乙':'偏财','辛未己':'偏印','辛未丁':'七杀','辛申戊':'正印','辛申庚':'劫财','辛申壬':'伤官','辛酉辛':'比肩','辛戌辛':'比肩','辛戌戊':'正印','辛戌丁':'七杀','辛亥壬':'伤官','辛亥甲':'正财','壬子癸':'劫财','壬丑癸':'劫财','壬丑己':'正官','壬丑辛':'正印','壬寅丙':'偏财','壬寅甲':'食神','壬寅戊':'七杀','壬卯乙':'伤官','壬辰乙':'伤官','壬辰戊':'七杀','壬辰癸':'劫财','壬巳戊':'七杀','壬巳丙':'偏财','壬巳庚':'偏印','壬午丁':'正财','壬午己':'正官','壬未乙':'伤官','壬未己':'正官','壬未丁':'正财','壬申戊':'七杀','壬申庚':'偏印','壬申壬':'比肩','壬酉辛':'正印','壬戌辛':'正印','壬戌戊':'七杀','壬戌丁':'正财','壬亥壬':'比肩','壬亥甲':'食神','癸子癸':'比肩','癸丑癸':'比肩','癸丑己':'七杀','癸丑辛':'偏印','癸寅丙':'正财','癸寅甲':'伤官','癸寅戊':'正官','癸卯乙':'食神','癸辰乙':'食神','癸辰戊':'正官','癸辰癸':'比肩','癸巳戊':'正官','癸巳丙':'正财','癸巳庚':'正印','癸午丁':'偏财','癸午己':'七杀','癸未乙':'食神','癸未己':'七杀','癸未丁':'偏财','癸申戊':'正官','癸申庚':'正印','癸申壬':'劫财','癸酉辛':'偏印','癸戌辛':'偏印','癸戌戊':'正官','癸戌丁':'偏财','癸亥壬':'劫财','癸亥甲':'伤官'},
          ZHI_HIDE_GAN:{'子':['癸'],'丑':['己','癸','辛'],'寅':['甲','丙','戊'],'卯':['乙'],'辰':['戊','乙','癸'],'巳':['丙','庚','戊'],'午':['丁','己'],'未':['己','丁','乙'],'申':['庚','壬','戊'],'酉':['辛'],'戌':['戊','辛','丁'],'亥':['壬','甲']},
          YI_JI:['祭祀','祈福','求嗣','开光','塑绘','齐醮','斋醮','沐浴','酬神','造庙','祀灶','焚香','谢土','出火','雕刻','嫁娶','订婚','纳采','问名','纳婿','归宁','安床','合帐','冠笄','订盟','进人口','裁衣','挽面','开容','修坟','启钻','破土','安葬','立碑','成服','除服','开生坟','合寿木','入殓','移柩','普渡','入宅','安香','安门','修造','起基','动土','上梁','竖柱','开井开池','作陂放水','拆卸','破屋','坏垣','补垣','伐木做梁','作灶','解除','开柱眼','穿屏扇架','盖屋合脊','开厕','造仓','塞穴','平治道涂','造桥','作厕','筑堤','开池','伐木','开渠','掘井','扫舍','放水','造屋','合脊','造畜稠','修门','定磉','作梁','修饰垣墙','架马','开市','挂匾','纳财','求财','开仓','买车','置产','雇庸','出货财','安机械','造车器','经络','酝酿','作染','鼓铸','造船','割蜜','栽种','取渔','结网','牧养','安碓磑','习艺','入学','理发','探病','见贵','乘船','渡水','针灸','出行','移徙','分居','剃头','整手足甲','纳畜','捕捉','畋猎','教牛马','会亲友','赴任','求医','治病','词讼','起基动土','破屋坏垣','盖屋','造仓库','立券交易','交易','立券','安机','会友','求医疗病','诸事不宜','馀事勿取','行丧','断蚁','归岫','无'],
          LU:{'甲':'寅','乙':'卯','丙':'巳','丁':'午','戊':'巳','己':'午','庚':'申','辛':'酉','壬':'亥','癸':'子','寅':'甲','卯':'乙','巳':'丙,戊','午':'丁,己','申':'庚','酉':'辛','亥':'壬','子':'癸'},
          DAY_YI_JI:'30=192531010D:838454151A4C200C1E23221D212726,030F522E1F00=2430000C18:8319000776262322200C1E1D,06292C2E1F04=32020E1A26:791715795B0001025D,0F522E38201D=162E3A0A22:790F181113332C2E2D302F157954,7001203810=0E1A263202:79026A176576036A,522E201F05=0D19250131:7911192C2E302F00030401060F1571292A75,707C20522F=0C18243000:4F2C2E2B383F443D433663,0F01478A20151D=0E1A320226:3840,0001202B892F=14202C3808:3807504089,8829=0E1A263202:383940,6370018A75202B454F6605=32020E1A26:38394089,0001202B22=16223A0A2E:384C,8A2020=2B3707131F:2C2E5B000739337C38802D44484C2425201F1E272621,5229701535=121E2A3606:2C2E2D2B156343364C,0F4729710D708A20036A1904=0D19250131:5040262789,0F7129033B=202C380814:5040000738,0F7D7C584F012063452B35=1A2632020E:50400089,8813=1A2632020E:69687011180F791966762627201E,0352292E8034=182430000C:291503000D332E53261F2075,0F5238584F450B=000C182430:297170192C2E2D2F2B3E363F4C,0F52156320010347200B=131F2B3707:297115030102195283840D332C2E,0F1F5863201D8A02=222E3A0A16:261F1E20232289,52290058363F32=16222E3A0A:261F201E232289,8D39=0D19310125:262322271E201D21,52450F4F09=0D19253101:262322271E202189,1F4526=16222E3A0A:262322271F1E20,712906=0F1B273303:17262322274050,80387C6B2C=0915212D39:1707702C2E71291F20,0F52000106111D15=16222E3A0A:170007386A7448363F261F1E,030F79636F2026=030F1B2733:1784832C2E5B26201F,0F010D2913=182430000C:175447440D15838477656A49,2B2E1F8A202228=101C283404:70504C7889,8803=0D19250131:700F181126151E20001A7919,8D2F=0915212D39:705283845B0D2F71,0F202E4106=3606121E2A:70786289,06802E1F23=1824000C30:70076A363F,292017=202C380814:700718111A302F717566,0F2B2E2026=3B0B17232F:70545283842E71291A7933192A5D5A5040,090C384F45208A1D6B38=212D390915:7039170F45513A2C2E7129242526271F201D,00010352153A=15212D3909:703911170E2C2E2D2F4B15712952633D,092B8A2027=010D192531:702D155483840F63262720,53292F017D4F38442B2E1F4717=16222E3A0A:705C4C39171A4F0E7971295B4C5248,0F2E1F1D37=1A2632020E:2E260F27201F,523815292F1A22=0E1A260232:64262322271F2021,0F2F293822=2F3B0B1723:161A0F1526271F4C,586103473818=2430000C18:161A7889,292E1F0F386131=17232F3B0B:04795B3F651A5D,0F5201062016=14202C3808:04170F79195D1A637566363F76,01522E8A2039=132B37071F:0470170F191A134C8384662426232227201E,8D08=0D19253101:040370181123220F1326271E2021,29153B=0D19310125:040307177938494C,0F26207017=0E2632021A:0403010218111A17332C2E2D2B15713E6575,45382064291D=142C380820:04033918110F0D2C2E7129332D2B72528384547566,8D1C=1830000C24:040318111A17332C15290D200C7A,4745063835=0F2733031B:040318111A16175B795452848315302F6563395D,387029202E=14202C3808:04031975363F6366,0F5401202C5283842E2F1E=0E1A320226:0403080618111A16332E2F152A09537919702C5445490D75072B,8063203820=182430000C:04067033392C7161262322271E1D210C,8D2F=101C283404:3F4889,881C=2733030F1B:3F74397677658988,0F3847201D=293505111D:3F8B657789,0F2029702E7D35=111D293505:3F8B6589,1F200A=020E1A2632:3F656477,0F2B71292005=111D290535:3F6589,8810=0F1B273303:3F88,2B38200F1C=293505111D:0F83843D363F776424,15462F2C52032971152A=0F1B273303:0F17795B54838458,52807C3811=121E2A3606:0F172C2E387129363F7566512C2E2D4E4461,01034752203A=172F3B0B23:0F171511793F76584C,0347200C1D20=2D39091521:0F175B3975660745514F2B4825201E211D,010352292E2E=0F1B273303:0F170070792C2E261F,040341232228=05111D2935:0F1700707129385C363F3D1F1E232226,80412B202F14=14202C3808:0F17000728705448757A,522E1F15562F05=30000C1824:0F17000102061979454F3A15477677,241F8A2021=2F3B0B1723:0F17000102060370392E52838453331F,452F2C266A79292B203810=0C18243000:0F170001020E032A70692C2E302F802D2B0D7129474C201F2322,5211183809615D34=1A2632020E:0F171170792F5B1566770001032C2B802D,29387C207134=14202C3808:0F0D33000103452E528384297115752620,63386F7014=15212D3909:0F7045332C2E71201F1D21,4701155229530327=101C283404:0F70161715232238838426271F20,7D035219=121E2A3606:0F705B0004037C5D15653F1F26,522B473809=131F2B0737:0F705215261E20,012E1F25=182430000C:0F707B7C00012F75,52201B=2531010D19:0F706A151E201D528384544466,47010C2E292F2C3820=14202C3808:0F707500261E20,382E1F05=3606121E2A:0F161A17452F0D33712C2E2B5443633F,150170208A0327=0E1A263202:0F150370002E0D3979528384532971331F1E20,477D0D=06121E2A36:0F5B8370000102060403161A494447,386A418A201A=17232F3B0B:0F03700D332C2E2971152F52838463,01004547380C26=101C283404:0F03700D33195284835329711563,01260038206B0E=131F2B3707:0F03706A4F0D332C528384532E29711563,450075000F=131F2B3707:0F0370010239332E2C19528384532971156375262720,8D18=17232F3B0B:0F0370390D332C192E2971637547202322,581528=0E1A263202:0F0302791566046F,29710D722A38528384202E4530=0E1A263202:0F030102392E15634447001F1E,293845200D707538=1E2A360612:0F0300017039712952542D2C302F80380D2A363F3349483E616320,1118150C1F2E20=33030F1B27:0F03000102700D29713963451F0C20,528338542F15806128=121E2A3606:0F030001027039452971150D332C2F6327,2052838403=2C38081420:0F030001022A0D3945297115528384630D7020,476A382E1F4426=010D192531:0F03390D332C1929711563261D2E2322,382000521118750C706B15=131F2B3707:0F033915666A52261E272048,382E2F6329712C0114=0D19253101:0F52838403700D332C29712E1F27201E2322,1545017505=131F2B3707:0F528400012E7129,092026=3707131F2B:0F528471295B795D2B155333565A446375661F201E272621,00016B0C4113=14202C3808:0F280001363F8B4326232220,2E1F47032F7D35=16222E3A0A:0F0211195465756679,2F384570202B6A10=15212D3909:0F0102700D332C2E2F0319528384531529716345261F2322,8D32=101C283404:0F0102037039330D5284832971152E1F0C,0026206B37=16222E3A0A:0F003854,20521D2106=020E1A2632:0F00175058,5D6B80382E16=1B2733030F:0F00701784831952712C2E1526271F,033806201F=2B3707131F:0F00701A17830E544C5C0E78,7129632E1F38208A452F16=15212D3909:0F00040370396A742E15444948,458A384F2021=16222E3A0A:0F005B261F20,2E2F1D=2531010D19:0F0003450D3329712C2E2F1575,528A63705A20587D7C12=17232F3B0B:0F00030D70332C2E3952838453542971156375,6B2019=1B2733030F:0F000301020D297115332E1F0C,165220262E=121E2A3606:0F00030102700D332E2C192971155383846375261F1E20,8D1F=33030F1B27:0F00030102700D19297115332C2B535448,2E45208A00=2632020E1A:0F00030102705283842E544779,2920454F754C3836=16222E3A0A:0F0052037029710D332C15,7545584F8A201D2121=121E2A3606:0F00074850,8A2036=0D25310119:0F00071A706A717677492923221E202726,80522E1F39=1E2A360612:0F006A385040740717,1F70631E=212D390915:0F006A1938271779,565A4575522F801F1E632B=121E2A3606:0F00010D0302703352838453297115632E,208A454F2B=0E1A263202:0F000170390D332E2971152F63751F1E20,52846A381F=14202C3808:0F000106387129,2E1F24=14202C3808:0F0001062E7129,522010=0814202C38:0F0001062871292E7C528384032C5C2A15767765,11185D8A206B08=131F2B0737:0F0001067C1F20,522900=202C380814:0F0001020D700339332C192A83842971152E1F0C20262322,065256386110=111D293505:0F000102700D332C2E297115383F631F20,0347562B=14202C3808:0F000102700D332C712E15261F201E,80036A61473831=0C18243000:0F000102700D335283845329711563,38048A7D45202A=14202C3808:0F000102702E15471F1E,294F2B452C2F268011=0D19253101:0F0001022E792D3E75663D19,472063703852292B39=222E3A0A16:0F0001022E154826271F1E203874362322,036312=0D19253101:0F000102032971152C2E19,4720637038522B15=111D293505:0F000102030D70332E3919528384532971152B2F201F0C,8D1B=232F3B0B17:0F000102030D7033528384534529711520,63475814=131F2B3707:0F000102030D332C2E195283845329716375261E2322,8D19=15212D3909:0F00010203700D332C2E1929711552838453637526202322,8D09=111D293505:0F00010203700D332E2F192971152B52838453631F20,8D33=1A2632020E:0F00010203700D332E2F1929711552838453261F201E2322,8D03=2E3A0A1622:0F0001020370332C2E2F1575261F,2971476A458352380C=111D293505:0F0001020370332E2F0D19297115637566302B2C3979,8D08=000C182430:0F000102037039297175261F1D21,454F2E1563410F=17232F3B0B:0F0001020370390D703319297115632E2C752620212322,8D07=3606121E2A:0F0001020370390D332C1929712E157563548384534C,20248A38=16222E3A0A:0F0001020370390D1952838453542971631F0C,152036=14202C3808:0F00010203703915632719792322,80262045297158750F=111D293505:0F00010203528384157033,752971206B452F2B262E05=3404101C28:0F00010206030D7129302F79802D7C7C2B5C4744,11701D2052843833=111D293505:0F00010206181139702E1F686F6A792D2C2E304E15337566491F23221D21,52296B0D800D=15212D3909:0F000102070D70332C2E19528384297115637526201E2322,8D05=2C38081420:0F0001021A175D2C19152E302F7183846379,8A20704F7545410A=131F2B3707:0F001A651707,565A58202E1F476320=121E36062A:0F11707B7C5271291E20,2E1F39=111D293505:0F11700001522E71291F20,2B07=131F2B0737:0F11700001397129,2E2002=111D293505:0F11707129,2E1F2002=131F37072B:0F1152702E2F71291F20,000103=131F37072B:0F1152702E2F71291F20,7A3A=111D293505:0F117B7C2C2E71291F20,520300=111D350529:0F110001702E2F71291F20,0621=101C280434:0F11000170717B,522E1F0A=06121E2A36:0F110001708471292E1F20,03388051561C=121E2A3606:0F1100017B7C702E7129,522B22=2D39091521:0F110039702C2E522F1574487B7C2D4E804B,098A204538612B=05111D2935:0F1118795B65170002195D,52382E8A201E=2531010D19:0F111829711500010370390D332E750C201F,4552832F382B8004=2A3606121E:0F1118175C000301027039450D29332C2E2F15631F,8A582020=31010D1925:0F1118032A0D545283841A802D2C2E2B71296366774744201F26232221,010900150C06=2C38081420:0F11180300706A2E1549466319,292F26806B382B20754506=2E3A0A1622:0F1118528384530001035C53702971152B332C2E63201F1E23222621,6B75452D4F802E=111D293505:0F1118060300017B7C792E39767566261F20,7129805136=232F3B0B17:0F111800171A454F514E3A3871157765443D23221E262720,80612E1F1C=212D390915:0F11180003706A4F0D332C2E1929711571335363751F20262322,524746416128=3B0B17232F:0F111800037039450D2971332C632026,1F2E2B38528327=3B0B17232F:0F11180006032A0D700D332E011954838471152C202322,58477D630C=0814202C38:0F1118000106287129705B032C2E302F802D4E2B201F,528458384108=380814202C:0F11180001027039302971542F7526201E,63472E151F583A=1E2A360612:0F1118000102030D70332C2E192971158384535426201E2322,471F1B=1F2B370713:0F1118000102030D70332C2E195283845329711563261F0C20,4745752522=3505111D29:0F1118000102030D70332E2C192971153953631F0C262720,5284612528=390915212D:0F111800010203700D332C2E192971152F4B49471F270C2322,52562B2029=390915212D:0F111800010203391929710D1552838453,2075708A456309410F=0A16222E3A:0F111800010206032A0D09717029092D302F1575761320,521F47251D=1F2B370713:0F1118000102111A1703154F2C2E382D2F807566,7163708A1F207D2A=05111D2935:0F111800017C5C2C2E7129,527015382021=2B3707131F:0F11185C0370332D152322528384636626271E,2F292C2E1F00010601=2430000C18:0F11185C0001092A0D7014692983847B7C2C2E302F802D2B,06454F208A2E=0D19253101:0F11181200171A7919547638,5215201D09=3A0A16222E:0F1A1716007015713F261F2720,5263587D2B470304=111D293505:0F1A0070153871291F20,7A7629=010D192531:0F181179005B712980152D4E2A0D533358,5270208A11=0814202C38:0F181138171A7975665B52845415,47701F8A2013=121E2A3606:0F181117795B5C007054292A0D690403332D2C2E66632B3D,8A454F3822=121E2A3606:0F1811705200012E71291F20,382A=16222E0A3A:0F1811705200012E71291F20,062B27=14202C0838:0F18117052000171291E20,2E1F27=16222E0A3A:0F18117000012E71291F20,527A06=111D290535:0F1811700001062E2F1F20,712912=14202C3808:0F181100062839707952542C2E302F03565A7566441F1E,0D29802B2029=1824300C00:0F181100012C2E7129,522025=121E2A0636:0F18110001261F20,03522E=0915212D39:0F18110001702C2E7129,6F454F098A2025=030F1B2733:0F18110001702C2E71291F0D2B152F2127,5283162014=16222E3A0A:0F18110001707B7C0D7129,52565A152B2034=17232F3B0B:0F1811000104037115454F7677657B7C392023222726210C,52092E1F27=3707131F2B:0F181100010603797B7C802D302F2B6743441F202322,2952477D2528=14202C0838:0F181100017B7C2E71291F20,036F33=0D19253101:0F18110001027939706954528384685D15565A75201E1D26,29032E11=182430000C:0F1811000102062A0D2C2D804B2B672E2F7129,70471F8A2030=17232F3B0B:0F5C707971292C2E0E032A0D6A79804B2D8C2B3348634C,52110915462031=15212D3909:0F5C5B0001032A0D7052842C2E71291F20,1118517D462B=0F1B273303:0F5C111800015B712952841F20,756A251A=2733030F1B:1545332C2E2F84836375662620,0F0003700D71292B1C=0E1A320226:1516291211020056,06382007=000C182430:1551000403706A454F3A3D771F262322271E1D21,382B41522016=17232F3B0B:1500443626271F1E,29710F47380D19520337=182430000C:150001021745512E443D65262322,2B63387C18=192531010D:151A83842627202322,580F7003632E1F297C26=0E1A263202:15391A302F83845475662627201E,0F702E4629004708=3606121E2A:5B000102073911522C302F3A678C363F33490D482425200C1E2322,0F15382E1F6116=1E2A360612:5B71297000010611182A0D39792C2E332D4E712980152C1F202621,52454F3804=2C38081420:5B11180001020328700D332C2E195283847115632F751F2720,290F476630=0C18243000:201E27262322,8902=3404101C28:2A0D11180F52848353037039156358332C2E,3820002628=010D192531:4089,030F565A61206B27=1824300C00:4089,8836=1C28340410:0370833F0F6A5215,010D582E1F202C2F582938=112935051D:03700F,79192C2E2D715275262322271F201D217936=112935051D:0370110F45510D3371290941614C522623222720,8D3B=152D390921:03047039171A533852443D363F,8D11=0F1B273303:030402111A16175B4F3A2B153E0079015D5452848369026A51,7006200F05=0F1B270333:03041A174533302F56795B3E808339528454,700F292026=121E2A3606:037B7C2E2F261F20,0F14=1E2A360612:030270170F45513A2C7129528384702A0D532D2C24252623222720,155A382E1F2F=1B2733030F:03027011170D332D2C2E2F716152838454,010F201F2C=121E2A3606:03027039450D332C2F2D2971528384636626202322,581535=212D390915:03020E0F18110D332C2E2D2F4971293E615244756653,8A202531=1B2733030F:030102703945802D2C512B7129092322270C7566,112E528325=2D39091521:030102062C2E543E3D636679,380D19462971001F=293505111D:03111A171538193E3F,0F632C2E70454F200C19=17232F3B0B:031A2B7915656A,0F177001204529710D632E2F02=32020E1A26:033945302F838475262720,297071000F2E1F3810=17232F3B0B:0339332C2E1575201E26,0F520D631F29712A72473826=390915212D:0339332C2E302B66201D1F27,0D2971010015520F6B0E=15212D3909:03392D2E332F211D201F1E27,0F7015380029710D195824=16223A0A2E:036F791E20,522E1F31=1D29350511:5283845B79037B7C802D2C2E4E302F2B38493D4463664C1F2021,0F0D712917=15212D3909:5283845303702971150D2F,388A6A6D0F2012=111D293505:528384530370331929272E2B2F631F1D20,0F156B380E=0D19253101:528384530339454F0D297115332E2F637520,0F00705802=2A3606121E:528384530339332E152C2F58631F20,380D000F2900=283404101C:528384530003010215392C20,1112180F29560D2E1F754511=15212D3909:5283845300031929150D332C2E63,0F217045208A717521=3505111D29:5283845300010670528384802D2C2E4E155B201F1E232221,380F71296A0E=17232F3B0B:5283845354037029711575262720,631F58000F2E38010D=111D293505:528384000103451915332C2E631F2720,29716A0D0F7019=1D29350511:5283840001032E1570637566302F391F,0F4729712030=16222E3A0A:5283845479036A2627201E,0F380D70297115012F1A=1F2B370713:528384542E03700F1118705469565A7566631F1E2021,297138000C31=121E2A3606:52838454443D65002C2E15495D1F,0F417D712B38630F=0D19253101:5283845444360F11756415,2C2F29016B472E2B20381D=212D390915:528384545363000103332E15,0F1F197029710D757D2032=121E2A3606:528384546315332C2E2F26201F2322,0F0D45002971756B17=192531010D:52838454754C2971150301022E,0F63206A0938268A4117=1B2733030F:52848353000103297115332E2F19,0F8A514F6A6620754526=1824300C00:528403395B2F1E20,0F012D=0B17232F3B:5254700001020612692D4E584647336375662E1F1E,71290D262037=131F2B3707:525400045B17791A565D754C7866,2E1F207C34=0F2733031B:483F89,8838=232F3B0B17:767779392623222789,152B1F1D200E=0A16222E3A:767789,528300292025=14202C3808:7665261F20,0F291A=222E3A0A16:7665262322271F201E21,0F0029807124=1824000C30:7889,292E1F24=101C283404:8D,8832=1D29350511:63767789,522E0006206B31=131F2B3707:7B7C343589,0F7038=2632020E1A:7B7C343589,520F20=0E1A260232:7B34,8812=1C28340410:02703918110F7919155283756626232227201E,012C2E1F0C29=121E2A3606:020F11161A17454F2C2E2D302F2B38434C,2070016328=1824300C00:02060418110D332C2E415B637566262322271F20,520F23=142038082C:07504089,0F010C=15212D3909:07262723221F40,0F7129523B=2430000C18:0717363F1A2C4F3A67433D8B,71290F0103471A=2531010D19:0704031118528384542D2E4E49201F1E1D2127,292B000C3B=283404101C:073F7765644889,012014=111D293505:074048261F202322,0F71454F1500018008=111D293505:07404826271F1E2089,882C=0D19253101:07565A5283845463756677261F20,010F15296120=2F3B0B1723:07487677393F89,0F2952151F1D30=111D293505:074889,06520F3808=17232F3B0B:074889,883B=131F2B3707:074889,8832=15212D3909:07762623221F1E20,000F1552296B2F2A=0D19253101:0776776A742623221F200C211D1E,11180F2F5206802B0B=04101C2834:0776776564,000F29382011=101C283404:0706397B7C794C636A48,520F7129472026=14202C3808:077C343589,880A=380814202C:076A79040363660F5D363F,52292E1F20382F15560123=16223A0A2E:076A696819,0F2918=222E3A0A16:076A171552847983546578,712970010F2D=182430000C:076A48,45752F29384C0F204F612B30=131F2B3707:076A7626271F1E20,0D0F29382F2E0E=0814202C38:07343589,065238=1C28340410:070039201F0C2789,06030F292F23=101C280434:076564,0F292002=0D19253101:073918111A17332C2E71292322271F1E20481D45548384,38002F702A=1824300C00:7C343589,8801=172F3B0B23:6A79363F65,0F292B7118=1B2733030F:6A170F19,5845754C201F4F382430=1B2733030F:6A170F1963766F,5452201F32=0C18243000:6A0339332C20528384531563,29713801000F0C47806B3B=2A3606121E:77766564000789,0F52201E8A01=202C380814:1F2027260076232289,0F29528339=0F1B330327:3435,8809=0F1B273303:34357B7C,8818=121E2A3606:34357B7C7789,0F291D=232F3B0B17:34357B7C89,0F2021=33030F1B27:34357B7C89,030F27=390915212D:34357B7C89,712917=1D29350511:3435073989,8802=2C38081420:34357C89,0111180F292006=30000C1824:34357C89,71291A=14202C3808:34357C89,8A2036=182430000C:3435000789,8835=232F3B0B17:34350089,0F2025=3707131F2B:34353989,0F2037=0D25310119:343589,0F52202D=0F1B273303:343589,0F7152290D=131F2B3707:343589,8830=121E2A3606:343589,881C=16222E3A0A:343589,8819=131F2B3707:343589,880F=15212D3909:343589,8832=14202C3808:343589,8813=0D19253101:343589,8811=17232F3B0B:343589,881E=142C380820:017018110F1A2E15495247838463462322271F,8D03=0F1B270333:0103040818111A155284262322271E20217A79708330,38472E631B=14202C3808:010670170F0E3A294152838454262322271F201E,2E1815442C=0F1B273303:01067071292C2E1F20,1103150F520A=17232F0B3B:010670181126271F202165,293816=182430000C:0106111839513A2C2E2D2F8C804B4723221F63,7152292037=0F2733031B:010203040618110F3315292A271D200C6339171A712C2E30491E21,7A21=0E1A260232:010206040318110F2E292A27200C70072C302F541F392B49,381512=1A2632020E:010206110F452C2E7129095B5226232227201F0C,58804B036B2B381C=142C380820:01023918112E2D493E52756624262322271F20,8D12=121E2A3606:008354,06462F2E1F27=030F1B2733:00797084831754,0F2E472D4E1F06=0D19250131:0079701811072C2E01060F33152627200C7A1A302F4576631F2B,8052382900=172F3B0B23:00790F072C2E0103047018111A262322271E7A302F5448637545,293815561E=101C340428:007952151E20,0F2E1F33=0F1B273303:007984831A160F1719,632E20471D6B01=152D390921:0079110F0304062A528423222627207A19701A2C2E2F5D83,294513=0F1B273303:0079181A165B332F2B262322271E2021030469702D4E49712930845D,454F05=152139092D:0079192E2F030417332D1552847A5D,4E201F=162E3A0A22:003826232277,632E20523A=0D19310125:0038262389,521513=1C28340410:00384089,0F202E157C07=04101C2834:00384089,152967631F=101C283404:00384740,0F2037=1C28340410:00387765504089,0F157C04=131F37072B:00385476,521F13=16222E3A0A:003854767789,2E1F522010=131F2B3707:003854637519,205D1D1F52151E210F=121E2A3606:003889,52201F1D4733=121E2A3606:003889,881F=212D390915:001D23221E2789,52290F2E1F202B=07131F2B37:002C7080305C784C62,2E1F472001=283404101C:004D64547589,0F292E=131F2B3707:005040,522E1F0F2C2004=3404101C28:005089,032C2E1F33=182430000C:005089,8815=192531010D:00261F23221E201D2189,8D12=131F2B3707:00261F2322271E200C89,8D1E=121E2A3606:0026271E20,2F2E1F33=16222E3A0A:002627241F1E20232289,8D33=14202C3808:002627651E2027232289,881B=182430000C:00262789,292C2E1F2B2F2A=07131F2B37:00262322271F1E203F8B65,52290F038002=15212D3909:001779332D2322271E2007760304,38290F1C=1F2B370713:00173883546365756619,466115201F701D47522434=0D25310119:00170F79191A6540,712909387C2015=0E1A263202:00170F332C2E2D2F802952443F26232227201F,15637C383A=132B37071F:00170F7665776489,8D2A=390915212D:00177689,0F52804F2507=2E3A0A1622:00177179546A76,0F52443D1F2D=0915212D39:0070,0F292C2E791F13=131F2B3707:007083624C,0F38202E7D4F45471F7107=380814202C:00704F0D332C2E2D15363F261F20274C,0F2906036F4703=3404101C28:00702C2E164C157126271F1E202425363F,29386A032B0F=0F1B273303:00700F1715262720,472E386309=15212D0939:007022230726,2E17712952302F15=15212D3909:00704889,8834=1C28340410:0070784889,0345201F21=2D39091521:007007482089,2E1F58470B=0D19253101:0070071A010618110F5B52846775,6326202E=16222E3A0A:00701A17794C0F302F715475,2E454F8A20243A=0F1B330327:007018111A1617192E15382627201F656477,4F090A=0F1B273303:002E2F18110F5B3315292A26271F20210C7A70710102393E19,035A37=14202C3808:002E4344793F26271F20,03702C2F292B381A31=0E1A263202:00161A5D454F153826201E27,7D0D2904=152139092D:0004037039180F332D152952262322271F0C533A83,4117804735=1F2B370713:0004037B7C0F79494766754667,80293869208A1E=162E3A0A22:00040301067018111A0F332C15292A261E200C7A791970712F5D52838454,5617454F06=3404101C28:000403110F527079156523221E2027,0129802E1F6B1D=1830000C24:0004031A170F11332C2E302F1571292A657677451949,70201D5218=102834041C:0004031811171A5B332C2E155D52,0D29204504=17233B0B2F:00040318110F1519262322271E2021,52831F3825=3B0B17232F:00046A7966444C7765,010C202F38520F70292E31=14202C3808:003F261F202789,8836=131F2B3707:003F657789,7152290F032B3A=2632020E1A:003F651F0C2027232289,0F292B=16222E3A0A:003F89,8836=212D390915:000F76,032E1F522C292B22=2B3707131F:000F7765,2E1F7C4607=0F1B273303:000F01111A1615292A2627200C2C670279538384543E49,634512=0F1B273303:000F1320,6380382936=0F2733031B:000F1323222627,2E3829031535=0D25310119:00676589,0F200F=0C18243000:00401D232289,71290F47202B=101C283404:0040395089,8803=30000C1824:004023222089,0F291118470D=0A16222E3A:004089,0F5211=1A2632020E:004089,0F0147200B=3A0A16222E:00037039454F0D332971152C4C48,090F476341382E0A=111D293505:00037039041A26271F1E202322,0F2F2C335129452E0D3A3B=222E3A0A16:000370396A450D332F4B154C,0F208A7D41381F2E14=0F1B273303:00030401061A16170F332E71292627200C02696A45514F0D2C2D4E497A,2B0B=0F1B273303:000304111A33152D2E302F71292A5284530770022B,0F6345203B=0F1B330327:00030418111617332E2D2F292A52845407020D302B,090F452001=0F1B273303:000304080618110F1A2E2D0D3371292A2C302F7566010239454E802B,632039=2430000C18:00036A7415384878,45751F20240F522E834F2E=182430000C:000301394F2E154763751F27,0F707A802629710D192035=14202C3808:0003391983845475,2E1F0F6A702971722A0D04=0F1B270333:00483F,6338200F2A=3B0B17232F:00481F2023221E27262189,0F292C2E1B=122A36061E:0076645089,8819=202C380814:0076777566262322271F201E,0F111852290D=101C283404:00763989,0F2036=1E2A360612:00788B89,0671292E25=010D192531:00784C00793989,0F29702E1F208A21=31010D1925:0006261F1E201D212322,0F2938111801=2A3606121E:00060403702C2E4C154947443D651F,0D2920=101C283404:0006522E261F20,0F712939=2632020E1A:00060724232227261F2025,520F157929382F22=31010D1925:0006547677,0F5229151F201B=0E1A320226:00061A161718110F292A0C26271F212A79700102212F49,470D=0814202C38:002876396577261F20,5283290F37=212D390915:0028397976771E232227,0F522E47442027=121E2A3606:006389,8822=101C280434:007B7C3989,881E=1830000C24:007B343589,8805=2E3A0A1622:00021719792B155D5466774962,010611180F292030=14202C3808:00020370454F0D3933192C2E2D156375261F202322,0F7123=0E1A260232:0002070818111A16175B153E445D5452848365647576,2038454F15=182430000C:0007385476771548,52061F2024=2D39091521:0007504089,0F29157030=15212D3909:0007504089,060F71702F2918=15212D3909:0007504089,880B=17232F0B3B:000770171989,0F2E20382F=0B17232F3B:00077089,522E1F8A202C=07131F2B37:000704036939487C4466,0F7011293821=1824000C30:000715547776,521F18=0E2632021A:0007030401021811171A0F2E2322271F1E706749528483,202F293800=0F1B330327:00077663,0F297138202C=0B17232F3B:000776776548,0F1118152E1F2017=121E2A3606:00077665776489,52830F208A14=1A2632020E:00077B7C4834353989,2952203B=2632020E1A:00076A386563,0F7D8A2066454F52754C15=1E2A360612:00076A0F3874485040,06707C2509=3606121E2A:00076A74504089,5229702C7D15=14202C3808:00076A74173926271F1E20,0F7029522B09=000C182430:00076A54196348767765,7920297115528A0D382B16=101C283404:000734357B7C3989,0F528329200C=06121E2A36:0007343589,290F7104=2E3A0A1622:0007343589,0F292F702012=182430000C:0007343589,0F71296B708003=15212D3909:0007343589,7129706300=0D19310125:0007010618111A332D302F15262322271E530270164C,560F712924=0E1A263202:000701020618111A175284835407230C7027,262038292C=111D293505:0007711F204840,010F29153814=17232F3B0B:00076527262322,1552835A201D0F382D=0D19253101:0007363F8B3989,09292C208A0F28=030F1B2733:000739483F66,0F208A2B0A=04101C2834:0007397B7C343589,0106522008=020E1A2632:0007396A48343589,0F203A=283404101C:00073934357B7C89,0F5223=3505111D29:000739343589,032010=0A16222E3A:000739343589,520F2F=111D293505:000739343589,8A200A=15212D0939:00077A7089,8817=17232F3B0B:000789,8D3B=172F3B0B23:000789,8815=1B2733030F:007C343589,881B=212D390915:007C343589,8812=15212D3909:006A79190F6F2627,6B46204538290B=380814202C:006A38075040,0F630141202B454F2D=121E2A3606:006A5040077448,702B2C0F2F292E=0B17232F3B:006A583F232227261F20,0F291547031C=232F3B0B17:006A6F391974,0F2E614447702C292F71201F38521F=31010D1925:0034353989,522E1F2B=0D19253101:00343589,060F5200=2A3606121E:00343589,7129565A01=131F2B3707:00343589,883B=111D350529:00343589,8800=152D390921:000150402627,0F292F2B1E=2733030F1B:00010F17505840,565A80385283846315=101C283404:000103020611187B7C2D4E616439201E0C26,522E474429=101C283404:0001030239450D297115332C2E4C,0F542070528438632C=101C283404:000103392E54837548,19700F58157A20381F=1830000C24:00010670175B71292A152322271E,03637C2B380F=0E1A263202:0001067052842E71291F20,030F38477533=131F2B3707:0001067011185B0D332C2E2D712909262322271F200C,0F5263250C=17232F0B3B:000106040318111A170F33292A26276A201D0C7A71077C1F1E74694F,520A=0D19253101:0001060403232226380F767754,568020152D=111D293505:000106025B7571295B04032D302F382B2A0D801E20,2E1F0F0F0C=0D19253101:00010607155B5C26271E2021165D83,38470F2920=16222E3A0A:000106073018110F3329271E0C7A0D75,3826201508=0F1B273303:00010618111A16332C2E2F2D27200C07483A450D,1552843825=0E1A263202:000102261E2027,03476F700F2971382E39=15212D3909:0001027007834878,2E388A201D17=131F2B3707:00010203450D3329152C2E2F5375,0F638A6A1D8A382D=0E1A263202:000102030D70332C2E29712F534426201F1E,0F38152F=121E2A3606:0001020370450D332C2E2D152971,0F52838A201D1B=1D29350511:0001020370528384631575712D2E4E3E581F1E1D,292C2B452620803A=222E3A0A16:0001020370392F2971152B54754C,458A1F0F20462C=14202C3808:0001020370392F80712B546675201E26,1F58472E152F=16222E3A0A:000102037039714515750D33,201D381F092E0F1103=32020E1A26:000102030F7039453319152E2D2F63751F0C1E20,71290D38472C=16222E3A0A:000102035270392E2D5863,0F381D2B2921201511=131F2B3707:0001020352666A,0F7020262938172F3A=2430000C18:00010203332C2E2F1558631F,0F1920707A2971264627=05111D2935:0001020311180F702E1F7952838468332D6749443E46630C1E1D21,292B2035=1C28340410:000102031118396375664819,1D4138702080291F=232F3B0B17:000102033945332C6375201D21,0F1929710D702D=101C283404:00010203390D3329152C2B751E20,2E1F54475352458316=111D293505:0001020339161745514F2C190F1A16152E2D2F304979,8D13=17232F3B0B:00010203396A79637566201D211E,29387D71707A30=101C283404:000102033911170D3319152E2F0947442627201F,8D25=3505111D29:000102031811392E2D19528384543E4463751F20,152F1A290F0D=0E1A263202:0001020626232227201E,0F2E03801F0F=101C283404:0001020617385483,030F47202B6B1B=2733030F1B:000102060F17705283797823221E2027,2E712910=121E2A3606:000102062A397129797B7C2E1F2425,162F5D20262B=182430000C:0001020603691817452C2E2D498344,412B6A09633808=3A0A16222E:0001020603700F7B7C2E1F692D48302F565A586366240C21,2B151A292039=17232F3B0B:000102060717706A33392D2E4E674447482322271E210C,71292B4F2023=33030F1B27:0001020607036A5D397C7C2163664744,0F4E25208A08=04101C2834:000102060775261F20,71290F70150C=101C283404:00010206111803302F565A802D4E2B881F261E0C,0D0F521B=16222E3A0A:00010206090D5B7952838454685D7B7C443D77656366201F1E,030F47454F24=010D192531:000102071283542627201D210C4C78,29580F2E6352032E1F01=32020E1A26:00010275261E0C2322,6303706F0F292E1F19=0E2632021A:000102081A158483262322270C1E,700F292E1B=101C283404:00011A1615262322271F1E200C214C,472B0F1124=3707131F2B:00013974150726271F1E200C,0F06520D297170382B4507=17233B0B2F:000118111A16175B154C26271E200C232279302F5D528384547543,0F297C7A03=17232F3B0B:000118111A332C2E2D1571292A2627200C7A1979,387C02=172F3B0B23:000118111A332C2E2D1571292A23222627200C7A791970302F5D5283845456,387C454F1F=0E1A263202:0001081811171A160F1571292A26271E20396476452B0D,632E523813=15212D3909:00211D1E232289,8D16=0E2632021A:006526232227201F,8926=05111D2935:00657689,6B0F5225=16223A0A2E:00654C89,8D03=2A3606121E:006589,2970472008=15212D3909:001A170F5B332E2D7129261E203E5D,1503528306=152139092D:001A170F1379232227761926,71293833=1C28340410:001A1715838444363F261F1E200C2322,0F476B52036338=14202C3808:001A2B5448701938754C,152E20242510=0D19253101:0039504089,8D39=283404101C:003926271E20747677642322480C06,2E1F38=0F1B273303:0039262322271E201D210C0748766465776A,150F382939=202C380814:0039332C2E2D2F152B4644261F1E,0F7019382971637A31=192531010D:0039787989,1F2E2010=101C283404:0039787089,2E1F8A034F206B29=05111D2935:00398B7989,0F200C=131F2B3707:0039077426271F1E20,0F29713852832B632D=14202C3808:0039076A7426271F2048,0F79197029717A382C=0E1A263202:00397C343548,8929=3B0B17232F:003934357B7C89,0F2028=16222E0A3A:0039343589,8D34=16222E3A0A:0039343589,880B=111D293505:0039343589,8805=17233B0B2F:0039343589,882E=101C283404:0039343589,8806=17233B0B2F:00390103040618111A17332C2E262322271E157A7071302F45631F2075,807C2B=0915212D39:00396577647969271E2322,52012E1F2620612D=16222E3A0A:00391A6A15384C4943363F7448,0F0379472B6319=192531010D:00394C786F89,0F2E442035=182430000C:003989,882A=121E2A3606:003989,8816=13191F252B313701070D:003989,8801=0D19310125:003989,880D=0F1B273303:0018112C2E01040607332D292A09270C2322696870302F47023945,382052801C=101C340428:00190F153917701A48,472E1F200334=1F2B370713:00195475667689,5229152E2019=222E3A0A16:004C504089,0F5215470A=3A0A16222E:005C702C2F802B154C78,5A562E1F208A45466319=102834041C:0089,090F1538=131F2B3707:71297C790001062A710F802D,5215705D2F=0E1A263202:7100030170391959152E2D2F2B39,0F201F4F75668A3824=030F1B2733:5483846376656419786A,298030201A=2430000C18:5452838479195D00012A0D7B7C2C2E3348156366242526201E,0F71292D=07131F2B37:54528384700001020339482D301571565A363F637566,06292B201F8A29=030F1B2733:54528384036F796A153E65,7129631D=2733030F1B:5452848303152F802C2D,2E1F208A7A700F29710C7D22=33030F1B27:118384155B20272E1F21,0F03380E=0E1A263202:1179302F842627201E,0071292E1F0E=06121E2A36:11177B7C52842C2E5B1F20,060071292F0F0E=101C283404:110F70528475660D7129,012E1F20262A=101C283404:110F03706A795215636626271E,0C012F38062C292B07=020E1A2632:110F0001702C2E7129201F,52060C=0E1A263202:110F00017052792E1F1E,71290D2B2020=293505111D:110F1A6A702C2E1952838453712F6375,45201500011D=101C340428:11037B7C2E2F7129,0F52200B=0E1A263202:11000170792C2E7129,0F52201F01=111D350529:110001527B7C2E75,0F2009=04101C2834:1100010206702D804E2B2620,0F52540D00=131F2B3707:110001392E1F20,0F712932=17232F3B0B:11715452838454292C2E302D4E092A0D50407970443D,5680410023=2B3707131F:111879690001020370396A2E2D528384543E637566,0F380D580F292000=222E3A0A16:111879076A1A171523221E27207924,5229700F1D012E292B0C2F0B=06121E2A36:111817000106702C2E71292A0D33802D302F4E2B44,0F52252029=07131F2B37:11180F000704030D7C684580302F153867534775,70204119=2430000C18:11180F00012A0D70795D7B7C39332D2C2E4E4863664C,064F478A2037=1E2A360612:11180F000152548471702C2E2D4E303348492A156144474C63,8A201F38450618=202C380814:11180F000128032A0D7129302C2E302F2D802B09411F1E20,5284543824=2F3B0B1723:11180F0001020370391952845329712B632E7B7C792D2C8020,385D151E=293505111D:11180F0001020339700D29716375662E1F2620,3815568016=16222E3A0A:11180F000102587B7C5283847971302F804B2B497675,09612E1F201E=232F3B0B17:11180F00010E715229702E79692C2E2D2B15093954444C6666,2F565A806132=131F2B3707:11180F71297052838454792A0D33802D153853201F1E212627,012F56476628=3707131F2B:11180F71297000010604032A0D793969302F33802D636675,201F52565A1E18=1D29350511:11180F5C000102030D332C2E195329711563261F202322,52843A=202C380814:11180370392A0D3329712C2F156375795B5D,450C8A00382E1F20010C=3A0A16222E:11185283847975661271393D692D15565A201E262322,292F060D0C02=30000C1824:111852838470795B302F404533802D152B39201E23221D212726,0F2E1F010D2923=2D39091521:111852838453546319297115030D332B2C,060F8A2E38201F38=0D19253101:111800020D041A796933483E5347446563751F1D212026,010F09150C17=2430000C18:1118000717161A2C2E3371292B56433D6375363F,0F010347208A09=020E1A2632:111800012A0D2C705271292E201F,1538617904=30000C1824:11180001032A0D70795B2C2E302F802D4E152B33714161201F26,520958470A=000C182430:11180001020439332C2E302F2B5844477515634C1F2721,0F520D19267A2971702037=232F3B0B17:111800010206037939695483845D2D2E4E446375661F262120,0F52290D7123=31010D1925:111800010206071979697C67474475664C,0F16298A2014=182430000C:11187129705B79000106032A0D397B6F7C802D2C2B61756627261E0C1D21,0F2E15414732=192531010D:111871545283842979397B7C69152B2A0D3348295324251F1D1E26,6B00702F800C201E=1F2B370713:5D0007363F232227261E21,037C0F471F202E=0E1A263202:6526232227201F,880E=111D293505:653989,8806=131F2B3707:363F6526232227201E89,8832=1A2632020E:1A454F548384,881D=121E2A3606:1A38712975,0F201A=0E1A263202:1A162623227954,0001710F290C=0F1B273303:1A16170F13152654,3852204F32=0F1B273303:1A5D453A332C2E2F4B25262322271F201E1D21,000F704723=2F3B0B1723:3950177089,522E1F0F201A=1D29350511:39701117302F713819297566,004551152C2E201D1F34=121E2A3606:393589,881A=15212D3909:393589,882C=182430000C:393589,8825=101C283404:393589,881C=2531010D19:394089,71294709636F7C440D=0D19253101:3948007889,8D38=2430000C18:394889,8811=111D293505:394889,882A=0E1A263202:3907,8807=0D19253101:39343589,8831=101C283404:393489,8801=222E3A0A16:390050404C89,0F528329692018=131F2B3707:39006A26201F,0F520D38580629712B09=380814202C:390001022C2E302F1575804B2D261F20,0D0F0319707D5229717A15=17232F3B0B:3989,8D11=0A16222E3A:181179838454637566,0F5229012007=111D293505:18117915384C,52200E=0C18243000:1811795B032C2E302F802D4163754C27261E1D2120,010D0F29521F29=16222E0A3A:1811795B5466,01202F=192531010D:181179000607040D03302F5283844F3A45512B1533664C47,090F702E208A2B=0B17232F3B:18117900012C2E5B1F20,0F710D52291A=122A36061E:181179190E332C2E2D52637566262322271F20,8D02=0F1B273303:181117332C2E1526232227201F1E3E,38030F522922=142038082C:181170792C2F7129,52201F=121E36062A:18117001061579,71292023=121E2A3606:18117000012C2E7129,522024=3505111D29:18110F390001020370390D3329711563752E1F0C201D,38525D1A=101C283404:18110F197983842E230C271F1E7A70525463,2620291503=111D293505:1811002E1F8384,0F2022=1824000C30:181100012C2E2F1F,0F3821=142038082C:181100012C2E2F1F20,0F5229=14202C3808:181100015B3875,2E2034=15212D3909:181100012A0D2C2E2F2B2D302F4E447129841F,0F09416138200F=0814202C38:181100012A0D52842953411E20,2E1F0F47152F=131F2B3707:18110001032A0D845B7129302F791533536678,0F208A1F1D33=17232F3B0B:18115452840001712970802D2C2E302F2B2A0D78791F,0F204758610E=0F1B273303:18111A16175B3315262322271F1E201D215D838454433E363F754551,00030F290D=0C18243000:18115C0001702A2C2E2F5283847129795B6375802D154C,1F208A2407=15212D3909:88,262052830D=17232F3B0B:88,8D17=102834041C:88,8D0B=15212D0939:88,8D24=121E2A0636:88,8D09=17232F0B3B:88,8D13=111D293505:1979,3F2F2E45207D37=112935051D:1966583F6589,8831=16222E3A0A:4C4089,880C=0C18243000:4C78,297172380D2A2E0F47484112=16222E3A0A:5C0F1811790070528471291F20,2F0380512514=1C28340410:5C0001020652835B0E03804B2D4E2B752024210C06,292E565A36=1A2632020E:5C11180001027170520D298483292B15200C,03802E386333=15212D3909:89,6B34=111D293505:89,8D',

          SHEN_SHA:['无','天恩','母仓','时阳','生气','益后','青龙','灾煞','天火','四忌','八龙','复日','续世','明堂','月煞','月虚','血支','天贼','五虚','土符','归忌','血忌','月德','月恩','四相','王日','天仓','不将','要安','五合','鸣吠对','月建','小时','土府','往亡','天刑','天德','官日','吉期','玉宇','大时','大败','咸池','朱雀','守日','天巫','福德','六仪','金堂','金匮','厌对','招摇','九空','九坎','九焦','相日','宝光','天罡','死神','月刑','月害','游祸','重日','时德','民日','三合','临日','天马','时阴','鸣吠','死气','地囊','白虎','月德合','敬安','玉堂','普护','解神','小耗','天德合','月空','驿马','天后','除神','月破','大耗','五离','天牢','阴德','福生','天吏','致死','元武','阳德','天喜','天医','司命','月厌','地火','四击','大煞','大会','天愿','六合','五富','圣心','河魁','劫煞','四穷','勾陈','触水龙','八风','天赦','五墓','八专','阴错','四耗','阳错','四废','三阴','小会','阴道冲阳','单阴','孤辰','阴位','行狠','了戾','绝阴','纯阳','七鸟','岁薄','阴阳交破','阴阳俱错','阴阳击冲','逐阵','阳错阴冲','七符','天狗','九虎','成日','天符','孤阳','绝阳','纯阴','六蛇','阴神','解除','阳破阴冲'],
          DAY_SHEN_SHA:'100=010203040506,0708090A0B101=010C0D,0E0F101112131415102=16011718191A1B1C1D1E,1F20212223103=24011825261B271D1E,28292A2B104=012C2D2E2F3031,3233343536105=3738,393A3B3C3D123E106=3F404142434445,464748107=494A4B4C4D,4E108=4F5051524C4D5345,54555657109=58595345,5A5B12565C10A=5D415E5F60,616263640B6510B=0266676869,6A6B6C0A3E6D10C=1602171803041B05061E,07086E10D=24181B0C0D,0E0F1011126F13141510E=70191A1C1D,1F2021222310F=0125261B271D,28292A2B110=012C2D2E2F3031,3233343536111=49013738,393A3B3C3D123E112=4F50013F404142434445,4648113=014A4B,4E6E114=51524C4D5345,54550B5657115=0158595345,5A5B12565C116=1601185D415E5F60,61626364117=24021867681B69,6A6B3E6D118=0203040506,0708119=1B0C0D,0E0F10111213141511A=191A1B1C1D1E,1F2021222311B=4925261B271D1E,28292A11C=4F502C2D2E2F3031,323334353611D=3738,393A3B3C3D123E11E=3F404142434445,460B4811F=4A4B,4E71120=16171851524C4D5345,545556121=241858595345,5A5B12565C122=5D415E5F60,61626364123=0267681B69,6A6B3E6D124=0203041B05061E,070847125=491B0C0D,0E0F101112131415126=4F50191A1C1D1E,1F20212223127=2526271D1E,28292A2B128=2C2D2E2F3031,32333435360B129=3738,393A3B3C3D123E12A=1617183F404142434445,464812B=24184A4B,4E7212C=51524C4D53,5455565712D=0158595345,5A5B12565C12E=015D415E5F60,616263647312F=49010267681B69,6A6B3E6D130=4F500102030405061E,070874131=010C0D,0E0F101112131415726E132=191A1C1D1E,1F2021220B722375133=2526271D1E,28292A2B134=1617182C2D2E2F3031,3233343536135=24183738,393A3B3C3D126F3E136=3F4041424344,4648137=4A4B,4E72138=51524C4D5345,545576567257139=4958595345,5A5B7612565C7713A=4F505D415E5F60,6162636413B=02676869,6A6B3E6D200=1601025D60,393B28292A11090A201=0103041A1B4A,123435360B6D202=011819681B4C1D061E,3D1014203=011718252F591D0D1E,1F20213233204=012C26,3C23205=493751522D2E69,121364223E2B206=503F4005311E,6A3A5A5B207=5841440C38,4615208=431C4D45,6B4E5648209=27534B45,545507086162125620A=16666730,0E0F635720B=0241425E5F1B,6C0A0B3E5C20C=02185D1B601E,393B28292A116E20D=171803041B4A,126F3435366D20E=7019684C1D06,3D101420F=4901252F591D0D,1F2021323378210=50012C26,3C23211=013751522D2E69,121364223E2B212=013F40053145,6A3A5A5B213=015841440C38,46156E214=16431C4D5345,6B4E5648215=27534B45,545507086162120B5648216=18671B30,0E0F6357217=02171841425E5F1B,3E5C218=025D60,393B28292A11219=4903041A1B4A,123435366D21A=5019681B4C1D061E,3D101421B=252F591D0D45,1F2021323321C=2C26,3C2321D=3751522D2E69,121364223E2B21E=163F40053145,6A3A5A5B21F=5841440C38,467147150B220=18431C4D5345,6B4E5648221=171827534B45,5455070861621256222=6730,0E0F6357223=490241425E5F1B,3E5C224=50025D1B601E,393B28292A11225=03041A4A,123435366D226=19684C1D061E,3D1014227=252F591D0D1E,1F20213233228=162C26,3C23229=3751522D2E69,121364220B3E2B22A=183F40053145,6A3A5A5B22B=17185841440C38,46157222C=431C4D53,6B4E564822D=490127534B45,54550708616212567922E=5001671B30,0E0F635722F=010241425E5F,3E5C230=01025D601E,393B28292A1174231=0103041A4A,1234353647726E6D232=1619684C1D061E,3D1014233=252F591D0D1E,1F202132330B75234=182C26,3C23235=17183751522D2E69,126F1364223E2B236=3F400531,6A3A5A5B237=495841440C38,461572238=50431C4D5345,6B4E76567248239=27534B45,5455070861627612567323A=6730,0E0F635723B=0241425E5F,3E5C300=0102415E5F1A1B69,090A471457301=011B05,6A125C302=5001185D19515203042F0C1D601E,323315303=4F490118251C1D1E,3C5A5B106D304=012C2706,1F20213B710B787A305=58372668300D,6B123E306=173F402D2E45,07086423307=00,393A0E2B308=24164142444A533145,61624622567B309=674C533845,28292A4E12135630A=431B594D,5455633435364830B=021B27,3D116C0A3E30C=500218415E5F1A1B691E,146E5730D=4F49181B05,6A126F5C30E=705D19515203042F0C1D60,3233150B30F=01251C1D,3C5A5B106D310=01172C2706,1F20213B7C311=0158372668300D,6B123E312=2416013F402D2E45,0708476423313=01,393A0E0F6E2B314=4142444A533145,61624622567D315=66671B4C533845,28292A4E121356316=5018431B594D,54556334353648317=4F4902181B4B,3D113E318=02415E5F1A69,140B57319=1B05,6A125C31A=175D19515203042F0C1D601E,32331531B=251C1D1E,3C5A5B106D31C=24162C2706,1F20213B31D=58372668300D,6B123E31E=3F402D2E45,0708642331F=00,393A0E0F2B320=50184142444A533145,61624622567E321=4F4918671B4C533845,28292A4E121356322=43594D,5455633435360B48323=021B4B,3D113E324=0217415E5F1A691E,1457325=05,6A125C326=58165D19515203042F0C1D601E,323315327=251C1D1E,3C5A5B106D328=2C2706,1F20213B75329=58372668300D,6B123E32A=50183F402D2E45,0708642332B=4F4918,393A0E0F722B32C=4142444A5331,616246220B567B32D=01671B4C533845,28292A4E12135632E=011743594D,5455633435364832F=01024B,3D113E330=24160102415E5F1A691E,741457331=0105,6A12726E5C332=5D19515203042F0C1D601E,32331572333=251C1D1E,3C5A5B106D334=50182C2706,1F20213B335=4F491858372668300D,6B126F3E336=3F402D2E,0708640B23337=00,393A0E0F722B338=174142444A533145,616246762256727B73339=674C533845,28292A4E7612135633A=241643594D,5455633435364833B=024B,3D113E400=5001431B,5A5B1248401=490141425E5F2F4B,32336314402=4F01024A1D1E,396B3C130B57403=01025803044C1D1E,07085C404=01183F5D5960,0E0F10127F405=171819,1F20213E6D788075406=162526690645,28292A407=242C2D2E050D,6162343536647B408=3767680C5345,6A3A3B3D12155623409=4041441C5345,46562B40A=501B274D31,4E1140B=4951521A1B3038,5455223E40C=4F431B1E,5A5B0981120B6E4840D=41425E5F2F4B,3233631440E=02184A1D,396B3C135740F=010217185803044C1D,0708475C410=16013F585960,0E0F1012411=240119,1F20213E6D412=012526690645,28292A413=012C2D2E050D,6162343536646E7B414=503767681B0C5345,6A3A3B3D126F155623415=494041441B1C5345,46562B416=4F1B274D31,4E11710B417=51521A1B3038,54556C81223E418=18431B,5A5B1248419=171841425E5F2F4B,3233631441A=16024A1D1E,396B3C135741B=24025844044C1D1E,07085C41C=3F5D5960,0E0F101241D=19,1F20213E6D41E=50702526690645,28292A41F=492C2D2E050D,6162343536647D420=4F663767681B0C5345,6A3A3B3D12150B5623421=4041441B1C5345,46562B422=181B274D31,4E11423=171851521A3038,5455223E424=16431E,5A5B1248425=2441425E5F2F4B,32336314426=024A1D1E,396B3C1357427=025803044C1D1E,07085C428=503F5D5960,0E0F10126F429=4919,1F20213E6D42A=4F2526690645,28292A0B8242B=2C2D2E050D,616234353664727E7342C=183767681B0C53,6A3A3B3D1215562342D=0117184041441C5345,4647562B42E=1601274D31,4E1142F=240151521A3038,5455223E430=01431E,5A5B761248431=0141425E5F2F4B,32336314726E432=50024A1D1E,396B3C137257433=49025844044C1D1E,0708745C434=4F3F5D5960,0E0F10120B435=19,1F20213E6D75436=1825266906,28292A82437=17182C2D2E050D,616234353664727B73438=163767680C5345,6A3A3B3D1215567223439=244041441C5345,46562B43A=274D31,4E1143B=51521A3038,545576223E83500=012F4D31,54550708323312501=01586938,0E0F3C63502=16010241435E5F051D1E,641448503=01020C1D4B1E,6A28292A353615220B504=0117183F03041C,123457505=181927,3D103E5C506=5D25306045,1F20213B616213507=492C2667,6D508=503751522D2E530645,1256509=401B4A530D45,393A5A5B115650A=4142441A1B4C,462350B=681B59,6B4E3E2B50C=162F4D311E,5455070832330981126E50D=586938,0E0F3C0B50E=02171841435E5F051D,64144850F=0102180C1D4B,6A28292A35361522510=013F03041C,123457511=49011927,3D103E5C512=50015D25306045,1F20213B616213513=012C26671B,6E6D514=3751522D2E1B530645,126F56515=401B4A530D45,393A5A5B1156516=164142441A1B4C,467123517=6859,6B4E6C810B3E2B518=17182F4D31,54550708323312519=18586938,0E0F3C6351A=0241435E5F051D1E,64144851B=49020C1D4B1E,6A28292A3536152251C=503F03041C,12345751D=1927,3D103E5C51E=705D25306045,1F20213B61621351F=2C26671B,6D520=163751522D2E1B530645,1256521=404A530D45,393A5A5B110B56522=17184142441A1B,4623523=186859,6B4E3E2B524=2F4D311E,54550708323312525=49586938,0E0F3C63526=500241435E5F051D1E,641448527=020C1D4B1E,6A28292A35361522528=3F03041C,126F344757529=1927,3D103E5C52A=165D25306045,1F20213B616213658452B=662C2667,0B726D52C=17183751522D2E1B5306,125652D=0118404A530D45,393A5A5B115652E=014142441A4C,462352F=49016859,6B4E3E2B530=50012F4D311E,545507083233761285531=01586938,0E0F3C63726E532=0241435E5F051D1E,64147248533=020C1D4B1E,6A28292A7435361522534=163F03041C,123457535=1927,3D100B3E5C536=16185D253060,1F20213B61621378537=182C2667,726D538=3751522D2E530645,125672539=49404A530D45,393A5A5B115653A=504142441A4C,46472353B=681B59,6B4E763E2B600=241601304D,3C28292A4E1235361423601=01,54553B63342B602=0102681D311E,3D603=010241425E5F4A1D381E,64604=01183F434C,39127148605=4F49181951520304594B,61620B3E73606=50256745,5A5B102257607=172C69,1F20215C608=5D37261B05536045,6B111256609=402D2E1A1B0C5345,6B11125660A=24161B1C06,6A3A0E0F1360B=5841442F270D,3233463E60C=304D1E,3C28292A4E0981123536146E2360D=00,54553B63342B60E=0218681D31,3D60F=4F4901021841425E5F4A1D38,640B610=50013F434C,391248611=01171951520304594B,61623E612=0125671B45,5A5B102257613=012C1B69,1F20216E5C614=24165D37261B05536045,6B11126F56615=402D2E1A1B0C5345,070815566D616=1C06,6A3A0E0F1347617=5841442F270D,3233466C813E618=18304D,3C28292A4E1235361423619=4F4918,54553B63340B2B61A=5002681D311E,3D61B=021741425E5F4A1D381E,6461C=3F434C,39124861D=1951520304594B,61623E61E=24167025671B45,5A5B10225761F=2C1B69,1F20215C620=5D372605536045,6B111256621=402D2E1A0C5345,070815566D622=181B1C06,6A3A0E0F13623=4F49185841442F270D,3233460B3E624=50304D1E,3C28292A4E1235361423625=17,54553B63342B626=02681D311E,3D627=0241425E5F4A1D381E,64628=24163F434C,39126F48629=1951520304594B,61623E62A=256745,5A5B1022578662B=2C69,1F2021725C7562C=185D37261B055360,6B11125662D=4F490118402D2E1A0C5345,0708150B566D62E=50011C06,6A3A0E0F1362F=01175841442F270D,3233463E630=01304D1E,3C28292A4E761235361423631=01,54553B6334726E2B87632=241602681D311E,3D72633=0241425E5F4A1D381E,7464634=3F434C,39124748635=1951520304594B,61623E6573636=661825671B,5A5B10225786637=4F49182C69,1F20210B725C75638=505D372605536045,6B11125672639=17402D2E1A0C5345,070815566D63A=1B1C06,6A3A0E0F1363B=5841442F270D,323346763E700=0103404142445906,46701=01020D,4E14702=50015152694D1D1E,54553B23703=4901051D1E,5A5B2B1288704=4F0102415E5F0C31,6162636415705=6667681C38,6A6B3E706=4303042745,07080B48707=02304B,0E0F101112708=16171819,1F20135657709=24185825261B5345,28292A353622565C70A=025D2C2D2E2F4A60,3233893470B=374C,393A3C3D3E6D70C=503F4041424459061E,466E70D=49020D,4E1470E=4F5152694D1D,54553B70F=01051D,5A5B12132B710=0102415E5F0C31,61626364150B65711=0167681C38,6A6B3E712=162417184303041B2745,070848713=240102181B304B,0E0F1011126E714=191A1B5345,1F20215657715=5825261B5345,28292A353622565C717=49374C,393A3C3D126F473E6D718=4F3F404142445906,46719=020D,4E1471A=515269,1D1E71B=051D1E,5A5B12132B71C=16021718415E5F0C31,616263641571D=241867681B1C38,6A6B3E71E=4303041B2745,07084871F=021B30,0E0F101112720=50191A5345,1F20215657721=495825265345,28292A353622565C722=4F025D2C2D2E2F4A60,32338934723=374C,393A3C3D123E6D724=3F4041424459061E,46098A0B725=020D,4E7114726=1617185152694D1D1E,54553B23727=2418051D1E,5A5B12132B728=02415E5F0C31,616263641573729=67681B1C38,6A6B3E72A=504303042745,07084872B=4902304B,0E0F1011126F7272C=4F70191A1B,1F2021565772D=015825265345,28292A353622565C72E=01025D2C2D2E2F4A60,323389340B72F=01374C,393A3C3D6C8A123E6D730=160117183F4041424459061E,46731=240102180D,4E14726E732=5152694D1D1E,54553B767223733=051D1E,5A5B7612132B77734=5002415E5F0C31,6162636415735=4967681C38,6A6B473E736=4F4303041B27,7448737=02304B,0E0F10111272738=191A5345,1F20210B56725775739=5825265345,28292A353622565C73A=160217185D2C2D2E2F4A60,3233893473B=2418374C,393A3C3D123E6D800=50013F5D402760,6A3A5A5B22801=490102414430,466D802=014D1D061E,6B4E4714803=011D0D1E,54550708616212804=0102671B4A,0E0F6323805=41425E5F4C,8B2B806=16593145,3928292A113536807=025803041A1B38,1234130B808=181943681B695345,3D105648809=1718252F0553534B45,1F20213B32335680A=50022C260C,3C155780B=493751522D2E1C,12643E5C80C=3F5D4027601E,6A3A5A5B226E80D=02414430,466D80E=4D1D06,6B4E1480F=011D0D,5455070861621279810=16010266674A,0E0F6323811=0141425E5F1B4C,0B3E2B812=01181B593145,3928292A113536813=010217185803041A1B38,1234136E814=501943681B695345,3D105648815=49252F05534B45,1F20213B323356816=022C260C,3C1557817=3751522D2E1C,126F643E5C818=3F5D402760,6A3A5A5B22819=02414430,466D81A=164D1D061E,6B4E1481B=1D0D1E,545507086162120B6581C=0218671B4A,0E0F632381D=171841425E5F1B4C,3E2B81E=501B593145,3928292A11353681F=49025D03041A38,123413820=194368695345,3D10475648821=252F05534B45,1F20213B323356716=50025D2C2D2E2F4A60,32338934822=022C260C,3C1557823=3751522D2E1C,12643E5C824=163F5D4027601E,6A3A5A5B098A22825=02414430,46710B6D826=184D1D061E,6B4E14827=17181D0D1E,54550708616212828=5002671B4A,0E0F6323829=4941425E5F4C,3E2B82A=593145,3928292A11353682B=025803041A38,126F34137282C=701943681B6953,3D10564882D=01252F05534B45,1F2021613233567882E=1601022C260C,3C155782F=013751522D2E1C,6C8A12640B3E5C830=01183F5D4027601E,6A3A5A5B22831=01021718414430,46726E6D832=504D1D061E,6B4E761472833=491D0D1E,545507086162761273834=02674A,0E0F6323835=41425E5F4C,3E2B836=1B5931,3928292A11743536837=025803041A38,12341372838=16194368695345,3D10567248839=252F05534B45,1F20213B32330B567583A=02182C260C,3C155783B=17183751522D2E1C,12643E5C900=013F408C2E4C,0708641457901=010259,393A0E0F5C902=2416015D4142441D601E,61624635367B903=0167691D1E,28292A4E126D904=01021B054D06,5455637134220B905=580C0D,3D11153E906=17415E5F1A1B1C45,23907=4F49021B27,6A3B12472B908=501819515203042F30533145,323356909=1825533845,3C5A5B105690A=022C43,1F2021487C90B=3726684A4B,6B12133E90C=24163F402D2E4C1E,070864146E5790D=0259,393A0E0F5C90E=5D4142441D60,61624635360B7B90F=0167691D,28292A4E126D910=0102171B054D06,5455633422911=4F4901581B0C0D,3D11153E912=500118415E5F1A1B1C45,23913=0102181B27,6A3B126E2B914=19515203042F30533145,323356915=25533845,3C5A5B1056916=2416022C43,1F202148917=3726684A4B,6B126F133E918=3F402D2E4C,070864140B57919=0259,393A0E0F5C91A=175D4142441D601E,61624635367D91B=4F4966671B691D1E,28292A4E126D91C=5002181B054D06,545563342291D=18581B0C0D,3D11153E91E=415E5F1A1C45,2391F=0227,6A3B122B920=241619515203042F305331,323356921=25533845,3C5A5B1056922=022C43,1F20210B48788D923=3726684A4B,6B12133E924=173F402D2E4C1E,0708098A641457925=4F49022E,393A0E0F475C926=50185D4142441D601E,61624635367E927=18671B691D1E,28292A4E126D928=02054D06,5455633422929=580C0D,3D11153E92A=2416415E5F1A1C45,2392B=0227,6A3B126F722B92C=7019515203042F305331,32330B5692D=0125533845,3C5A5B105692E=0102162C43,1F2021487592F=4F49013726684A4B,6B6C8A12133E930=5001183F402D2E4C1E,0708641457931=01021859,393A0E0F726E5C932=5D4142441D601E,616246763536727B73933=67691D1E,28292A4E76126D934=241602054D06,5455633422935=580C0D,3D11153E936=415E5F1A1B1C,740B23937=0227,6A3B12722B938=1719515203042F30533145,32335672939=4F4925533845,3C5A5B105693A=5002182C43,1F20214893B=183726684A4B,6B12133EA00=160170182543261C,28292A48A01=240117182C2D2E274B,61623464147BA02=013F376768301D1E,6A3A3D1257A03=01584041441D1E,465CA04=015D4D60,4E1113A05=4951521A1B4A,54553E6DA06=4F501B4C0645,5A5B12A07=41425E5F2F590D,32336322A08=025345,396B3C0B5623A09=020304695345,0708562BA0A=16180531,0E0F10126FA0B=241618190C38,1F20213B3536103EA0C=2543261C1E,28292A6E48A0D=2C2D2E274B,61623464147BA0E=3F376768301D,6A3A3D124757A0F=4924584041441B1D,465CA10=4F50015D1B4D60,4E1113A11=0151521A1B4A,54553E6DA12=011B4C0645,5A5B120BA13=0141425E5F2F590D,323363226EA14=1602185345,396B3C5623A15=240217180304695345,0708562BA16=0531,0E0F1012A17=190C38,1F20213B3536153EA18=2543261C,28292A4882A19=49503F3767681B301D1E,6A3A3D1257A1A=4F503F3767681B301D1E,6A3A3D1257A1B=584041441B1D1E,465CA1C=5D1B4D60,4E1171130BA1D=51521A1B4A,54553E6DA1E=16184C0645,5A5B12A1F=24171841425E5F2F590D,32336322A20=025345,396B3C5623A21=020304695345,0708562BA22=0531,0E0F10128EA23=49190C38,1F20213B3536153E788FA24=4F502543261C1E,28292A48A25=2C2D2E274B,61623464147DA26=663F3767681B301D1E,6A3A3D120B57A27=584041441B1D1E,465CA28=16185D4D60,4E1113A29=24171851521A4A,54553E6DA2A=4C0645,5A5B7612A2B=41425E5F2F590D,3233632272A2C=0253,396B3C475623A2D=1601020304695345,0708562BA2E=4F50010531,0E0F1012A2F=01190C38,1F20213B3536153EA30=012543261C1E,28292A09900B4882A31=012C2D2E274B,6162346414726E7E73A32=16183F376768301D1E,6A3A3D126F7257A33=2417185D4041441D1E,465CA34=5D4D60,4E1113A35=51521A4A,5455763E6D83A36=4C06,5A5B12A37=4941425E5F2F590D,3233632272A38=4F50029145,396B3C567223A39=020304695345,070874562BA3A=0531,0E0F10120BA3B=190C38,1F20213B6C903536153E75B00=01701718254A31,1F20216162B01=0118582C26,674C38B02=50013F375152432D2E591D1E,121448B03=4901401B1D4B1E,393A5B11B04=014142441A69,4657B05=681B05,6B4E3E5CB06=682F0C4D6045,5455070832331215B07=1C,0E0F3C636DB08=1602415E5F27530645,3536136456B09=0230530D45,6A28292A0B56B0A=17180304,126F342223B0B=1819,3D103E2BB0C=50254A311E,1F202161626EB0D=49582C26,671B4C38B0E=3F375152432D2E591D,121448B0F=01401B1D4B,393A3B5A5B11B10=014142441A1B69,4657B11=01681B05,6B4E3E5CB12=16015D2F0C4D6045,5455070832331215B13=011C,0E0F3C630B6E6DB14=021718415E5F27530645,3536136456B15=021830530D45,6A28292A56B16=500304,12342223B17=4919,3D103E2BB18=254A31,1F4E21616278B19=582C26,671B4C38B1A=3F375152432D2E1B591D1E,121448B1B=401B1D4B1E,393A3B5A5B1147B1C=164142441A1B69,467157B1D=6805,6B4E0B3E5CB1E=17185D2F0C926045,5455070832331215B1F=181C,0E0F3C636DB20=5002415E5F27530645,3536136456B21=490230530D45,6A28292A56B22=0304,12342223B23=19,3D103E2BB24=254A311E,1F20136162B25=582C26671B4C38,00B26=163F375152432D2E1B591D1E,121448B27=401D4B1E,393A3B5A5B110BB28=17184142441A69,4657B29=186805,6B4E3E5CB2A=505D2F0C4D6045,54550708323376121585B2B=491C,0E0F3C63726DB2C=02415E5F275306,3536136456B2D=010230530D45,6A28292A56B2E=010304,12342223B2F=0119,3D103E2BB30=1601254A311E,1F2021616209906584B31=0166582C26674C38,0B726EB32=17183F375152432D2E591D1E,126F147248B33=18401D4B1E,393A3B5A5B11B34=504142441A69,4657B35=49681B05,6B4E763E5CB36=5D2F0C4D60,5455070832331215B37=1C,0E0F3C63726DB38=02415E5F27530645,353613645672B39=0230530D45,6A28292A744756B3A=160304,12342223B3B=19,3D106C900B3E2BC00=500170661825670C,5A5B1013141523C01=4F4901182C1C,1F2021222BC02=011637261B271D311E,6B1112C03=01402D2E1A1B311D381E,0708C04=0143,6A3A0E0F7148C05=41442F4B,32334635360B3EC06=24164A4D45,3C28292A4E1257C07=174C,545563345CC08=025D6859536045,3D56C09=0241425E5F5345,4764566DC0A=50186906,393B126FC0B=4F4918581951520304050D,61623EC0C=25671B0C1E,5A5B101314156E23C0D=2C1B1C,1F2021222BC0E=3F37264B1D31,6B1112C0F=01402D2E1A1B301D38,07080BC10=241601431B,6A3A0E0F48C11=011741442F4B,32334635363EC12=014A4D45,3C28292A4E1257C13=014C,545563346E5CC14=5002185D6804536045,3D56C15=4F49021841425E5F5345,64566DC16=6906,393B12C17=581951524404050D,61623EC18=25670C,5A5B101314152386C19=2C1B1C,1F2021220B2BC1A=24163F37261B271D31,6B1112C1B=17402D2E1A1B301D381E,0708C1C=43,6A3A0E0F48C1D=41582F4B,32334635363EC1E=50184A4D45,3C28292A4E1257C1F=4F49184C,545563345CC20=025D6859536045,3D56C21=0241425E5F5345,64566DC22=6906,393B12C23=581951520304050D,61620B3EC24=241625671B0C1E,5A5B1013141523C25=172C1B1C,1F2021222BC26=3F3726271D311E,6B1112C27=402D2E1A301D381E,0708C28=501843,6A5B0E0F48C29=4F491841442F4B,32334635363EC2A=4A4D45,3C28292A4E761257C2B=4C,54556334725C93C2C=025D68595360,3D56C2D=010241425E5F5345,640B566DC2E=2416016906,393B12C2F=0117581951520304050D,61623EC30=0125670C,5A5B1009901314152386C31=012C1C,1F202122726E2B75C32=50183F3726271D311E,6B11126F72C33=4F4918402D2E1A301D381E,070847C34=431B,6A3A0E0F48C35=41442F4B,3233467635363EC36=4A4D,3C28292A4E1257C37=4C,545563340B725CC38=2416025D6859536045,3D5672C39=021741425E5F5345,7464566DC3A=6906,393B12C3B=581951520304050D,61626C903E6573',
          getTimeZhiIndex:function(hm){
            if(!hm){
              return 0;
            }
            if(hm.length>5){
              hm = hm.substr(0,5);
            }
            var x = 1;
            for(var i=1;i<22;i+=2){
              if(hm>=((i<10?'0':'')+i+':00')&&hm<=((i+1<10?'0':'')+(i+1)+':59')){
                return x;
              }
              x++;
            }
            return 0;
          },
          convertTime:function(hm){
            return this.ZHI[this.getTimeZhiIndex(hm)+1];
          },
          getJiaZiIndex:function(ganZhi){
            for(var i=0,j=this.JIA_ZI.length;i<j;i++){
              if(this.JIA_ZI[i]==ganZhi){
                return i;
              }
            }
            return -1;
          },
          hex:function(n){
            var hex = n.toString(16);
            if(hex.length<2){
              hex = '0'+hex;
            }
            return hex.toUpperCase();
          },
          getDayYi:function(monthGanZhi,dayGanZhi){
            var l = [];
            var day = this.hex(this.getJiaZiIndex(dayGanZhi));
            var month = this.hex(this.getJiaZiIndex(monthGanZhi));
            var right = this.DAY_YI_JI;
            var index = right.indexOf(day+'=');
            while(index>-1) {
              right = right.substr(index+3);
              var left = right;
              if (left.indexOf('=')>-1) {
                left = left.substr(0, left.indexOf('=') - 2);
              }
              var matched = false;
              var months = left.substr(0, left.indexOf(':'));
              var i,m,j;
              for (i = 0, j = months.length; i < j; i += 2) {
                m = months.substr(i, 2);
                if (m==month) {
                  matched = true;
                  break;
                }
              }
              if(matched) {
                var ys = left.substr(left.indexOf(':') + 1);
                ys = ys.substr(0, ys.indexOf(','));
                for (i = 0, j = ys.length; i < j; i += 2) {
                  m = ys.substr(i, 2);
                  l.push(this.YI_JI[parseInt(m,16)]);
                }
                break;
              }
              index = right.indexOf(day+'=');
            }
            if(l.length<1){
              l.push('无');
            }
            return l;
          },
          getDayJi:function(monthGanZhi,dayGanZhi){
            var l = [];
            var day = this.hex(this.getJiaZiIndex(dayGanZhi));
            var month = this.hex(this.getJiaZiIndex(monthGanZhi));
            var right = this.DAY_YI_JI;
            var index = right.indexOf(day+'=');
            while(index>-1) {
              right = right.substr(index+3);
              var left = right;
              if (left.indexOf('=')>-1) {
                left = left.substr(0, left.indexOf('=') - 2);
              }
              var matched = false;
              var months = left.substr(0, left.indexOf(':'));
              var i,m,j;
              for (i = 0, j = months.length; i < j; i += 2) {
                m = months.substr(i, 2);
                if (m==month) {
                  matched = true;
                  break;
                }
              }
              if(matched) {
                var js = left.substr(left.indexOf(',')+1);
                for (i = 0, j = js.length; i < j; i += 2) {
                  m = js.substr(i, 2);
                  l.push(this.YI_JI[parseInt(m,16)]);
                }
                break;
              }
              index = right.indexOf(day+'=');
            }
            if(l.length<1){
              l.push('无');
            }
            return l;
          },
          getDayJiShen:function(lunarMonth,dayGanZhi){
            var l = [];
            var day = this.hex(this.getJiaZiIndex(dayGanZhi));
            var month = Math.abs(lunarMonth).toString(16).toUpperCase();
            var index = this.DAY_SHEN_SHA.indexOf(month+day+'=');
            if(index>-1) {
              var left = this.DAY_SHEN_SHA.substr(index + 4);
              if (left.indexOf('=')>-1) {
                left = left.substr(0, left.indexOf('=') - 3);
              }
              var js = left.substr(0, left.indexOf(','));
              for (var i = 0, j = js.length; i < j; i += 2) {
                var m = js.substr(i, 2);
                l.push(this.SHEN_SHA[parseInt(m, 16)]);
              }
            }
            if(l.length<1){
              l.push('无');
            }
            return l;
          },
          getDayXiongSha:function(lunarMonth,dayGanZhi){
            var l = [];
            var day = this.hex(this.getJiaZiIndex(dayGanZhi));
            var month = Math.abs(lunarMonth).toString(16).toUpperCase();
            var index = this.DAY_SHEN_SHA.indexOf(month+day+'=');
            if(index>-1) {
              var left = this.DAY_SHEN_SHA.substr(index + 4);
              if (left.indexOf('=')>-1) {
                left = left.substr(0, left.indexOf('=') - 3);
              }
              var xs = left.substr(left.indexOf(',')+1);
              for (var i = 0, j = xs.length; i < j; i += 2) {
                var m = xs.substr(i, 2);
                l.push(this.SHEN_SHA[parseInt(m, 16)]);
              }
            }
            if(l.length<1){
              l.push('无');
            }
            return l;
          },
          getTimeYi:function(dayGanZhi,timeGanZhi){
            var l = [];
            var day = this.hex(this.getJiaZiIndex(dayGanZhi));
            var time = this.hex(this.getJiaZiIndex(timeGanZhi));
            var index = this.TIME_YI_JI.indexOf(day+time+'=');
            if(index>-1) {
              var left = this.TIME_YI_JI.substr(index + 5);
              if (left.indexOf('=')>-1) {
                left = left.substr(0, left.indexOf('=') - 4);
              }
              var ys = left.substr(0, left.indexOf(','));
              for (var i = 0, j = ys.length; i < j; i += 2) {
                var m = ys.substr(i, 2);
                l.push(this.YI_JI[parseInt(m, 16)]);
              }
            }
            if(l.length<1){
              l.push('无');
            }
            return l;
          },
          getTimeJi:function(dayGanZhi,timeGanZhi){
            var l = [];
            var day = this.hex(this.getJiaZiIndex(dayGanZhi));
            var time = this.hex(this.getJiaZiIndex(timeGanZhi));
            var index = this.TIME_YI_JI.indexOf(day+time+'=');
            if(index>-1) {
              var left = this.TIME_YI_JI.substr(index + 5);
              if (left.indexOf('=')>-1) {
                left = left.substr(0, left.indexOf('=') - 4);
              }
              var js = left.substr(left.indexOf(',')+1);
              for (var i = 0, j = js.length; i < j; i += 2) {
                var m = js.substr(i, 2);
                l.push(this.YI_JI[parseInt(m, 16)]);
              }
            }
            if(l.length<1){
              l.push('无');
            }
            return l;
          },
          getXunIndex:function(ganZhi){
            var gan = ganZhi.substr(0,1);
            var zhi = ganZhi.substr(1);
            var ganIndex = 0;
            var zhiIndex = 0;
            var i,j;
            for(i=0,j=this.GAN.length;i<j;i++){
              if(this.GAN[i]===gan){
                ganIndex = i;
                break;
              }
            }
            for(i=0,j=this.ZHI.length;i<j;i++){
              if(this.ZHI[i]===zhi){
                zhiIndex = i;
                break;
              }
            }
            var diff = ganIndex - zhiIndex;
            if(diff<0){
              diff += 12;
            }
            return diff/2;
          },
          getXun:function(ganZhi){
            return this.XUN[this.getXunIndex(ganZhi)];
          },
          getXunKong:function(ganZhi){
            return this.XUN_KONG[this.getXunIndex(ganZhi)];
          }
        };
      })();
      var HolidayUtil = (function(_NAMES){
        var _SIZE = 18,_ZERO='0'.charCodeAt
        var _DATA_IN_USE = _DATA;
        var _padding = function(n){
          return (n<10?'0':'')+n;
        };
        var _ymd = function(s){
          return s.indexOf('-')<0?(s.substr(0,4)+'-'+s.substr(4,2)+'-'+s.substr(6)):s;
        };
        var _buildHoliday = function(day,name,work,target){
          return {
            _p:{
              day:_ymd(day),
              name:name,
              work:work,
              target:_ymd(target)
            },
            getDay:function(){
              return this._p.day;
            },
            setDay:function(v){
              this._p.day = _ymd(v);
            },
            getName:function(){
              return this._p.name;
            },
            setName:function(v){
              this._p.name = v;
            },
            isWork:function(){
              return this._p.work;
            },
            setWork:function(v){
              this._p.work = v;
            },
            getTarget:function(){
              return this._p.target;
            },
            setTarget:function(v){
              this._p.target = _ymd(v);
            },
            toString:function(){
              return this._p.day+' '+this._p.name+(this._p.work?'调休':'')+' '+this._p.target;
            }
          };
        };
        var _buildHolidayForward = function(s){
          var day = s.substr(0,8);
          var name = _NAMES_IN_USE[s.charCodeAt(8)-_ZERO];
          var work = s.charCodeAt(9)===_ZERO;
          var target = s.substr(10,8);
          return _buildHoliday(day,name,work,target);
        };
        var _buildHolidayBackward = function(s){
          var size = s.length;
          var day = s.substr(size-18,8);
          var name = _NAMES_IN_USE[s.charCodeAt(size-10)-_ZERO];
          var work = s.charCodeAt(size-9)===_ZERO;
          var target = s.substr(size-8);
          return _buildHoliday(day,name,work,target);
        };
        var _findForward = function(key){
          var start = _DATA_IN_USE.indexOf(key);
          if(start<0) {
            return null;
          }
          var right = _DATA_IN_USE.substr(start);
          var n = right.length%_SIZE;
          if(n>0){
            right = right.substr(n);
          }
          while((0!==right.indexOf(key))&&right.length>=_SIZE){
            right = right.substr(_SIZE);
          }
          return right;
        };
        var _findBackward = function(key){
          var start = _DATA_IN_USE.lastIndexOf(key);
          if(start<0) {
            return null;
          }
          var keySize = key.length;
          var left = _DATA_IN_USE.substr(0,start+keySize);
          var size = left.length;
          var n = size%_SIZE;
          if(n>0){
            left = left.substr(0,size-n);
          }
          size = left.length;
          while((size-keySize!==left.lastIndexOf(key))&&size>=_SIZE){
            left = left.substr(0,size-_SIZE);
            size = left.length;
          }
          return left;
        };
        var _findHolidaysForward = function(key){
          var l = [];
          var s = _findForward(key);
          if(null==s) {
            return l;
          }
          while(0===s.indexOf(key)){
            l.push(_buildHolidayForward(s));
            s = s.substr(_SIZE);
          }
          return l;
        };
        var _findHolidaysBackward = function(key){
          var l = [];
          var s = _findBackward(key);
          if(null==s) {
            return l;
          }
          var size = s.length;
          var keySize = key.length;
          while(size-keySize===s.lastIndexOf(key)){
            l.push(_buildHolidayBackward(s));
            s = s.substr(0,size-_SIZE);
            size = s.length;
          }
          l.reverse();
          return l;
        };
        var _getHoliday = function(args){
          var l = [];
          switch(args.length){
            case 1:
              l = _findHolidaysForward(args[0].replace(/-/g,''));
              break;
            case 3:
              l = _findHolidaysForward(args[0]+_padding(args[1])+_padding(args[2]));
              break;
          }
          return l.length<1?null:l[0];
        };
        var _getHolidays = function(args){
          var l = [];
          switch(args.length){
            case 1:
              l = _findHolidaysForward((args[0]+'').replace(/-/g,''));
              break;
            case 2:
              l = _findHolidaysForward(args[0]+_padding(args[1]));
              break;
          }
          return l;
        };
        var _getHolidaysByTarget = function(args){
          var l = [];
          switch(args.length){
            case 1:
              l = _findHolidaysBackward((args[0]+'').replace(/-/g,''));
              break;
            case 3:
              l = _findHolidaysBackward(args[0]+_padding(args[1])+_padding(args[2]));
              break;
          }
          return l;
        };
        var _fixNames = function(names){
          if(names){
            _NAMES_IN_USE = names;
          }
        };
        var _fixData = function(data){
          if(!data){
            return;
          }
          var append = [];
          while(data.length>=_SIZE){
            var segment = data.substr(0,_SIZE);
            var day = segment.substr(0,8);
            var holiday = _getHoliday([day]);
            if(!holiday){
              append.push(segment);
            }else {
              var nameIndex = -1;
              for(var i=0,j=_NAMES_IN_USE.length;i<j;i++){
                if(_NAMES_IN_USE[i]===holiday.getName()){
                  nameIndex = i;
                  break;
                }
              }
              if(nameIndex>-1){
                var old = day+String.fromCharCode(nameIndex+_ZERO)+(holiday.isWork()?'0':'1')+holiday.getTarget().replace(/-/g,'');
                _DATA_IN_USE = _DATA_IN_USE.replace(new RegExp(old, 'g'), segment);
              }
            }
            data = data.substr(_SIZE);
          }
          if(append.length>0){
            _DATA_IN_USE += append.join('');
          }
        };
        var _fix = function(args){
          switch(args.length){
            case 1:
              _fixData(args[0]);
              break;
            case 2:
              _fixNames(args[0]);
              _fixData(args[1]);
              break;
          }
        };
        return {
          NAMES:_NAMES,
          getHoliday:function(){return _getHoliday(arguments);},
          getHolidays:function(){return _getHolidays(arguments);},
          getHolidaysByTarget:function(){return _getHolidaysByTarget(arguments);},
          fix:function(){_fix(arguments);}
        };
      })(['元旦节','春节','清明节','劳动节','端午节','中秋节','国庆节','国庆中秋','抗战胜利日']);
      var NineStar = (function(){
        var _fromIndex=function(index){
          return {
            _p:{index:index},
            getNumber:function(){return NineStar.NUMBER[this._p.index];},
            getColor:function(){return NineStar.COLOR[this._p.index];},
            getWuXing:function(){return NineStar.WU_XING[this._p.index];},
            getPosition:function(){return NineStar.POSITION[this._p.index];},
            getPositionDesc:function(){return LunarUtil.POSITION_DESC[this.getPosition()];},
            getNameInXuanKong:function(){return NineStar.NAME_XUAN_KONG[this._p.index];},
            getNameInBeiDou:function(){return NineStar.NAME_BEI_DOU[this._p.index];},
            getNameInQiMen:function(){return NineStar.NAME_QI_MEN[this._p.index];},
            getNameInTaiYi:function(){return NineStar.NAME_TAI_YI[this._p.index];},
            getLuckInQiMen:function(){return NineStar.LUCK_QI_MEN[this._p.index];},
            getLuckInXuanKong:function(){return NineStar.LUCK_XUAN_KONG[this._p.index];},
            getYinYangInQiMen:function(){return NineStar.YIN_YANG_QI_MEN[this._p.index];},
            getTypeInTaiYi:function(){return NineStar.TYPE_TAI_YI[this._p.index];},
            getBaMenInQiMen:function(){return NineStar.BA_MEN_QI_MEN[this._p.index];},
            getSongInTaiYi:function(){return NineStar.SONG_TAI_YI[this._p.index];},
            getIndex:function(){return this._p.index;},
            toString:function(){return this.getNumber()+this.getColor()+this.getWuXing()+this.getNameInBeiDou();},
            toFullString:function(){
              var s = this.getNumber();
              s += this.getColor();
              s += this.getWuXing();
              s += ' ';
              s += this.getPosition();
              s += '(';
              s += this.getPositionDesc();
              s += ') ';
              s += this.getNameInBeiDou();
              s += ' 玄空[';
              s += this.getNameInXuanKong();
              s += ' ';
              s += this.getLuckInXuanKong();
              s += '] 奇门[';
              s += this.getNameInQiMen();
              s += ' ';
              s += this.getLuckInQiMen();
              if(this.getBaMenInQiMen().length>0) {
                s += ' ';
                s += this.getBaMenInQiMen();
                s += '门';
              }
              s += ' ';
              s += this.getYinYangInQiMen();
              s += '] 太乙[';
              s += this.getNameInTaiYi();
              s += ' ';
              s += this.getTypeInTaiYi();
              s += ']';
              return s;
            }
          };
        };
        return {
          NUMBER:['一','二','三','四','五','六','七','八','九'],
          COLOR:['白','黒','碧','绿','黄','白','赤','白','紫'],
          WU_XING:['水','土','木','木','土','金','金','土','火'],
          POSITION:['坎','坤','震','巽','中','乾','兑','艮','离'],
          NAME_BEI_DOU:['天枢','天璇','天玑','天权','玉衡','开阳','摇光','洞明','隐元'],
          NAME_XUAN_KONG:['贪狼','巨门','禄存','文曲','廉贞','武曲','破军','左辅','右弼'],
          NAME_QI_MEN:['天蓬','天芮','天冲','天辅','天禽','天心','天柱','天任','天英'],
          BA_MEN_QI_MEN:['休','死','伤','杜','','开','惊','生','景'],
          NAME_TAI_YI:['太乙','摄提','轩辕','招摇','天符','青龙','咸池','太阴','天乙'],
          TYPE_TAI_YI:['吉神','凶神','安神','安神','凶神','吉神','凶神','吉神','吉神'],
          SONG_TAI_YI:['门中太乙明，星官号贪狼，赌彩财喜旺，婚姻大吉昌，出入无阻挡，参谒见贤良，此行三五里，黑衣别阴阳。','门前见摄提，百事必忧疑，相生犹自可，相克祸必临，死门并相会，老妇哭悲啼，求谋并吉事，尽皆不相宜，只可藏隐遁，若动伤身疾。','出入会轩辕，凡事必缠牵，相生全不美，相克更忧煎，远行多不利，博彩尽输钱，九天玄女法，句句不虚言。','招摇号木星，当之事莫行，相克行人阻，阴人口舌迎，梦寐多惊惧，屋响斧自鸣，阴阳消息理，万法弗违情。','五鬼为天符，当门阴女谋，相克无好事，行路阻中途，走失难寻觅，道逢有尼姑，此星当门值，万事有灾除。','神光跃青龙，财气喜重重，投入有酒食，赌彩最兴隆，更逢相生旺，休言克破凶，见贵安营寨，万事总吉同。','吾将为咸池，当之尽不宜，出入多不利，相克有灾情，赌彩全输尽，求财空手回，仙人真妙语，愚人莫与知，动用虚惊退，反复逆风吹。','坐临太阴星，百祸不相侵，求谋悉成就，知交有觅寻，回风归来路，恐有殃伏起，密语中记取，慎乎莫轻行。','迎来天乙星，相逢百事兴，运用和合庆，茶酒喜相迎，求谋并嫁娶，好合有天成，祸福如神验，吉凶甚分明。'],
          LUCK_XUAN_KONG:['吉','凶','凶','吉','凶','吉','凶','吉','吉'],
          LUCK_QI_MEN:['大凶','大凶','小吉','大吉','大吉','大吉','小凶','小吉','小凶'],
          YIN_YANG_QI_MEN:['阳','阴','阳','阳','阳','阴','阴','阳','阴'],
          fromIndex:function(index){return _fromIndex(index);}
        };
      })();
      var EightChar = (function(){
        var CHANG_SHENG_OFFSET = {'甲':1,'丙':10,'戊':10,'庚':7,'壬':4,'乙':6,'丁':9,'己':9,'辛':0,'癸':3};
        var _fromLunar=function(lunar){
          return {
            _p:{sect:2,lunar:lunar},
            setSect:function(sect){this._p.sect=(1==sect)?1:2;},
            getSect:function(){return this._p.sect;},
            getDayGanIndex:function(){return 2==this._p.sect?this._p.lunar.getDayGanIndexExact2():this._p.lunar.getDayGanIndexExact();},
            getDayZhiIndex:function(){return 2==this._p.sect?this._p.lunar.getDayZhiIndexExact2():this._p.lunar.getDayZhiIndexExact();},
            getYear:function(){return this._p.lunar.getYearInGanZhiExact();},
            getYearGan:function(){return this._p.lunar.getYearGanExact();},
            getYearZhi:function(){return this._p.lunar.getYearZhiExact();},
            getYearHideGan:function(){return LunarUtil.ZHI_HIDE_GAN[this.getYearZhi()];},
            getYearWuXing:function(){return LunarUtil.WU_XING_GAN[this.getYearGan()]+LunarUtil.WU_XING_ZHI[this.getYearZhi()];},
            getYearNaYin:function(){return LunarUtil.NAYIN[this.getYear()];},
            getYearShiShenGan:function(){return LunarUtil.SHI_SHEN_GAN[this.getDayGan()+this.getYearGan()];},
            getYearShiShenZhi:function(){
              var dayGan = this.getDayGan();
              var zhi = this.getYearZhi();
              var hideGan = LunarUtil.ZHI_HIDE_GAN[zhi];
              var l = [];
              for(var i=0,j=hideGan.length;i<j;i++){
                l.push(LunarUtil.SHI_SHEN_ZHI[dayGan+zhi+hideGan[i]]);
              }
              return l;
            },
            _getDiShi:function(zhiIndex){
              var offset = CHANG_SHENG_OFFSET[this.getDayGan()];
              var index = offset + (this.getDayGanIndex()%2==0?zhiIndex:-zhiIndex);
              if(index>=12){
                index -= 12;
              }
              if(index<0){
                index += 12;
              }
              return EightChar.CHANG_SHENG[index];
            },
            getYearDiShi:function(){return this._getDiShi(this._p.lunar.getYearZhiIndexExact());},
            getYearXun:function(){return this._p.lunar.getYearXunExact()},
            getYearXunKong:function(){return this._p.lunar.getYearXunKongExact()},
            getMonth:function(){return this._p.lunar.getMonthInGanZhiExact();},
            getMonthGan:function(){return this._p.lunar.getMonthGanExact();},
            getMonthZhi:function(){return this._p.lunar.getMonthZhiExact();},
            getMonthHideGan:function(){return LunarUtil.ZHI_HIDE_GAN[this.getMonthZhi()];},
            getMonthWuXing:function(){return LunarUtil.WU_XING_GAN[this.getMonthGan()]+LunarUtil.WU_XING_ZHI[this.getMonthZhi()];},
            getMonthNaYin:function(){return LunarUtil.NAYIN[this.getMonth()];},
            getMonthShiShenGan:function(){return LunarUtil.SHI_SHEN_GAN[this.getDayGan()+this.getMonthGan()];},
            getMonthShiShenZhi:function(){
              var dayGan = this.getDayGan();
              var zhi = this.getMonthZhi();
              var hideGan = LunarUtil.ZHI_HIDE_GAN[zhi];
              var l = [];
              for(var i=0,j=hideGan.length;i<j;i++){
                l.push(LunarUtil.SHI_SHEN_ZHI[dayGan+zhi+hideGan[i]]);
              }
              return l;
            },
            getMonthDiShi:function(){return this._getDiShi(this._p.lunar.getMonthZhiIndexExact());},
            getMonthXun:function(){return this._p.lunar.getMonthXunExact()},
            getMonthXunKong:function(){return this._p.lunar.getMonthXunKongExact()},
            getDay:function(){return 2==this._p.sect?this._p.lunar.getDayInGanZhiExact2():this._p.lunar.getDayInGanZhiExact();},
            getDayGan:function(){return 2==this._p.sect?this._p.lunar.getDayGanExact2():this._p.lunar.getDayGanExact();},
            getDayZhi:function(){return 2==this._p.sect?this._p.lunar.getDayZhiExact2():this._p.lunar.getDayZhiExact();},
            getDayHideGan:function(){return LunarUtil.ZHI_HIDE_GAN[this.getDayZhi()];},
            getDayWuXing:function(){return LunarUtil.WU_XING_GAN[this.getDayGan()]+LunarUtil.WU_XING_ZHI[this.getDayZhi()];},
            getDayNaYin:function(){return LunarUtil.NAYIN[this.getDay()];},
            getDayShiShenGan:function(){return '日主';},
            getDayShiShenZhi:function(){
              var dayGan = this.getDayGan();
              var zhi = this.getDayZhi();
              var hideGan = LunarUtil.ZHI_HIDE_GAN[zhi];
              var l = [];
              for(var i=0,j=hideGan.length;i<j;i++){
                l.push(LunarUtil.SHI_SHEN_ZHI[dayGan+zhi+hideGan[i]]);
              }
              return l;
            },
            getDayDiShi:function(){return this._getDiShi(this.getDayZhiIndex());},
            getDayXun:function(){return 2==this._p.sect?this._p.lunar.getDayXunExact2():this._p.lunar.getDayXunExact()},
            getDayXunKong:function(){return 2==this._p.sect?this._p.lunar.getDayXunKongExact2():this._p.lunar.getDayXunKongExact()},
            getTime:function(){return this._p.lunar.getTimeInGanZhi();},
            getTimeGan:function(){return this._p.lunar.getTimeGan();},
            getTimeZhi:function(){return this._p.lunar.getTimeZhi();},
            getTimeHideGan:function(){return LunarUtil.ZHI_HIDE_GAN[this.getTimeZhi()];},
            getTimeWuXing:function(){return LunarUtil.WU_XING_GAN[this.getTimeGan()]+LunarUtil.WU_XING_ZHI[this.getTimeZhi()];},
            getTimeNaYin:function(){return LunarUtil.NAYIN[this.getTime()];},
            getTimeShiShenGan:function(){return LunarUtil.SHI_SHEN_GAN[this.getDayGan()+this.getTimeGan()];},
            getTimeShiShenZhi:function(){
              var dayGan = this.getDayGan();
              var zhi = this.getTimeZhi();
              var hideGan = LunarUtil.ZHI_HIDE_GAN[zhi];
              var l = [];
              for(var i=0,j=hideGan.length;i<j;i++){
                l.push(LunarUtil.SHI_SHEN_ZHI[dayGan+zhi+hideGan[i]]);
              }
              return l;
            },
            getTimeDiShi:function(){return this._getDiShi(this._p.lunar.getTimeZhiIndex());},
            getTimeXun:function(){return this._p.lunar.getTimeXun();},
            getTimeXunKong:function(){return this._p.lunar.getTimeXunKong();},
            getTaiYuan:function(){
              var ganIndex = this._p.lunar.getMonthGanIndexExact() + 1;
              if(ganIndex>=10){
                ganIndex -= 10;
              }
              var zhiIndex = this._p.lunar.getMonthZhiIndexExact() + 3;
              if(zhiIndex>=12){
                zhiIndex -= 12;
              }
              return LunarUtil.GAN[ganIndex+1]+LunarUtil.ZHI[zhiIndex+1];
            },
            getTaiYuanNaYin:function(){return LunarUtil.NAYIN[this.getTaiYuan()];},
            getMingGong:function(){
              var monthZhiIndex = 0;
              var timeZhiIndex = 0;
              for(var i=0,j=EightChar.MONTH_ZHI.length;i<j;i++){
                var zhi = EightChar.MONTH_ZHI[i];
                if(lunar.getMonthZhiExact()===zhi){
                  monthZhiIndex = i;
                }
                if(lunar.getTimeZhi()===zhi){
                  timeZhiIndex = i;
                }
              }
              var zhiIndex = 26 - (monthZhiIndex+timeZhiIndex);
              if(zhiIndex>12){
                zhiIndex -= 12;
              }
              var jiaZiIndex = LunarUtil.getJiaZiIndex(lunar.getMonthInGanZhiExact()) - (monthZhiIndex-zhiIndex);
              if(jiaZiIndex>=60){
                jiaZiIndex -= 60;
              }
              if(jiaZiIndex<0){
                jiaZiIndex += 60;
              }
              return LunarUtil.JIA_ZI[jiaZiIndex];
            },
            getMingGongNaYin:function(){return LunarUtil.NAYIN[this.getMingGong()];},
            getShenGong:function(){
              var monthZhiIndex = 0;
              var timeZhiIndex = 0;
              for(var i=0,j=EightChar.MONTH_ZHI.length;i<j;i++){
                var zhi = EightChar.MONTH_ZHI[i];
                if(lunar.getMonthZhiExact()===zhi){
                  monthZhiIndex = i;
                }
                if(lunar.getTimeZhi()===zhi){
                  timeZhiIndex = i;
                }
              }
              var zhiIndex = (2 + (monthZhiIndex+timeZhiIndex))%12;
              var jiaZiIndex = LunarUtil.getJiaZiIndex(lunar.getMonthInGanZhiExact()) - (monthZhiIndex-zhiIndex);
              if(jiaZiIndex>=60){
                jiaZiIndex -= 60;
              }
              if(jiaZiIndex<0){
                jiaZiIndex += 60;
              }
              return LunarUtil.JIA_ZI[jiaZiIndex];
            },
            getShenGongNaYin:function(){return LunarUtil.NAYIN[this.getShenGong()];},
            getLunar:function(){return this._p.lunar;},
            getYun:function(gender){
              var lunar = this.getLunar();
              var yang = 0 === lunar.getYearGanIndexExact() % 2;
              var man = 1 === gender;
              var forward = (yang && man) || (!yang && !man);
              var start = (function(){
                var prev = lunar.getPrevJie();
                var next = lunar.getNextJie();
                var current = lunar.getSolar();
                var start = forward ? current : prev.getSolar();
                var end = forward ? next.getSolar() : current;
                const endTimeZhiIndex = (end.getHour() == 23) ? 11 : LunarUtil.getTimeZhiIndex(end.toYmdHms().substr(11, 5));
                const startTimeZhiIndex = (start.getHour() == 23) ? 11 : LunarUtil.getTimeZhiIndex(start.toYmdHms().substr(11, 5));
                // 时辰差
                var hourDiff = endTimeZhiIndex - startTimeZhiIndex;
                var endCalendar = ExactDate.fromYmd(end.getYear(), end.getMonth(), end.getDay());
                var startCalendar = ExactDate.fromYmd(start.getYear(), start.getMonth(), start.getDay());
                // 天数差
                var dayDiff = Math.floor((endCalendar - startCalendar) / (1000 * 3600 * 24));
                if (hourDiff < 0) {
                  hourDiff += 12;
                  dayDiff--;
                }
                var monthDiff = Math.floor(hourDiff * 10 / 30);
                var month = dayDiff * 4 + monthDiff;
                var day = hourDiff * 10 - monthDiff * 30;
                var year = Math.floor(month / 12);
                month = month - year * 12;
                return {
                  year: year,
                  month: month,
                  day: day
                };
              })();
              var buildLiuYue = function(liuNian, index){
                return {
                  _p: {
                    index: index,
                    liuNian: liuNian
                  },
                  getIndex:function(){return this._p.index;},
                  getMonthInChinese:function(){return LunarUtil.MONTH[this._p.index + 1];},
                  getGanZhi:function(){
                    var offset = 0;
                    var yearGan = liuNian.getGanZhi().substr(0, 1);
                    if ('甲'===yearGan || '己'===yearGan) {
                      offset = 2;
                    } else if ('乙'===yearGan || '庚'===yearGan) {
                      offset = 4;
                    } else if ('丙'===yearGan || '辛'===yearGan) {
                      offset = 6;
                    } else if ('丁'===yearGan || '壬'===yearGan) {
                      offset = 8;
                    }
                    var gan = LunarUtil.GAN[(this._p.index + offset) % 10 + 1];
                    var zhi = LunarUtil.ZHI[(this._p.index + LunarUtil.BASE_MONTH_ZHI_INDEX) % 12 + 1];
                    return gan + zhi;
                  },
                  getXun:function(){return LunarUtil.getXun(this.getGanZhi());},
                  getXunKong:function(){return LunarUtil.getXunKong(this.getGanZhi());}
                };
              };
              var buildLiuNian = function(daYun, index){
                return {
                  _p: {
                    year: daYun.getStartYear() + index,
                    age: daYun.getStartAge() + index,
                    index: index,
                    daYun: daYun,
                    lunar: daYun.getLunar()
                  },
                  getYear: function(){return this._p.year;},
                  getAge: function(){return this._p.age;},
                  getIndex: function(){return this._p.index;},
                  getLunar: function(){return this._p.lunar;},
                  getGanZhi: function(){
                    var offset = LunarUtil.getJiaZiIndex(this._p.lunar.getJieQiTable()['立春'].getLunar().getYearInGanZhiExact()) + this._p.index;
                    if (this._p.daYun.getIndex() > 0) {
                      offset += this._p.daYun.getStartAge() - 1;
                    }
                    offset %= LunarUtil.JIA_ZI.length;
                    return LunarUtil.JIA_ZI[offset];
                  },
                  getXun:function(){return LunarUtil.getXun(this.getGanZhi());},
                  getXunKong:function(){return LunarUtil.getXunKong(this.getGanZhi());},
                  getLiuYue: function(){
                    var l = [];
                    for (var i = 0; i < 12; i++) {
                      l.push(buildLiuYue(this,i));
                    }
                    return l;
                  }
                };
              };
              var buildXiaoYun = function(daYun, index, forward){
                return {
                  _p: {
                    year: daYun.getStartYear() + index,
                    age: daYun.getStartAge() + index,
                    index: index,
                    daYun: daYun,
                    forward: forward,
                    lunar: daYun.getLunar()
                  },
                  getYear: function(){return this._p.year;},
                  getAge: function(){return this._p.age;},
                  getIndex: function(){return this._p.index;},
                  getGanZhi: function(){
                    var offset = LunarUtil.getJiaZiIndex(this._p.lunar.getTimeInGanZhi());
                    var add = this._p.index + 1;
                    if (this._p.daYun.getIndex() > 0) {
                      add += this._p.daYun.getStartAge() - 1;
                    }
                    offset += this._p.forward ? add : -add;
                    var size = LunarUtil.JIA_ZI.length;
                    while (offset < 0) {
                      offset += size;
                    }
                    offset %= size;
                    return LunarUtil.JIA_ZI[offset];
                  },
                  getXun:function(){return LunarUtil.getXun(this.getGanZhi());},
                  getXunKong:function(){return LunarUtil.getXunKong(this.getGanZhi());}
                };
              };
              var buildDaYun = function(yun, index){
                var birthYear = yun.getLunar().getSolar().getYear();
                var year = yun.getStartSolar().getYear();
                var startYear,startAge,endYear,endAge;
                if (index < 1) {
                  startYear = birthYear;
                  startAge = 1;
                  endYear = year - 1;
                  endAge = year - birthYear;
                } else {
                  var add = (index - 1) * 10;
                  startYear = year + add;
                  startAge = startYear - birthYear + 1;
                  endYear = startYear + 9;
                  endAge = startAge + 9;
                }
                return {
                  _p: {
                    startYear: startYear,
                    endYear: endYear,
                    startAge: startAge,
                    endAge: endAge,
                    index: index,
                    yun: yun,
                    lunar: yun.getLunar()
                  },
                  getStartYear: function(){return this._p.startYear;},
                  getEndYear: function(){return this._p.endYear;},
                  getStartAge: function(){return this._p.startAge;},
                  getEndAge: function(){return this._p.endAge;},
                  getIndex: function(){return this._p.index;},
                  getLunar: function(){return this._p.lunar;},
                  getGanZhi: function(){
                    if (this._p.index < 1) {
                      return '';
                    }
                    var offset = LunarUtil.getJiaZiIndex(this._p.lunar.getMonthInGanZhiExact());
                    offset += this._p.yun.isForward() ? this._p.index : -this._p.index;
                    var size = LunarUtil.JIA_ZI.length;
                    if (offset >= size) {
                      offset -= size;
                    }
                    if (offset < 0) {
                      offset += size;
                    }
                    return LunarUtil.JIA_ZI[offset];
                  },
                  getXun:function(){return LunarUtil.getXun(this.getGanZhi());},
                  getXunKong:function(){return LunarUtil.getXunKong(this.getGanZhi());},
                  getLiuNian: function(n){
                    if (!n) {
                      n = 10;
                    }
                    if (this._p.index < 1) {
                      n = this._p.endYear-this._p.startYear+1;
                    }
                    var l = [];
                    for (var i = 0; i < n; i++) {
                      l.push(buildLiuNian(this,i));
                    }
                    return l;
                  },
                  getXiaoYun: function(n){
                    if (!n) {
                      n = 10;
                    }
                    if (this._p.index < 1) {
                      n = this._p.endYear-this._p.startYear+1;
                    }
                    var l = [];
                    for (var i = 0; i < n; i++) {
                      l.push(buildXiaoYun(this,i,this._p.yun.isForward()));
                    }
                    return l;
                  }
                };
              };
              return {
                _p: {
                  gender: gender,
                  startYear: start.year,
                  startMonth: start.month,
                  startDay: start.day,
                  forward: forward,
                  lunar: lunar
                },
                getGender: function(){return this._p.gender;},
                getStartYear: function(){return this._p.startYear;},
                getStartMonth: function(){return this._p.startMonth;},
                getStartDay: function(){return this._p.startDay;},
                isForward: function(){return this._p.forward;},
                getLunar: function(){return this._p.lunar;},
                getStartSolar: function(){
                  var birth = this._p.lunar.getSolar();
                  var c = birth.getCalendar();
                  c.setFullYear(birth.getYear() + this._p.startYear);
                  c.setMonth(birth.getMonth()-1+this._p.startMonth);
                  c.setDate(birth.getDay() + this._p.startDay);
                  return Solar.fromDate(c);
                },
                getDaYun: function(n){
                  if (!n) {
                    n = 10;
                  }
                  var l = [];
                  for (var i = 0; i < n; i++) {
                    l.push(buildDaYun(this,i));
                  }
                  return l;
                }
              };
            },
            toString:function(){return this.getYear()+' '+this.getMonth()+' '+this.getDay()+' '+this.getTime();}
          };
        };
        return {
          MONTH_ZHI:['','寅','卯','辰','巳','午','未','申','酉','戌','亥','子','丑'],
          CHANG_SHENG:['长生','沐浴','冠带','临官','帝旺','衰','病','死','墓','绝','胎','养'],
          fromLunar:function(lunar){return _fromLunar(lunar);}
        };
      })();
      var LunarTime = (function(){
        var _fromYmdHms=function(lunarYear,lunarMonth,lunarDay,hour,minute,second){
          var lunar=Lunar.fromYmdHms(lunarYear,lunarMonth,lunarDay,hour,minute,second);
          var zhiIndex=LunarUtil.getTimeZhiIndex([(hour<10?'0':'')+hour,(minute<10?'0':'')+minute].join(':'));
          var ganIndex = (lunar.getDayGanIndexExact() % 5 * 2 + zhiIndex) % 10;
          return {
            _p:{
              ganIndex:ganIndex,
              zhiIndex:zhiIndex,
              lunar:lunar
            },
            getGanIndex:function(){return this._p.ganIndex;},
            getZhiIndex:function(){return this._p.zhiIndex;},
            getGan:function(){return LunarUtil.GAN[this._p.ganIndex+1];},
            getZhi:function(){return LunarUtil.ZHI[this._p.zhiIndex+1];},
            getGanZhi:function(){return this.getGan()+this.getZhi();},
            getShengXiao:function(){return LunarUtil.SHENGXIAO[this._p.zhiIndex+1];},
            getPositionXi:function(){return LunarUtil.POSITION_XI[this._p.ganIndex + 1];},
            getPositionXiDesc:function(){return LunarUtil.POSITION_DESC[this.getPositionXi()];},
            getPositionYangGui:function(){return LunarUtil.POSITION_YANG_GUI[this._p.ganIndex + 1];},
            getPositionYangGuiDesc:function(){return LunarUtil.POSITION_DESC[this.getPositionYangGui()];},
            getPositionYinGui:function(){return LunarUtil.POSITION_YIN_GUI[this._p.ganIndex + 1];},
            getPositionYinGuiDesc:function(){return LunarUtil.POSITION_DESC[this.getPositionYinGui()];},
            getPositionFu:function(){return LunarUtil.POSITION_FU[this._p.ganIndex + 1];},
            getPositionFuDesc:function(){return LunarUtil.POSITION_DESC[this.getPositionFu()];},
            getPositionCai:function(){return LunarUtil.POSITION_CAI[this._p.ganIndex + 1];},
            getPositionCaiDesc:function(){return LunarUtil.POSITION_DESC[this.getPositionCai()];},
            getNaYin:function(){return LunarUtil.NAYIN[this.getGanZhi()];},
            getTianShen:function(){
              return LunarUtil.TIAN_SHEN[(this._p.zhiIndex + LunarUtil.ZHI_TIAN_SHEN_OFFSET[this._p.lunar.getDayZhiExact()]) % 12 + 1];
            },
            getTianShenType:function(){return LunarUtil.TIAN_SHEN_TYPE[this.getTianShen()];},
            getTianShenLuck:function(){return LunarUtil.TIAN_SHEN_TYPE_LUCK[this.getTianShenType()];},
            getChong:function(){return LunarUtil.CHONG[this.getZhi()];},
            getSha:function(){return LunarUtil.SHA[this.getZhi()];},
            getChongShengXiao:function(){
              var chong = this.getChong();
              for (var i = 0, j = LunarUtil.ZHI.length; i < j; i++) {
                if (LunarUtil.ZHI[i]===chong) {
                  return LunarUtil.SHENGXIAO[i];
                }
              }
              return '';
            },
            getChongDesc:function(){return '(' + this.getChongGan() + this.getChong() + ')' + this.getChongShengXiao();},
            getChongGan:function(){return LunarUtil.CHONG_GAN[this.getGan()];},
            getChongGanTie:function(){return LunarUtil.CHONG_GAN_TIE[this.getGan()];},
            getYi:function(){return LunarUtil.getTimeYi(this._p.lunar.getDayInGanZhiExact(), this.getGanZhi());},
            getJi:function(){return LunarUtil.getTimeJi(this._p.lunar.getDayInGanZhiExact(), this.getGanZhi());},
            getNineStar:function(){
              var solarYmd = this._p.lunar.getSolar().toYmd();
              var jieQi = this._p.lunar.getJieQiTable();
              var asc = false;
              if (solarYmd>=jieQi['冬至'].toYmd() && solarYmd<jieQi['夏至'].toYmd()) {
                asc = true;
              }
              var start = asc ? 7 : 3;
              var dayZhi = this._p.lunar.getDayZhi();
              if ('子午卯酉'.indexOf(dayZhi)>-1) {
                start = asc ? 1 : 9;
              } else if ('辰戌丑未'.indexOf(dayZhi)>-1) {
                start = asc ? 4 : 6;
              }
              var index = asc ? start + this._p.zhiIndex - 1 : start - this._p.zhiIndex - 1;
              if (index > 8) {
                index -= 9;
              }
              if (index < 0) {
                index += 9;
              }
              return NineStar.fromIndex(index);
            },
            getXun:function(){return LunarUtil.getXun(this.getGanZhi());},
            getXunKong:function(){return LunarUtil.getXunKong(this.getGanZhi());},
            getMinHm:function(){
              var hour = this._p.lunar.getHour();
              if(hour <1){
                return '00:00';
              }else if(hour > 22){
                return '23:00';
              }
              if(hour%2===0){
                hour-=1;
              }
              return (hour<10?'0':'')+hour+':00';
            },
            getMaxHm:function(){
              var hour = this._p.lunar.getHour();
              if (hour <1){
                return '00:59';
              } else if (hour > 22) {
                return '23:59';
              }
              if(hour%2!==0){
                hour+=1;
              }
              return (hour<10?'0':'')+hour+':59';
            },
            toString:function(){return this.getGanZhi();}
          };
        };
        return  {
          fromYmdHms:function(lunarYear,lunarMonth,lunarDay,hour,minute,second){return _fromYmdHms(lunarYear,lunarMonth,lunarDay,hour,minute,second);},
        };
      })();
      return {
        ShouXingUtil:ShouXingUtil,
        SolarUtil:SolarUtil,
        LunarUtil:LunarUtil,
        Solar:Solar,
        Lunar:Lunar,
        NineStar:NineStar,
        EightChar:EightChar,
        SolarWeek:SolarWeek,
        SolarMonth:SolarMonth,
        SolarSeason:SolarSeason,
        SolarHalfYear:SolarHalfYear,
        SolarYear:SolarYear,
        LunarMonth:LunarMonth,
        LunarYear:LunarYear,
        LunarTime:LunarTime,
        HolidayUtil:HolidayUtil
      };
    });
    });

    const {Solar, Lunar, NineStar, EightChar, SolarWeek, SolarMonth, SolarSeason, SolarHalfYear, SolarYear, LunarMonth, LunarYear, LunarTime, ShouXingUtil, SolarUtil, LunarUtil, HolidayUtil} = lunar;

    var lunarJavascript = {
      Solar: Solar,
      Lunar: Lunar,
      NineStar: NineStar,
      EightChar: EightChar,
      SolarWeek: SolarWeek,
      SolarMonth: SolarMonth,
      SolarSeason: SolarSeason,
      SolarHalfYear: SolarHalfYear,
      SolarYear: SolarYear,
      LunarMonth: LunarMonth,
      LunarYear: LunarYear,
      LunarTime: LunarTime,
      ShouXingUtil: ShouXingUtil,
      SolarUtil: SolarUtil,
      LunarUtil: LunarUtil,
      HolidayUtil: HolidayUtil
    };
    var lunarJavascript_1 = lunarJavascript.Solar;
    var lunarJavascript_2 = lunarJavascript.Lunar;
    var lunarJavascript_11 = lunarJavascript.LunarYear;
    var lunarJavascript_16 = lunarJavascript.HolidayUtil;

    var Calendar = /** @class */ (function () {
        function Calendar(option) {
            this.current = [];
            this.data = [];
            this.terms = [];
            this.holidays = [];
            this.opt = {};
            this.opt = Object.assign(this.opt, option);
            this.today = format(new Date(), 'yyyy/MM/dd');
            this.initDefault();
            this.formatValue();
            this.generateJieqi();
            this.generateHoliday();
            this.mounted();
            return this;
        }
        /**
         * 获取节气信息
         */
        Calendar.prototype.generateJieqi = function () {
            if (!this.opt.lunar)
                return;
            var dft = this.dft;
            var year = getYear(new Date(dft));
            var lunarYear = lunarJavascript_11.fromYear(year);
            var jieqis = lunarYear.getJieQiJulianDays();
            var jieqi = [];
            jieqis.forEach(function (j, i) {
                var solar = lunarJavascript_1.fromJulianDay(j);
                var lunar = solar.getLunar();
                jieqi[i] = {
                    date: format(new Date(solar.getYear(), solar.getMonth(), solar.getDay()), 'yyyy/MM/dd'),
                    value: lunar.getJieQi()
                };
            });
            this.terms = jieqi;
        };
        Calendar.prototype.generateHoliday = function () {
            if (!this.opt.lunar)
                return;
            var dft = this.dft;
            var year = getYear(new Date(dft));
            var h = lunarJavascript_16.getHolidays(year);
            var holidays = [];
            h.forEach(function (h, i) {
                holidays[i] = {
                    day: h.getDay(),
                    name: h.getName(),
                    target: h.getTarget(),
                    work: h.isWork()
                };
            });
            this.holidays = holidays;
        };
        Calendar.prototype.initDefault = function () {
            var value = this.opt.value;
            var date;
            if (!value || !value.length) {
                date = new Date();
            }
            else {
                if (typeof value === 'string') {
                    date = new Date(value);
                }
                else {
                    date = new Date(value[0]);
                }
            }
            this.dft = format(date, 'yyyy/MM/dd');
        };
        Calendar.prototype.formatValue = function () {
            var value = this.opt.value;
            if (value) {
                if (typeof value === 'string') {
                    this.value = [format(new Date(value), 'yyyy/MM/dd HH:mm:ss')];
                }
                else {
                    var val_1 = [];
                    value.forEach(function (v, i) {
                        val_1[i] = format(new Date(v), 'yyyy/MM/dd HH:mm:ss');
                    });
                    this.value = val_1;
                }
            }
            else {
                this.value = [];
            }
        };
        Calendar.prototype.initTitle = function () {
            var dft = this.dft;
            var today = new Date();
            var date = new Date(dft);
            var year = getYear(date);
            var month = getMonth(date) + 1;
            var day = getDate(date);
            var week = getWeek(date);
            var space = differenceInDays(date, today);
            var w = getDay(date);
            var wn = this.names[w];
            this.title = {
                year: year,
                space: space > 0 ? space + "\u5929\u540E" : space < 0 ? -space + "\u5929\u524D" : "\u661F\u671F" + wn,
                month: month,
                day: day,
                week: week,
                value: format(date, 'yyyy年MM月')
            };
        };
        Calendar.prototype.mounted = function () {
            var type = this.opt.type;
            this.data = this["generate" + type]();
            this.initName();
            this.initTitle();
        };
        Calendar.prototype.onprev = function () {
            var date = this.opt.type === 'week' ? subWeeks(new Date(this.dft), 1) : subMonths(new Date(this.dft), 1);
            this.dft = format(date, 'yyyy/MM/dd HH:mm:ss');
            this.mounted();
            return this;
        };
        Calendar.prototype.onnext = function () {
            var date = this.opt.type === 'week' ? addWeeks(new Date(this.dft), 1) : addMonths(new Date(this.dft), 1);
            this.dft = format(date, 'yyyy/MM/dd HH:mm:ss');
            this.mounted();
            return this;
        };
        Calendar.prototype.jumpToday = function () {
            this.dft = format(new Date(), 'yyyy/MM/dd HH:mm:ss');
            this.mounted();
            return this;
        };
        Calendar.prototype.initName = function () {
            var names = ['日', '一', '二', '三', '四', '五', '六'];
            var weekStartsOn = this.opt.weekStartsOn;
            var a = names.splice(weekStartsOn);
            this.names = __spreadArray(__spreadArray([], a, true), names, true);
        };
        Calendar.prototype.generateweek = function () {
            var _this = this;
            var dft = this.dft;
            var tweek = new Date(dft);
            var weeks = [subWeeks(tweek, 1), tweek, addWeeks(tweek, 1)];
            weeks.forEach(function (week, i) {
                var ws = _this.initWeekDays(week);
                weeks[i] = {
                    data: ws,
                    week: getYear(ws[0].value) + "/" + getWeek(ws[0].value)
                };
            });
            return weeks;
        };
        Calendar.prototype.initWeekDays = function (week) {
            var _this = this;
            var weekStartsOn = this.opt.weekStartsOn;
            var weeks = [];
            var start = startOfWeek(week, {
                weekStartsOn: weekStartsOn
            });
            var end = endOfWeek(week, {
                weekStartsOn: weekStartsOn
            });
            weeks = eachDayOfInterval({ start: start, end: end });
            weeks = weeks.map(function (a) { return _this.renderDate(a, true); });
            return weeks;
        };
        Calendar.prototype.generatemonth = function () {
            var _this = this;
            var opt = this.opt;
            var direction = opt.direction, min = opt.min, max = opt.max;
            var months = [];
            if (direction === 'vertical') {
                months = eachMonthOfInterval({
                    start: new Date(min),
                    end: new Date(max)
                });
            }
            else {
                var tmonth = new Date(this.dft);
                months = [subMonths(tmonth, 1), tmonth, addMonths(tmonth, 1)];
            }
            months.forEach(function (month, index) {
                var arr = _this.initMonthDays(month);
                var cd = arr[1].data[0].value;
                months[index] = {
                    data: arr,
                    title: format(cd, 'yyyy年MM月')
                };
            });
            return months;
        };
        Calendar.prototype.initMonthDays = function (month) {
            var _this = this;
            var weekStartsOn = this.opt.weekStartsOn;
            var first = startOfMonth(month);
            var last = endOfMonth(month);
            var start = getDay(first);
            var end = getDay(last);
            var tmonths = eachDayOfInterval({
                start: first,
                end: last
            });
            var prev = [];
            var next = [];
            for (var i = 0; i < start - weekStartsOn; i++) {
                prev.push(this.renderDate(subDays(first, (start - weekStartsOn - i)), false));
            }
            var total = this.opt.direction === 'vertical' ? Math.ceil((prev.length + tmonths.length) / 7) * 7 : 42;
            var rest = total - prev.length - tmonths.length;
            for (var i = 0; i < rest; i++) {
                next.push(this.renderDate(addDays(end, i), false));
            }
            tmonths.forEach(function (date, index) {
                tmonths[index] = _this.renderDate(date, true);
            });
            var months = __spreadArray(__spreadArray(__spreadArray([], prev, true), tmonths, true), next, true);
            months = this.splitArray(months, 7);
            return months;
        };
        Calendar.prototype.splitArray = function (arr, num) {
            var result = [];
            for (var i = 0; i < arr.length; i += num) {
                var weeks = arr.slice(i, i + num);
                result.push({
                    week: getYear(weeks[0].value) + "/" + getWeek(weeks[0].value),
                    data: weeks
                });
            }
            return result;
        };
        Calendar.prototype.renderDate = function (date, isThisMonth) {
            var _a = this.opt, range = _a.range, type = _a.type;
            var year = getYear(date);
            var month = getMonth(date) + 1;
            var day = getDate(date);
            var week = getDay(date);
            var string = format(date, 'yyyy/MM/dd');
            var value = this.value;
            var varr = [];
            var isIn, first, end;
            var today = this.today === string;
            if (range) {
                var dates = value.map(function (a) { return new Date(a); });
                if (value.length === 2) {
                    isIn = isWithinInterval(date, {
                        start: min(dates),
                        end: max(dates)
                    });
                    first = isEqual(date, min(dates));
                    end = isEqual(date, max(dates));
                }
                else if (value.length === 1) {
                    first = isEqual(date, dates[0]);
                }
            }
            var active = value.findIndex(function (a) { return a.indexOf(string) >= 0; }) >= 0;
            value.forEach(function (v, i) {
                varr[i] = new Date(v);
            });
            var term;
            if (this.opt.lunar) {
                var index = this.terms.findIndex(function (a) { return string === a.date; });
                if (index >= 0) {
                    term = this.terms[index].value;
                }
            }
            var holiday = [];
            if (this.opt.lunar) {
                var d = lunarJavascript_1.fromDate(date);
                holiday = d.getFestivals();
            }
            var isRest;
            var work;
            if (this.opt.lunar) {
                var ds_1 = format(date, 'yyyy-MM-dd');
                var index = this.holidays.findIndex(function (a) { return a.day === ds_1; });
                var current = this.holidays[index];
                if (current) {
                    isRest = current.work === false;
                    work = current.work === true;
                }
            }
            var lunar = {};
            if (this.opt.lunar) {
                var d = lunarJavascript_2.fromDate(date);
                lunar['year'] = d.getYearInChinese();
                lunar['month'] = d.getMonthInChinese();
                lunar['day'] = d.getDayInChinese();
                lunar['date'] = d.getDay();
            }
            var isday = type === 'month' ? format(new Date(this.dft), 'dd') === format(date, 'dd') : format(new Date(this.dft), 'EEEEEE') === format(date, 'EEEEEE');
            if (this.opt.direction === 'vertical') {
                isday = false;
            }
            return {
                value: date,
                year: year,
                isday: isday,
                isRest: isRest,
                work: work,
                today: today,
                month: month,
                day: day,
                week: week,
                date: string,
                active: active,
                disabled: !isThisMonth,
                isIn: isIn,
                first: first,
                end: end,
                term: term,
                lunar: lunar,
                holiday: holiday
            };
        };
        return Calendar;
    }());
    var Calendar$1 = (function (option) {
        return new Calendar(option);
    });

    var VCalendar = /** @class */ (function (_super) {
        __extends(VCalendar, _super);
        function VCalendar(option) {
            var _this = _super.call(this) || this;
            _this.value = [];
            _this.weekname = ['日', '一', '二', '三', '四', '五', '六'];
            _this.isTouch = false;
            _this.opt = {
                el: '',
                type: 'month',
                direction: 'horizontal',
                min: '',
                max: '',
                weekStartsOn: 1,
                autoRow: true,
                multiple: false,
                lunar: false,
                range: false,
                head: ['title'],
                onChange: function () { },
                onClick: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.width = _this.el.offsetWidth;
            _this.opt.value = _this.opt.value ? _this.formatValue() : _this.opt.range || _this.opt.multiple ? [] : '';
            _this.initRange();
            if (_this.opt.multiple || _this.opt.range) {
                _this.opt.direction = 'vertical';
            }
            _this.mounted();
            return _this;
        }
        VCalendar.prototype.initRange = function () {
            if (this.opt.min && this.opt.max)
                return;
            var date = new Date();
            var cyear = date.getFullYear();
            this.opt.min = cyear + "/1/1";
            this.opt.max = cyear + "/12/31";
        };
        VCalendar.prototype.formatValue = function () {
            var value = this.opt.value;
            if (typeof value == 'string') {
                return format(new Date(value), 'yyyy/MM/dd');
            }
            else {
                var arr_1 = [];
                value.forEach(function (v, i) {
                    arr_1[i] = format(new Date(v), 'yyyy/MM/dd');
                });
                return arr_1;
            }
        };
        VCalendar.prototype.mounted = function () {
            this.generateData();
            this.render();
        };
        VCalendar.prototype.render = function () {
            var t = this;
            var html = tpl$J({
                t: t,
                css: css$O
            });
            var el = this.parseHtmlToDom(html);
            this.el.parentNode.replaceChild(el, this.el);
            this.el = el;
            this.content = this.el.querySelector("." + css$O['calendar-content']);
            this.months = this.content.querySelectorAll("." + css$O['calendar-month']);
            this.head = this.el.querySelector("." + css$O['calendar-head']);
            this.title = this.head.querySelector("." + css$O['calendar-title']);
            this.scrollToActive();
        };
        VCalendar.prototype.scrollToActive = function () {
            var _this = this;
            var dft = this.data.dft;
            var width = this.width;
            var direction = this.opt.direction;
            if (direction === 'vertical') {
                var ctitle_1 = format(new Date(dft), 'yyyy年MM月');
                var scroll_1 = 0;
                this.months.forEach(function (month, index) {
                    var cmonth = month;
                    var atitle = cmonth.getAttribute('title');
                    if (ctitle_1 === atitle) {
                        scroll_1 = cmonth.offsetTop - _this.content.offsetTop;
                    }
                });
                scroll_1 = this.scroll !== undefined ? this.scroll : scroll_1;
                this.content.scrollTop = scroll_1;
                this.bindScroll();
                this.content.onclick = this.onClick.bind(this);
            }
            else {
                this.content.style.transform = "translate3d(" + -width + "px, 0, 0)";
                this.bindTouch();
            }
        };
        VCalendar.prototype.bindScroll = function () {
            var _this = this;
            var months = this.months;
            months.forEach(function (month) {
                _this.bindObverse(month);
            });
            this.content.onscroll = function () {
                _this.scroll = _this.content.scrollTop;
            };
        };
        VCalendar.prototype.bindObverse = function (dom) {
            var _this = this;
            var io = new IntersectionObserver(function (entries) {
                if (entries[0] && entries[0].isIntersecting) {
                    var target = entries[0].target;
                    var title = target.getAttribute('title');
                    if (_this.title) {
                        _this.title.innerHTML = title;
                    }
                }
            }, {
                threshold: 0.8
            });
            io.observe(dom);
        };
        VCalendar.prototype.bindTouch = function () {
            var _a = this, content = _a.content, head = _a.head;
            content.ontouchstart = this.onStart.bind(this);
            content.ontouchmove = this.onMove.bind(this);
            content.ontouchend = this.onEnd.bind(this);
            content.onmousedown = this.onStart.bind(this);
            content.onmousemove = this.onMove.bind(this);
            content.onmouseup = this.onEnd.bind(this);
            head.onclick = this.onHeadClick.bind(this);
        };
        VCalendar.prototype.onToday = function () {
            this.data = this.data.jumpToday();
            this.change();
        };
        VCalendar.prototype.onType = function () {
            this.opt.type = this.opt.type === 'month' ? 'week' : 'month';
            this.mounted();
        };
        VCalendar.prototype.onHeadClick = function (e) {
            var target = e.target;
            var action = target.getAttribute('action');
            if (action) {
                this[action]();
            }
        };
        VCalendar.prototype.onStart = function (e) {
            if (this.isTouch)
                return;
            e.preventDefault();
            this.isTouch = true;
            var point = e.changedTouches ? e.changedTouches[0] : e;
            this.start = point.pageX;
            this.startTime = new Date().getTime();
            this.content.style.transition = '0s';
            this.translate = this.getTransform(this.content).translateX;
        };
        VCalendar.prototype.onMove = function (e) {
            if (!this.isTouch)
                return;
            e.preventDefault();
            var point = e.changedTouches ? e.changedTouches[0] : e;
            var current = point.pageX;
            var space = current - this.start + this.translate;
            this.content.style.transform = "translate3d(" + space + "px, 0, 0)";
        };
        VCalendar.prototype.onEnd = function (e) {
            var _this = this;
            this.isTouch = false;
            var point = e.changedTouches ? e.changedTouches[0] : e;
            var c = point.pageX;
            var et = new Date().getTime() - this.startTime;
            var space = c - this.start;
            var isChange = et < 200 && Math.abs(space) > 80 || Math.abs(space) > this.width / 3;
            var direction = space > 0 ? 'prev' : 'next';
            this.content.style.transition = '0.3s';
            var pos = isChange ? direction === 'next' ? -this.width * 2 : 0 : -this.width;
            this.content.style.transform = "translate3d(" + pos + "px, 0, 0)";
            if (isChange) {
                setTimeout(function () {
                    _this["on" + direction]();
                }, 300);
            }
            if (et < 200 && Math.abs(space) < 10) {
                this.onClick(e);
            }
        };
        VCalendar.prototype.onClick = function (e) {
            var target = e.target;
            var disabled = target.getAttribute('disabled');
            if (disabled !== null)
                return;
            var date = target.getAttribute('date');
            var _a = this.opt, multiple = _a.multiple, range = _a.range;
            if (multiple) {
                var index = this.opt.value.indexOf(date);
                if (index >= 0) {
                    this.opt.value.splice(index, 1);
                }
                else {
                    this.opt.value.unshift(date);
                }
            }
            else if (range) {
                var length = this.opt.value.length;
                if (length < 2) {
                    this.opt.value.push(date);
                }
                else if (length === 2) {
                    this.opt.value = [date];
                }
            }
            else {
                this.opt.value = date;
            }
            if (range) {
                this.opt.value = this.sortDate(this.opt.value);
            }
            this.opt.onClick(this.opt.value);
            this.mounted();
        };
        VCalendar.prototype.sortDate = function (dates) {
            if (dates.length < 2)
                return dates;
            var ds = [];
            dates.forEach(function (d, i) {
                ds[i] = new Date(d);
            });
            var d = [format(min(ds), 'yyyy/MM/dd'), format(max(ds), 'yyyy/MM/dd')];
            return d;
        };
        VCalendar.prototype.onprev = function () {
            this.data = this.data.onprev();
            this.change();
        };
        VCalendar.prototype.change = function () {
            var type = this.opt.type;
            this.render();
            this.scrollToActive();
            this.opt.onChange({
                date: this.data.dft,
                year: this.data.title.year,
                month: this.data.title.month,
                type: type === 'month' ? 'prevmonth' : 'prevweek'
            });
        };
        VCalendar.prototype.onnext = function () {
            this.data = this.data.onnext();
            this.change();
        };
        VCalendar.prototype.generateData = function () {
            this.data = Calendar$1(this.opt);
        };
        return VCalendar;
    }(Utils));
    var default_1$1t = /** @class */ (function () {
        function default_1(option) {
            return new VCalendar(option);
        }
        return default_1;
    }());

    var drawer = "v-drawer";
    var css$N = {
    	drawer: drawer,
    	"drawer-handle": "v-drawer-handle",
    	"drawer-head": "v-drawer-head",
    	"drawer-content": "v-drawer-content",
    	"drawer-head-item": "v-drawer-head-item",
    	"drawer-close": "v-drawer-close",
    	"drawer-title": "v-drawer-title",
    	"drawer-footer": "v-drawer-footer",
    	"drawer-footer-item": "v-drawer-footer-item"
    };

    var mask = "v-mask";
    var css$M = {
    	mask: mask,
    	"mask-content": "v-mask-content"
    };

    var VMask = /** @class */ (function (_super) {
        __extends(VMask, _super);
        function VMask(option) {
            var _this = _super.call(this) || this;
            _this.disabled = false;
            _this.opt = {
                clickable: true,
                background: 'rgba(0,0,0,0.5)',
                offset: 0,
                through: false,
                space: true,
                onReady: function () { },
                onDestory: function () { },
                onClick: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            if (_this.disabled)
                return _this;
            _this.page = _this.el ? _this.parents(_this.el, 'v-page') : document.body;
            _this.render();
            _this.bindClick();
            return _this;
        }
        VMask.prototype.render = function () {
            var _a = this.opt, background = _a.background, through = _a.through, placement = _a.placement;
            var el = document.createElement('div');
            el.className = css$M['mask'];
            el.setAttribute('placement', placement);
            var content = document.createElement('div');
            content.className = css$M['mask-content'];
            this.content = el.appendChild(content);
            if (this.opt.content) {
                if (typeof this.opt.content === 'string') {
                    content.innerHTML = this.opt.content;
                }
                else {
                    content.appendChild(this.opt.content);
                }
            }
            var zindex = this.getZindex();
            if (background) {
                el.style.backgroundColor = background;
            }
            el.style.zIndex = "" + (zindex + 1);
            if (through) {
                el.style.pointerEvents = 'none';
            }
            this.mask = this.page.appendChild(el);
            this.renderBackground();
            this.show();
        };
        VMask.prototype.renderBackground = function () {
            if (!this.opt.blank)
                return;
            var page = this.page;
            var _a = this.opt, background = _a.background, blank = _a.blank, offset = _a.offset, space = _a.space;
            var wpos = this.page.getBoundingClientRect();
            var pos = this.opt.el.getBoundingClientRect();
            var center = {
                left: pos.left - wpos.left,
                top: pos.top - wpos.top,
                width: pos.width,
                height: pos.height,
                right: page.offsetWidth - (pos.left - wpos.left) - pos.width,
                bottom: page.offsetHeight - (pos.top - wpos.top) - pos.height
            };
            this.center = center;
            var y = blank === 'top' ? center.top + center.height + offset : center.top - offset;
            y = Math.ceil(y);
            var style = blank === 'top' ? "linear-gradient(rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0) " + y + "px, " + background + " " + y + "px, " + background + " 100%)" : "linear-gradient(" + background + " 0%, " + background + " " + y + "px, rgba(0,0,0,0) " + y + "px, rgba(0,0,0,0) 100%)";
            if (space) {
                style = background;
            }
            if (blank === 'top') {
                var prop = !space ? 'paddingTop' : 'marginTop';
                this.mask.style[prop] = y + "px";
            }
            if (blank === 'bottom') {
                var prop = !space ? 'paddingBottom' : 'marginBottom';
                this.mask.style[prop] = this.page.offsetHeight - y + "px";
            }
            this.mask.style.background = style;
        };
        VMask.prototype.show = function () {
            var _this = this;
            this.mask.style.display = 'block';
            this.opt.onReady(this.content, this.center);
            setTimeout(function () {
                _this.mask.setAttribute('visible', '');
                _this.disabled = true;
            }, 20);
        };
        VMask.prototype.hide = function () {
            var _this = this;
            this.opt.onDestory();
            this.mask.style.transition = '0.3s';
            this.mask.removeAttribute('visible');
            this.opt.onDestory();
            setTimeout(function () {
                if (_this.mask) {
                    _this.page.removeChild(_this.mask);
                    _this.disabled = false;
                }
            }, 300);
        };
        VMask.prototype.bindClick = function () {
            var _this = this;
            this.mask.onclick = function (e) {
                var target = e.target;
                if (typeof target.className === 'string' && target.className.indexOf('mask') >= 0) {
                    if (_this.opt.clickable) {
                        _this.hide();
                    }
                    _this.opt.onClick(e.target);
                }
                // this.el.dispatchEvent(new CustomEvent("mask.click"))
            };
        };
        VMask.prototype.setColor = function (color) {
            this.mask.style.transition = '0s';
            this.mask.style.backgroundColor = "" + color;
        };
        VMask.prototype.setTime = function (time) {
            this.mask.style.transition = time + "ms";
        };
        return VMask;
    }(Utils));
    var default_1$1s = /** @class */ (function () {
        function default_1(option) {
            return new VMask(option);
        }
        return default_1;
    }());

    function tpl$I(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t, zindex) {
    var effect = t.opt.placement === 'center' ? t.opt.effect : '';
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['drawer']], [true]), false, true)+pug.attr("style", pug.style(`z-index:${zindex + 1};`), true, true)+pug.attr("placement", t.opt.placement, true, true)+pug.attr("radius", t.opt.radius, true, true)+pug.attr("type", t.opt.type, true, true)+pug.attr("orientation", t.opt.orientation, true, true)+pug.attr("effect", effect, true, true)+pug.attr("buttonstyle", t.opt.buttonStyle, true, true)+pug.attr("alone", t.opt.alone, true, true)+pug.attr("hasclose", t.opt.close, true, true)+pug.attr("areasize", t.opt.areasize, true, true)+pug.attr("stick", t.opt.stick, true, true)) + "\u003E";
    if (t.opt.swipe && t.opt.placement === 'bottom') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['drawer-handle']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E";
    }
    if (t.opt.title || t.opt.close) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['drawer-head']], [true]), false, true)) + "\u003E";
    if (t.opt.orientation !== 'bottom') {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['drawer-head-item']], [true]), false, true)+" index=\"0\" role=\"button\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.buttons[0][t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['drawer-title']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.title) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    if (t.opt.orientation !== 'bottom') {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['drawer-head-item']], [true]), false, true)+" index=\"1\" role=\"button\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.buttons[1][t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    if (t.opt.close && t.opt.orientation === 'bottom') {
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['drawer-close']], [true]), false, true)+" aria-hidden=\"true\" action=\"hide\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-close\" action=\"hide\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['drawer-content']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E";
    if (t.opt.buttons && t.opt.orientation === 'bottom') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['drawer-footer']], [true]), false, true)) + "\u003E";
    // iterate t.opt.buttons
    ;(function(){
      var $$obj = t.opt.buttons;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['drawer-footer-item']], [true]), false, true)+pug.attr("index", index, true, true)+pug.attr("key", item[t.opt.fields['key']], true, true)+" role=\"button\""+pug.attr("style", pug.style(`background-color:${item[t.opt.fields['color']]}`), true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['drawer-footer-item']], [true]), false, true)+pug.attr("index", index, true, true)+pug.attr("key", item[t.opt.fields['key']], true, true)+" role=\"button\""+pug.attr("style", pug.style(`background-color:${item[t.opt.fields['color']]}`), true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    }
    if (t.opt.swipe && t.opt.placement === 'top') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['drawer-handle']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E";
    }
    if (t.opt.swipe && t.opt.placement === 'left' || t.opt.swipe && t.opt.placement === 'right') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['drawer-handle']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined,"zindex" in locals_for_with?locals_for_with.zindex:typeof zindex!=="undefined"?zindex:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var DomRectResize = /** @class */ (function (_super) {
        __extends(DomRectResize, _super);
        function DomRectResize(option) {
            var _this = _super.call(this) || this;
            _this.start = 0;
            _this.area = 0;
            _this.offsets = 0;
            _this.isStart = false;
            _this.opt = {
                onResize: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.mounted();
            return _this;
        }
        DomRectResize.prototype.mounted = function () {
            this.init();
            this.bindEvent();
        };
        DomRectResize.prototype.init = function () {
            var placement = this.opt.placement;
            this.direction = placement === 'top' || placement === 'bottom' ? 'vertical' : 'horizontal';
            this.area = placement === 'top' || placement === 'bottom' ? this.opt.el.offsetHeight : this.opt.el.offsetWidth;
        };
        DomRectResize.prototype.bindEvent = function () {
            var handle = this.opt.handle;
            handle.ontouchstart = this.onStart.bind(this);
            handle.ontouchmove = this.onMove.bind(this);
            handle.ontouchend = this.onEnd.bind(this);
            handle.onmousedown = this.onStart.bind(this);
            handle.onmousemove = this.onMove.bind(this);
            handle.onmouseup = this.onEnd.bind(this);
        };
        DomRectResize.prototype.onStart = function (e) {
            var direction = this.direction;
            if (this.isStart)
                return;
            this.isStart = true;
            var point = e.changedTouches ? e.changedTouches[0] : e;
            this.start = direction === 'vertical' ? point.pageY : point.pageX;
            this.opt.el.style.transition = '0s';
        };
        DomRectResize.prototype.onMove = function (e) {
            var _a = this, direction = _a.direction, start = _a.start;
            if (!this.isStart)
                return;
            var point = e.changedTouches ? e.changedTouches[0] : e;
            var cstart = direction === 'vertical' ? point.pageY : point.pageX;
            this.space = cstart - start;
            this.renderPosition();
        };
        DomRectResize.prototype.onEnd = function (e) {
            var _this = this;
            this.isStart = false;
            var _a = this, space = _a.space, opt = _a.opt, area = _a.area;
            var placement = opt.placement, el = opt.el;
            el.style.transition = '0.3s';
            // 上下
            if (space < 0 && placement === 'top' || space > 0 && placement === 'bottom') {
                if (Math.abs(space) > area / 3) {
                    var p = placement === 'top' ? '-100%' : '100%';
                    el.style.transform = "translate3d(0, " + p + ", 0)";
                    setTimeout(function () {
                        _this.opt.onHide();
                    }, 300);
                }
                else {
                    el.style.transform = "translate3d(0, 0, 0)";
                }
            }
            // 左右
            if (space < 0 && placement === 'left' || space > 0 && placement === 'right') {
                if (Math.abs(space) > area / 4) {
                    var p = placement === 'left' ? '-100%' : '100%';
                    el.style.transform = "translate3d(" + p + ", 0, 0)";
                    setTimeout(function () {
                        _this.opt.onHide();
                    }, 300);
                }
                else {
                    el.style.transform = "translate3d(0, 0, 0)";
                }
            }
        };
        DomRectResize.prototype.renderPosition = function () {
            var _a = this, opt = _a.opt, space = _a.space;
            var placement = opt.placement, el = opt.el;
            // 上下
            if (space < 0 && placement === 'top' || space > 0 && placement === 'bottom') {
                var translate = this.offsets + space;
                el.style.transform = "translate3d(0, " + translate + "px, 0)";
                var scale = 1 - Math.abs(translate) / this.area;
                this.opt.onTranslate(scale);
            }
            // 左右
            if (space < 0 && placement === 'left' || space > 0 && placement === 'right') {
                var translate = this.offsets + space;
                el.style.transform = "translate3d(" + translate + "px, 0, 0)";
                var scale = 1 - Math.abs(translate) / this.area;
                this.opt.onTranslate(scale);
            }
        };
        return DomRectResize;
    }(Utils));
    var default_1$1r = /** @class */ (function () {
        function default_1(option) {
            return new DomRectResize(option);
        }
        return default_1;
    }());

    var VDrawer = /** @class */ (function (_super) {
        __extends(VDrawer, _super);
        function VDrawer(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                title: '',
                placement: 'bottom',
                radius: 'conner',
                swiper: true,
                content: '',
                origin: false,
                pressing: false,
                offset: 10,
                alone: false,
                effect: '',
                swipe: false,
                buttons: [{ name: '取消', key: 'cancel' }, { name: '确定', key: 'confirm' }],
                mask: 'rgba(0,0,0,0.5)',
                clickable: true,
                type: '',
                close: false,
                stick: false,
                orientation: 'bottom',
                fields: {
                    name: 'name',
                    key: 'key',
                    color: 'color'
                },
                onReady: function () { },
                onDestory: function () { },
                onButtonClick: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            if (_this.opt.pressing) {
                _this.opt.mask = 'rgba(0,0,0,0)';
            }
            _this.render();
            return _this;
        }
        /**
         * 渲染主体，依赖mask。
         */
        VDrawer.prototype.render = function () {
            var _this = this;
            var _a = this.opt, placement = _a.placement, content = _a.content, origin = _a.origin, offset = _a.offset, areasize = _a.areasize, clickable = _a.clickable;
            this.mask = new default_1$1s({
                el: this.opt.el,
                clickable: false,
                offset: offset,
                blank: origin ? placement : '',
                placement: placement,
                background: this.opt.mask,
                space: true,
                onReady: function (dom, center) {
                    var t = _this;
                    _this.center = center;
                    var zindex = _this.getZindex();
                    var html = tpl$I({
                        css: css$N,
                        t: t,
                        zindex: zindex
                    });
                    var el = _this.parseHtmlToDom(html);
                    _this.drawer = dom.appendChild(el);
                    _this.content = _this.drawer.querySelector("." + css$N['drawer-content']);
                    if (areasize) {
                        var prop = placement === 'top' || placement === 'bottom' ? 'height' : 'width';
                        _this.drawer.style[prop] = typeof areasize === 'string' ? "" + areasize : areasize + "px";
                    }
                    if (content) {
                        typeof content === 'string' ? _this.content.innerHTML = content : _this.content.appendChild(content);
                    }
                    _this.buttons = _this.drawer.querySelectorAll("." + css$N[_this.opt.orientation === 'bottom' ? 'drawer-footer-item' : 'drawer-head-item']);
                    _this.close = _this.drawer.querySelector("." + css$N['drawer-close']);
                },
                onClick: function () {
                    if (clickable) {
                        _this.mask.setTime(300);
                        _this.hide();
                    }
                }
            });
            this.show();
        };
        /**
         * 打开
         */
        VDrawer.prototype.show = function () {
            var _this = this;
            this.drawer.style.display = 'flex';
            setTimeout(function () {
                _this.drawer.style.transition = '0.3s';
                _this.drawer.setAttribute('visible', '');
                _this.opt.onReady(_this.content);
                _this.drawer.dispatchEvent(new CustomEvent("drawer.ready", {
                    detail: _this.content
                }));
                _this.renderElPosition();
                _this.bindClickEvent();
                _this.bindResize();
            }, 20);
        };
        /**
         * 关闭
         */
        VDrawer.prototype.hide = function () {
            this.drawer.removeAttribute('visible');
            var d = this.opt.placement === 'top' || this.opt.placement === 'left';
            if (this.opt.swipe) {
                var p = d ? '-100%' : '100%';
                var m = this.opt.placement === 'top' || this.opt.placement === 'bottom';
                this.drawer.style.transform = m ? "translate3d(0, " + p + ", 0)" : "translate3d(" + p + ", 0, 0)";
            }
            this.mask.hide();
            this.opt.onDestory();
            this.drawer.dispatchEvent(new CustomEvent("drawer.destory"));
            if (this.opt.pressing && this.opt.placement === 'bottom') {
                this.mask.page.style.paddingBottom = 0 + "px";
            }
        };
        /**
         * 绑定点击事件，主要处理按钮的点击。
         */
        VDrawer.prototype.bindClickEvent = function () {
            var _this = this;
            if (this.close) {
                this.close.onclick = function () {
                    _this.hide();
                };
            }
            if (!this.buttons)
                return;
            this.buttons.forEach(function (button, index) {
                var cbutton = button;
                cbutton.onclick = function () {
                    _this.opt.onButtonClick(_this.opt.buttons[index]);
                    if (_this.opt.clickable) {
                        _this.hide();
                    }
                };
            });
        };
        /**
         * 挤压模式自动定位到当前元素，主要用于模拟键盘。
         */
        VDrawer.prototype.renderElPosition = function () {
            if (this.opt.pressing && this.opt.placement === 'bottom') {
                var height = this.content.offsetHeight;
                var page = this.mask.page;
                console.log(this.content, page);
                page.style.paddingBottom = height + "px";
                this.scrollIntoView(this.opt.el, height);
            }
        };
        VDrawer.prototype.bindResize = function () {
            var _this = this;
            var drawer = this.drawer;
            var placement = this.opt.placement;
            var handle = drawer.querySelector("." + css$N['drawer-handle']);
            if (handle) {
                new default_1$1r({
                    el: drawer,
                    handle: handle,
                    placement: placement,
                    onTranslate: function (scale) {
                        var arr = _this.opt.mask.split(',');
                        var opacity = parseFloat(arr[arr.length - 1]);
                        var rgba = "rgba(0, 0, 0, " + opacity * scale + ")";
                        _this.mask.setColor(rgba);
                    },
                    onHide: function () {
                        _this.mask.hide();
                    }
                });
            }
        };
        return VDrawer;
    }(Utils));
    var default_1$1q = /** @class */ (function () {
        function default_1(option) {
            return new VDrawer(option);
        }
        return default_1;
    }());

    var date = "v-date";
    var css$L = {
    	date: date,
    	"date-core": "v-date-core"
    };

    function tpl$H(locals) {var pug_html = "";var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['date']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['date-core']], [true]), false, true)+" name=\"日期\"") + "\u003E\u003C\u002Fdiv\u003E";
    if (t.opt.type === 'datetime') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['date-core']], [true]), false, true)+" name=\"时间\"") + "\u003E\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VDate = /** @class */ (function (_super) {
        __extends(VDate, _super);
        function VDate(option) {
            var _this = _super.call(this) || this;
            _this.value = [];
            _this.picker = [];
            _this.opt = {
                el: '',
                multiple: false,
                range: false,
                type: 'date',
                shape: 'calendar',
                renderdom: '.v-text',
                separate: '至',
                title: '请选择日期',
                min: '2021/1/1',
                radius: 'conner',
                format: 'yyyy年MM月dd日',
                max: '2021/12/30',
                autofill: true,
                placeholder: ['开始日期', '结束日期'],
                onConfirm: function (data) {
                    // console.log(data)
                },
                onChange: function (data) {
                    // console.log(data)
                }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.formatValue();
            _this.renderValue();
            _this.mounted();
            return _this;
        }
        VDate.prototype.formatValue = function () {
            var _a = this.opt, value = _a.value, type = _a.type;
            var fmt = type === 'date' ? 'yyyy/MM/dd' : 'yyyy/MM/dd HH:mm:ss';
            if (value) {
                if (typeof value === 'string') {
                    this.value = [format(new Date(value), fmt)];
                }
                else {
                    var val_1 = [];
                    value.forEach(function (v, i) {
                        val_1[i] = format(new Date(v), fmt);
                    });
                    this.value = val_1;
                }
            }
            else {
                this.value = [];
            }
        };
        VDate.prototype.mounted = function () {
            var _this = this;
            var _a = this, el = _a.el, opt = _a.opt;
            var title = opt.title, radius = opt.radius;
            el.onclick = function () {
                _this.drawer = new default_1$1q({
                    el: el,
                    title: title,
                    radius: radius,
                    stick: true,
                    onReady: function (el) {
                        var t = _this;
                        var html = tpl$H({
                            css: css$L,
                            t: t
                        });
                        el.innerHTML = html;
                        var cores = el.querySelectorAll("." + css$L['date-core']);
                        _this.renderCalendar(cores[0]);
                    },
                    onButtonClick: function (cb) {
                        if (cb.key === 'cancel')
                            return;
                        _this.renderValue();
                    }
                });
            };
        };
        VDate.prototype.renderCalendar = function (el) {
            var _this = this;
            var opt = this.opt;
            var multiple = opt.multiple, range = opt.range, value = opt.value, type = opt.type;
            var v = value ? type === 'datetime' ? value.split(' ')[0] : value : '';
            this.calendar = new default_1$1t({
                el: el,
                type: 'month',
                direction: 'vertical',
                multiple: multiple,
                range: range,
                head: ['title'],
                value: v,
                onClick: function (value) {
                    var type = typeof value === 'string';
                    _this.value = type ? [value] : value;
                }
            });
        };
        VDate.prototype.renderValue = function () {
            var _this = this;
            var _a = this, value = _a.value, opt = _a.opt;
            var range = opt.range, multiple = opt.multiple, separate = opt.separate, renderdom = opt.renderdom;
            if (value.length < 1 || !this.opt.autofill)
                return;
            var dates = [];
            value.forEach(function (v, i) {
                dates[i] = format(new Date(v), _this.opt.format);
            });
            var s = range ? dates.join(separate) : multiple ? dates.join(',') : dates[0];
            var dom = this.el.querySelector(renderdom);
            if (dom.tagName === 'INPUT') {
                dom.value = s;
            }
            else {
                dom.innerHTML = s;
            }
        };
        return VDate;
    }(Utils));
    var default_1$1p = /** @class */ (function () {
        function default_1(option) {
            return new VDate(option);
        }
        return default_1;
    }());

    var cascader = "v-cascader";
    var loading = "v-loading";
    var css$K = {
    	cascader: cascader,
    	"cascader-head": "v-cascader-head",
    	"cascader-title": "v-cascader-title",
    	"cascader-button": "v-cascader-button",
    	"cascader-indicate": "v-cascader-indicate",
    	"cascader-banner": "v-cascader-banner",
    	"cascader-item": "v-cascader-item",
    	"cascader-content": "v-cascader-content",
    	"cascader-scroll": "v-cascader-scroll",
    	"cascader-footer": "v-cascader-footer",
    	"cascader-select": "v-cascader-select",
    	"cascader-check": "v-cascader-check",
    	"cascader-label": "v-cascader-label",
    	"cascader-column": "v-cascader-column",
    	"cascader-loading": "v-cascader-loading",
    	loading: loading,
    	"cascader-tip": "v-cascader-tip",
    	"cascader-shortcut": "v-cascader-shortcut",
    	"cascader-shortcut-item": "v-cascader-shortcut-item"
    };

    function tpl$G(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['cascader']], [true]), false, true)+pug.attr("direction", t.opt.direction, true, true)) + "\u003E";
    if (t.opt.shortcut) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['cascader-tip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.shortTitle) ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cul" + (pug.attr("class", pug.classes([css['cascader-shortcut']], [true]), false, true)) + "\u003E";
    // iterate t.opt.shortcut
    ;(function(){
      var $$obj = t.opt.shortcut;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cli" + (pug.attr("class", pug.classes([css['cascader-shortcut-item']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("index", index, true, true)+" action=\"onShortcutClick\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fli\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cli" + (pug.attr("class", pug.classes([css['cascader-shortcut-item']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("index", index, true, true)+" action=\"onShortcutClick\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fli\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Ful\u003E";
    }
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['cascader-banner']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['cascader-indicate']], [true]), false, true)+pug.attr("style", pug.style(`transform: translate3d(${t.offsetIndicate}px, 0, 0)`), true, true)) + "\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['cascader-select']], [true]), false, true)) + "\u003E";
    // iterate t.opt.value
    ;(function(){
      var $$obj = t.opt.value;
      if ('number' == typeof $$obj.length) {
          for (var idx = 0, $$l = $$obj.length; idx < $$l; idx++) {
            var item = $$obj[idx];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['cascader-item']], [true]), false, true)+pug.attr("index", idx, true, true)+" action=\"onTabChange\"") + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['cascader-label']], [true]), false, true)+pug.attr("index", idx, true, true)+" action=\"onTabChange\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item) ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var idx in $$obj) {
          $$l++;
          var item = $$obj[idx];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['cascader-item']], [true]), false, true)+pug.attr("index", idx, true, true)+" action=\"onTabChange\"") + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['cascader-label']], [true]), false, true)+pug.attr("index", idx, true, true)+" action=\"onTabChange\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item) ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    if ((t.childrens)) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['cascader-item']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['cascader-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.placeholder[t.current] ? t.opt.placeholder[t.current] : '请选择') ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    if (t.opt.direction === 'vertical') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['cascader-tip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.placeholder[t.current] ? t.opt.placeholder[t.current] : '请选择') ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['cascader-content']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['cascader-loading']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-refresh\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    pug_html = pug_html + "\u003Cp\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '加载中') ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['cascader-scroll']], [true]), false, true)+pug.attr("style", pug.style(`width:${t.data.length * t.width}px;transform:translate3d(${t.offsetContent}px, 0, 0)`), true, true)) + "\u003E";
    // iterate t.data
    ;(function(){
      var $$obj = t.data;
      if ('number' == typeof $$obj.length) {
          for (var col = 0, $$l = $$obj.length; col < $$l; col++) {
            var group = $$obj[col];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['cascader-column']], [true]), false, true)+pug.attr("style", pug.style(`width:${t.width}px`), true, true)) + "\u003E";
    // iterate group 
    ;(function(){
      var $$obj = group ;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    var active = index === t.index[col];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['cascader-item']], [true]), false, true)+pug.attr("col", col, true, true)+pug.attr("index", index, true, true)+" action=\"onItemClick\""+pug.attr("active", active, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['cascader-label']], [true]), false, true)+pug.attr("col", col, true, true)+pug.attr("index", index, true, true)+" action=\"onItemClick\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['cascader-check']], [true]), false, true)+" aria-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-check\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    var active = index === t.index[col];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['cascader-item']], [true]), false, true)+pug.attr("col", col, true, true)+pug.attr("index", index, true, true)+" action=\"onItemClick\""+pug.attr("active", active, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['cascader-label']], [true]), false, true)+pug.attr("col", col, true, true)+pug.attr("index", index, true, true)+" action=\"onItemClick\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['cascader-check']], [true]), false, true)+" aria-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-check\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var col in $$obj) {
          $$l++;
          var group = $$obj[col];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['cascader-column']], [true]), false, true)+pug.attr("style", pug.style(`width:${t.width}px`), true, true)) + "\u003E";
    // iterate group 
    ;(function(){
      var $$obj = group ;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    var active = index === t.index[col];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['cascader-item']], [true]), false, true)+pug.attr("col", col, true, true)+pug.attr("index", index, true, true)+" action=\"onItemClick\""+pug.attr("active", active, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['cascader-label']], [true]), false, true)+pug.attr("col", col, true, true)+pug.attr("index", index, true, true)+" action=\"onItemClick\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['cascader-check']], [true]), false, true)+" aria-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-check\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    var active = index === t.index[col];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['cascader-item']], [true]), false, true)+pug.attr("col", col, true, true)+pug.attr("index", index, true, true)+" action=\"onItemClick\""+pug.attr("active", active, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['cascader-label']], [true]), false, true)+pug.attr("col", col, true, true)+pug.attr("index", index, true, true)+" action=\"onItemClick\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['cascader-check']], [true]), false, true)+" aria-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-check\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VCascader = /** @class */ (function (_super) {
        __extends(VCascader, _super);
        function VCascader(option) {
            var _this = _super.call(this) || this;
            _this.current = 0;
            _this.index = [];
            _this.offsetContent = 0;
            _this.offsetIndicate = 0;
            _this.scrolls = [];
            _this.childrens = true;
            _this.opt = {
                el: '',
                data: [],
                value: [],
                async: false,
                aways: true,
                autofill: true,
                title: '请选择',
                renderdom: '.v-text',
                placeholder: [],
                shortTitle: '热门城市',
                separate: ',',
                direction: 'horizontal',
                fields: {
                    name: 'name',
                    value: 'code',
                    children: 'children'
                },
                onClick: function () { },
                onTabChange: function () { },
                onChange: function () { },
                onReady: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            if (_this.opt.autofill) {
                _this.renderValue();
            }
            _this.el.onclick = function () {
                var opt = _this.opt;
                var title = opt.title;
                _this.drawer = new default_1$1q({
                    el: _this.el,
                    title: title,
                    onReady: function (el) {
                        var dom = document.createElement('div');
                        el.appendChild(dom);
                        _this.width = dom.offsetWidth;
                        _this.cascader = dom;
                        _this.mounted();
                    },
                    onButtonClick: function (cb) {
                        _this.renderValue();
                    }
                });
            };
            return _this;
        }
        VCascader.prototype.renderValue = function () {
            var _a = this.opt, value = _a.value, renderdom = _a.renderdom;
            var dom = renderdom ? this.el.querySelector(renderdom) : this.el;
            var v = value.join(this.opt.separate);
            if (!dom)
                return;
            if (dom.tagName === 'INPUT') {
                dom.value = v;
            }
            else {
                dom.innerHTML = v;
            }
        };
        VCascader.prototype.mounted = function () {
            this.initData();
            this.renderDom();
            this.transformScroll();
            this.opt.onReady(this.value);
        };
        /**
         * 初始化数据
         */
        VCascader.prototype.initData = function () {
            var opt = this.opt;
            var data = opt.data, value = opt.value, fields = opt.fields;
            var result = this.ArraytoTree(data, value, fields);
            this.data = result.data;
            this.value = result.value;
            this.index = result.indexs;
            this.value.splice(value.length);
            this.index.splice(value.length);
            var vl = this.value.length;
            var dl = this.data.length;
            this.current = vl === dl ? vl - 1 : vl;
            this.offsetContent = -this.current * this.width;
            this.childrens = this.value.length < this.data.length;
        };
        /**
         * 初始化整体dom
         */
        VCascader.prototype.renderDom = function () {
            var t = this;
            var html = tpl$G({
                t: t,
                css: css$K
            });
            var el = this.parseHtmlToDom(html);
            this.cascader.parentNode.replaceChild(el, this.cascader);
            this.cascader = el;
            this.loading = this.cascader.querySelector("." + css$K['cascader-loading']);
            this.bindClick();
            this.transformBanner(this.current);
            this.listenScroll();
        };
        /**
         *
         * @param index
         * 已选择区域渲染
         */
        VCascader.prototype.transformBanner = function (index) {
            var banner = this.cascader.querySelector("." + css$K['cascader-banner']);
            var items = banner.querySelectorAll("." + css$K['cascader-item']);
            items.forEach(function (item) {
                item.removeAttribute('active');
            });
            var current = items[items.length - 1];
            if (current) {
                current.setAttribute('active', '');
            }
            var indicate = banner.querySelector("." + css$K['cascader-indicate']);
            var left = current.offsetLeft + current.offsetWidth / 2 - indicate.offsetWidth / 2;
            this.offsetIndicate = left;
            indicate.style.transition = '0.3s';
            indicate.style.transform = "translate3d(" + left + "px, 0, 0)";
        };
        /**
         * 内容区域滚动
         * @param index
         */
        VCascader.prototype.transformContent = function (index) {
            var scroll = this.cascader.querySelector("." + css$K['cascader-scroll']);
            scroll.style.transition = '0.3s';
            this.offsetContent = -index * this.width;
            scroll.style.transform = "translate3d(" + this.offsetContent + "px, 0, 0)";
        };
        /**
         * 初始化滚动位置和滚动监听
         */
        VCascader.prototype.transformScroll = function () {
            var _this = this;
            var columns = this.cascader.querySelectorAll("." + css$K['cascader-column']);
            columns.forEach(function (column, col) {
                var ac = column;
                var oft = 0;
                var items = ac.querySelectorAll("." + css$K['cascader-item']);
                items.forEach(function (item) {
                    var ai = item;
                    if (ai.getAttribute('active') !== null) {
                        oft = ai.offsetTop;
                    }
                });
                oft = oft - ac.offsetHeight / 2 + items[0].offsetHeight / 2;
                oft = oft >= 0 ? oft : 0;
                ac.scrollTop = oft;
                _this.scrolls[col] = oft;
            });
        };
        /**
         * 点击事件分发
         */
        VCascader.prototype.bindClick = function () {
            var _this = this;
            this.cascader.onclick = function (e) {
                var target = e.target;
                var action = target.getAttribute('action');
                if (action) {
                    _this[action](target);
                }
            };
        };
        VCascader.prototype.onShortcutClick = function (target) {
            var shortcut = this.opt.shortcut;
            var index = parseInt(target.getAttribute('index'));
            this.value = shortcut[index];
            this.opt.value = [this.value[this.opt.fields['name']]];
            this.opt.onChange(this.value);
            this.renderValue();
            this.drawer.hide();
        };
        /**
         * 点击已选中
         * @param target
         */
        VCascader.prototype.onTabChange = function (target) {
            var _this = this;
            var index = parseInt(target.getAttribute('index'));
            this.current = index;
            if (this.opt.aways) {
                this.value.splice(index + 1);
                this.opt.value = this.value.map(function (a) { return a[_this.opt.fields['name']]; });
                if (!this.opt.async) {
                    this.initData();
                }
                this.data.splice(index + 1);
                this.index.splice(index + 1);
                this.childrens = false;
                this.renderDom();
                this.resetScroll();
            }
            this.transformBanner(index);
            this.transformContent(index);
            this.opt.onTabChange(index);
        };
        /**
         * 点击候选项
         * @param target
         */
        VCascader.prototype.onItemClick = function (target) {
            var _this = this;
            this.target = target;
            if (!this.opt.async) {
                var col = parseInt(target.getAttribute('col'));
                var index = parseInt(target.getAttribute('index'));
                var value = this.data[col][index];
                this.value.splice(col);
                this.value[col] = value;
                this.childrens = (this.opt.fields['children'] in this.value[this.value.length - 1]);
                this.opt.value = this.value.map(function (a) { return a[_this.opt.fields['name']]; });
                this.initData();
                this.index[col] = index;
                this.offsetContent = -col * this.width;
                // 重新渲染dom
                this.renderDom();
                // 对dom进行滚动定位
                this.resetScroll();
                this.transformContent(this.current);
            }
            else {
                this.loading.setAttribute('visible', '');
            }
            this.opt.onChange({
                value: this.value
            }, 'value');
        };
        /**
         * 滚动复位
         */
        VCascader.prototype.resetScroll = function () {
            var columns = this.cascader.querySelectorAll("." + css$K['cascader-column']);
            this.scrolls.forEach(function (scroll, index) {
                if (scroll > 0) {
                    var s = columns[index];
                    if (s) {
                        s.scrollTop = scroll;
                    }
                }
            });
        };
        /**
         * 监听滚动
         */
        VCascader.prototype.listenScroll = function () {
            var _this = this;
            var columns = this.cascader.querySelectorAll("." + css$K['cascader-column']);
            columns.forEach(function (column, index) {
                var ac = column;
                ac.onscroll = function () {
                    _this.scrolls[index] = ac.scrollTop;
                };
            });
        };
        /**
         * 异步加载
         * @param data
         * @param children
         */
        VCascader.prototype.render = function (data, children) {
            var _this = this;
            var target = this.target;
            var col = parseInt(target.getAttribute('col'));
            var index = parseInt(target.getAttribute('index'));
            this.loading.removeAttribute('visible');
            this.childrens = children;
            if (this.childrens) {
                this.data[col + 1] = data;
                this.current = col + 1;
            }
            this.index[col] = index;
            this.offsetContent = -col * this.width;
            this.value[col] = this.data[col][index];
            this.value.splice(col + 1);
            this.opt.value = this.value.map(function (a) { return a[_this.opt.fields['name']]; });
            this.data.splice(this.current + 1);
            this.index.splice(col + 1);
            this.renderDom();
            this.resetScroll();
            if (this.childrens) {
                this.transformContent(this.current);
            }
        };
        return VCascader;
    }(Utils));
    var default_1$1o = /** @class */ (function () {
        function default_1(option) {
            return new VCascader(option);
        }
        return default_1;
    }());

    var VAddress = /** @class */ (function (_super) {
        __extends(VAddress, _super);
        function VAddress(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                title: '请选择',
                data: [],
                async: false,
                value: [],
                separate: ',',
                autofill: true,
                aways: true,
                fields: {
                    name: 'name',
                    value: 'code',
                    children: 'children'
                },
                onChange: function (data, type) {
                    // console.log(data, type)
                },
                onConfirm: function (data) {
                    // console.log(data)
                }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.renderValue(_this.opt.value);
            _this.el.addEventListener('click', function () {
                _this.init(_this.opt.value);
            });
            return _this;
        }
        VAddress.prototype.init = function (value) {
            var _this = this;
            var dom = document.createElement('div');
            var arr = this.opt.data;
            var _a = this.opt, title = _a.title, fields = _a.fields, aways = _a.aways;
            this.drawer = new default_1$1q({
                el: this.el,
                content: dom,
                title: title,
                rounder: true,
                onReady: function () {
                    _this.cascader = new default_1$1o({
                        el: dom,
                        value: value,
                        data: arr,
                        title: title,
                        fields: fields,
                        aways: aways,
                        async: _this.opt.async,
                        onChange: function (data, type) {
                            _this.value = data.value;
                            _this.data = data;
                            _this.opt.onChange(data, type);
                        },
                        onReady: function (value) {
                            _this.value = value;
                            _this.opt.value = _this.value.map(function (a) { return a[_this.opt.fields['name']]; });
                        }
                    });
                },
                onConfirm: function () {
                    var fields = _this.opt.fields;
                    _this.opt.value = _this.value.map(function (a) { return a[fields['name']]; });
                    _this.renderValue(_this.opt.value);
                    _this.opt.onConfirm({
                        value: _this.value,
                        name: _this.opt.value,
                        el: _this.el,
                        current: _this.data.current
                    });
                    _this.drawer.hide();
                }
            });
        };
        VAddress.prototype.renderValue = function (value) {
            if (!this.opt.autofill)
                return;
            var el = this.el;
            var v = value.join(this.opt.separate);
            if (el.tagName === 'INPUT') {
                el.value = v;
            }
            else {
                var input = el.querySelector('input');
                if (input) {
                    input.value = v;
                }
                else {
                    el.innerHTML = v;
                }
            }
        };
        VAddress.prototype.render = function (data, children) {
            this.cascader.render(data, children);
        };
        return VAddress;
    }(Utils));
    var default_1$1n = /** @class */ (function () {
        function default_1(option) {
            return new VAddress(option);
        }
        return default_1;
    }());

    var icon = "v-icon";
    var iconRotate = "v-iconRotate";
    var css$J = {
    	icon: icon,
    	iconRotate: iconRotate
    };

    function tpl$F(locals) {var pug_html = "";var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['icon']], [true]), false, true)+" arial-hidden=\"true\""+pug.attr("spin", t.spin, true, true)+pug.attr("style", pug.style(`width:${t.size};height:${t.size};fill:${t.color}`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", "#icon-" + t.name, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VIcon = /** @class */ (function (_super) {
        __extends(VIcon, _super);
        function VIcon(option) {
            var _this = _super.call(this) || this;
            _this.event = {};
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            var icons = document.querySelectorAll('v-icon');
            icons.forEach(function (icon) {
                _this.render(icon);
            });
            return _this;
        }
        VIcon.prototype.render = function (el) {
            this.name = el.getAttribute('name');
            this.size = el.getAttribute('size') || '20px';
            this.color = el.getAttribute('color') || 'currentColor';
            this.spin = el.getAttribute('spin') !== null;
            this.event['onclick'] = el.onclick;
            var t = this;
            var html = tpl$F({
                t: t,
                css: css$J
            });
            /**替换dom */
            var nel = this.parseHtmlToDom(html);
            el.parentNode.replaceChild(nel, el);
            this.el = nel;
            this.bindEvent();
        };
        VIcon.prototype.bindEvent = function () {
            this.el.onclick = this.event['onclick'];
        };
        return VIcon;
    }(Utils));
    var default_1$1m = /** @class */ (function () {
        function default_1(option) {
            return new VIcon(option);
        }
        return default_1;
    }());

    var VRadio = /** @class */ (function (_super) {
        __extends(VRadio, _super);
        function VRadio(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VRadio.prototype.render = function () {
        };
        VRadio.prototype.generateData = function () {
        };
        return VRadio;
    }(Utils));
    var default_1$1l = /** @class */ (function () {
        function default_1(option) {
            return new VRadio(option);
        }
        return default_1;
    }());

    var VRadioGroup = /** @class */ (function (_super) {
        __extends(VRadioGroup, _super);
        function VRadioGroup(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VRadioGroup.prototype.render = function () {
        };
        VRadioGroup.prototype.generateData = function () {
        };
        return VRadioGroup;
    }(Utils));
    var default_1$1k = /** @class */ (function () {
        function default_1(option) {
            return new VRadioGroup(option);
        }
        return default_1;
    }());

    var VCheckbox = /** @class */ (function (_super) {
        __extends(VCheckbox, _super);
        function VCheckbox(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VCheckbox.prototype.render = function () {
        };
        VCheckbox.prototype.generateData = function () {
        };
        return VCheckbox;
    }(Utils));
    var default_1$1j = /** @class */ (function () {
        function default_1(option) {
            return new VCheckbox(option);
        }
        return default_1;
    }());

    function tpl$E(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['actionsheet']], [true]), false, true)) + "\u003E";
    if (t.opt.title || t.opt.subtitle) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['actionsheet-head']], [true]), false, true)) + "\u003E";
    if (t.opt.title) {
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['actionsheet-title']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.title) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    }
    if (t.opt.subtitle) {
    pug_html = pug_html + "\u003Ch3" + (pug.attr("class", pug.classes([css['actionsheet-subtitle']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.subtitle) ? "" : pug_interp)) + "\u003C\u002Fh3\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['actionsheet-content']], [true]), false, true)) + "\u003E";
    // iterate t.opt.options
    ;(function(){
      var $$obj = t.opt.options;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['actionsheet-item']], [true]), false, true)+" action=\"onSelect\""+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['actionsheet-label']], [true]), false, true)+" action=\"onSelect\""+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    if (item[t.opt.fields['subname']]) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['actionsheet-info']], [true]), false, true)+" action=\"onSelect\""+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['subname']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['actionsheet-item']], [true]), false, true)+" action=\"onSelect\""+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['actionsheet-label']], [true]), false, true)+" action=\"onSelect\""+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    if (item[t.opt.fields['subname']]) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['actionsheet-info']], [true]), false, true)+" action=\"onSelect\""+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['subname']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    if (t.opt.cancel) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['actionsheet-footer']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['actionsheet-cancel']], [true]), false, true)+" action=\"onCancel\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '取消') ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var actionsheet = "v-actionsheet";
    var css$I = {
    	actionsheet: actionsheet,
    	"actionsheet-head": "v-actionsheet-head",
    	"actionsheet-title": "v-actionsheet-title",
    	"actionsheet-subtitle": "v-actionsheet-subtitle",
    	"actionsheet-content": "v-actionsheet-content",
    	"actionsheet-footer": "v-actionsheet-footer",
    	"actionsheet-cancel": "v-actionsheet-cancel",
    	"actionsheet-info": "v-actionsheet-info",
    	"actionsheet-item": "v-actionsheet-item",
    	"actionsheet-label": "v-actionsheet-label"
    };

    var VActionsheet = /** @class */ (function (_super) {
        __extends(VActionsheet, _super);
        function VActionsheet(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                title: '请选择支付方式',
                subtitle: '',
                options: [],
                radius: '',
                clickable: true,
                cancel: false,
                alone: false,
                fields: {
                    name: 'name',
                    value: 'value',
                    subname: 'subname'
                },
                onClick: function (v) { console.log(v); }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VActionsheet.prototype.render = function () {
            var _this = this;
            var t = this;
            var _a = t.opt, el = _a.el; _a.title; var radius = _a.radius, clickable = _a.clickable, alone = _a.alone;
            this.drawer = new default_1$1q({
                el: el,
                title: '',
                radius: radius,
                buttons: null,
                alone: alone,
                clickable: clickable,
                onReady: function (dom) {
                    var html = tpl$E({
                        t: t,
                        css: css$I
                    });
                    var el = _this.parseHtmlToDom(html);
                    _this.el = dom.appendChild(el);
                    _this.bindClick();
                }
            });
        };
        VActionsheet.prototype.bindClick = function () {
            var _this = this;
            this.el.onclick = function (e) {
                var target = e.target;
                var action = target.getAttribute('action');
                if (action) {
                    console.log(action);
                    _this[action](target);
                }
            };
        };
        VActionsheet.prototype.onSelect = function (target) {
            var index = parseInt(target.getAttribute('index'));
            var item = this.opt.options[index];
            this.opt.onClick(item);
            this.drawer.hide();
        };
        VActionsheet.prototype.onCancel = function (target) {
            this.drawer.hide();
        };
        return VActionsheet;
    }(Utils));
    var default_1$1i = /** @class */ (function () {
        function default_1(option) {
            return new VActionsheet(option);
        }
        return default_1;
    }());

    var default_1$1h = /** @class */ (function () {
        function default_1() {
        }
        return default_1;
    }());

    var VCell = /** @class */ (function (_super) {
        __extends(VCell, _super);
        function VCell(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VCell.prototype.render = function () {
        };
        VCell.prototype.generateData = function () {
        };
        return VCell;
    }(Utils));
    var default_1$1g = /** @class */ (function () {
        function default_1(option) {
            return new VCell(option);
        }
        return default_1;
    }());

    var collapse = "v-collapse";
    var css$H = {
    	collapse: collapse,
    	"collapse-item": "v-collapse-item",
    	"collapse-suffix": "v-collapse-suffix",
    	"collapse-head": "v-collapse-head",
    	"collapse-content": "v-collapse-content",
    	"collapse-title": "v-collapse-title"
    };

    function tpl$D(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['collapse']], [true]), false, true)+pug.attr("shape", t.opt.shape, true, true)+pug.attr("radius", t.opt.radius, true, true)) + "\u003E";
    // iterate t.data
    ;(function(){
      var $$obj = t.data;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cdetails" + (pug.attr("class", pug.classes([css['collapse-item']], [true]), false, true)+pug.attr("index", index, true, true)+pug.attr("open", item.visible, true, true)+pug.attr("name", item[t.opt.fields['name']], true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csummary" + (pug.attr("class", pug.classes([css['collapse-head']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['collapse-title']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['title']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['collapse-suffix']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-point-down\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fsummary\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['collapse-content']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cdetails" + (pug.attr("class", pug.classes([css['collapse-item']], [true]), false, true)+pug.attr("index", index, true, true)+pug.attr("open", item.visible, true, true)+pug.attr("name", item[t.opt.fields['name']], true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csummary" + (pug.attr("class", pug.classes([css['collapse-head']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['collapse-title']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['title']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['collapse-suffix']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-point-down\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fsummary\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['collapse-content']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VCollapse = /** @class */ (function (_super) {
        __extends(VCollapse, _super);
        function VCollapse(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                fields: {
                    title: 'title',
                    name: 'name'
                },
                shape: '',
                visible: [],
                child: '.collapse-item',
                radius: '',
                accordion: false,
                onChange: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.items = _this.el.querySelectorAll(_this.opt.child);
            _this.data = _this.opt.data;
            _this.mounted();
            _this.render();
            return _this;
        }
        VCollapse.prototype.render = function () {
            var t = this;
            var html = tpl$D({
                css: css$H,
                t: t
            });
            var el = this.parseHtmlToDom(html);
            this.el.parentNode.replaceChild(el, this.el);
            this.el = el;
            this.renderContent();
            this.bindChange();
        };
        VCollapse.prototype.bindChange = function () {
            var _this = this;
            var items = this.items;
            items.forEach(function (item, index) {
                var citem = item;
                citem.onclick = function () {
                    _this.generateValue(citem);
                };
            });
        };
        VCollapse.prototype.generateValue = function (item) {
            var index = parseInt(item.getAttribute('index'));
            var name = item.getAttribute(this.opt.fields['name']);
            var open = !item.open;
            var accordion = this.opt.accordion;
            var v = name === null ? index : name;
            if (open) {
                if (accordion) {
                    this.opt.visible = [v];
                }
                else {
                    this.opt.visible.push(v);
                }
            }
            else {
                if (accordion) {
                    this.opt.visible = [];
                }
                else {
                    var i = this.opt.visible.indexOf(v);
                    this.opt.visible.splice(i, 1);
                }
            }
            this.opt.onChange(this.opt.visible);
            if (!accordion)
                return;
            this.renderActive();
        };
        VCollapse.prototype.renderActive = function () {
            var _a = this, opt = _a.opt, items = _a.items;
            var visible = opt.visible, fields = opt.fields;
            items.forEach(function (item, index) {
                var citem = item;
                var name = citem.getAttribute(fields['name']);
                var v = name === null ? index : name;
                var open = citem.open;
                if (open && visible.indexOf(v) < 0) {
                    citem.open = false;
                }
            });
        };
        VCollapse.prototype.renderContent = function () {
            var _this = this;
            var items = this.el.querySelectorAll("." + css$H['collapse-item']);
            var is = [];
            items.forEach(function (item, i) {
                var citem = item;
                var content = citem.querySelector("." + css$H['collapse-content']);
                content.appendChild(_this.items[i]);
                is.push(citem);
            });
            this.items = is;
        };
        /**
         * 通过items生成数据。
         */
        VCollapse.prototype.mounted = function () {
            var _a = this, data = _a.data, items = _a.items, opt = _a.opt;
            var accordion = opt.accordion, visible = opt.visible, fields = opt.fields;
            if (data)
                return;
            var datas = [];
            items.forEach(function (item, index) {
                var citem = item;
                var obj = {};
                for (var prop in fields) {
                    var v = citem.getAttribute(prop);
                    if (v) {
                        obj[prop] = v;
                    }
                }
                obj['index'] = index;
                var name = obj[fields['name']];
                if (!accordion) {
                    if (name !== undefined && visible.indexOf(name) >= 0 || name === undefined && visible.indexOf(index) >= 0) {
                        obj['visible'] = true;
                    }
                }
                else {
                    if (name !== undefined && name === visible || name === undefined && index === visible) {
                        obj['visible'] = true;
                    }
                }
                datas.push(obj);
            });
            this.data = datas;
        };
        return VCollapse;
    }(Utils));
    var default_1$1f = /** @class */ (function () {
        function default_1(option) {
            return new VCollapse(option);
        }
        return default_1;
    }());

    var VCollapseItem = /** @class */ (function (_super) {
        __extends(VCollapseItem, _super);
        function VCollapseItem(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VCollapseItem.prototype.render = function () {
        };
        VCollapseItem.prototype.generateData = function () {
        };
        return VCollapseItem;
    }(Utils));
    var default_1$1e = /** @class */ (function () {
        function default_1(option) {
            return new VCollapseItem(option);
        }
        return default_1;
    }());

    var dialog = "v-dialog";
    var css$G = {
    	dialog: dialog,
    	"dialog-head": "v-dialog-head",
    	"dialog-content": "v-dialog-content",
    	"dialog-label": "v-dialog-label",
    	"dialog-title": "v-dialog-title"
    };

    function tpl$C(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['dialog']], [true]), false, true)+pug.attr("type", t.opt.type, true, true)) + "\u003E";
    if (t.opt.icon) {
    var rem= t.opt.iconSize / 40 + 'rem';
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['dialog-head']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (" aria-hidden=\"true\""+pug.attr("style", pug.style(`width:${rem};height:${rem}`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", `#icon-${t.opt.icon}`, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['dialog-title']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.title) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['dialog-content']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['dialog-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.content) ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VDialog = /** @class */ (function (_super) {
        __extends(VDialog, _super);
        function VDialog(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                title: '提示',
                content: '',
                buttons: [{ name: '取消', value: 'cancel' }, { name: '确定', value: 'confirm' }],
                placement: 'center',
                alone: false,
                radius: 'conner',
                buttonStyle: 'light',
                iconSize: 80,
                close: false,
                onReady: function () { },
                onClick: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            return _this;
        }
        VDialog.prototype.render = function () {
            var _this = this;
            var _a = this, el = _a.el, opt = _a.opt;
            var placement = opt.placement, title = opt.title; opt.content; var radius = opt.radius, alone = opt.alone, close = opt.close, buttonStyle = opt.buttonStyle, buttons = opt.buttons, icon = opt.icon;
            var t = this;
            var html = tpl$C({
                css: css$G,
                t: t
            });
            this.drawer = new default_1$1q({
                el: el,
                content: html,
                buttonStyle: buttonStyle,
                clickable: false,
                placement: placement,
                radius: radius,
                close: close,
                title: icon ? '' : title,
                buttons: buttons,
                alone: alone,
                onButtonClick: function (data) {
                    _this.drawer.hide();
                },
                onReady: function (el) {
                    _this.opt.onReady(el);
                }
            });
        };
        return VDialog;
    }(Utils));
    var default_1$1d = /** @class */ (function () {
        function default_1(option) {
            return new VDialog(option);
        }
        return default_1;
    }());

    var VForm = /** @class */ (function (_super) {
        __extends(VForm, _super);
        function VForm(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VForm.prototype.render = function () {
        };
        VForm.prototype.generateData = function () {
        };
        return VForm;
    }(Utils));
    var default_1$1c = /** @class */ (function () {
        function default_1(option) {
            return new VForm(option);
        }
        return default_1;
    }());

    var VFormItem = /** @class */ (function (_super) {
        __extends(VFormItem, _super);
        function VFormItem(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VFormItem.prototype.render = function () {
        };
        VFormItem.prototype.generateData = function () {
        };
        return VFormItem;
    }(Utils));
    var default_1$1b = /** @class */ (function () {
        function default_1(option) {
            return new VFormItem(option);
        }
        return default_1;
    }());

    var image = "v-image";
    var css$F = {
    	image: image,
    	"image-core": "v-image-core",
    	"image-loading": "v-image-loading",
    	"image-error": "v-image-error"
    };

    function tpl$B(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['image']], [true]), false, true)+pug.attr("style", pug.style(`width:${t.width};height:${t.height}`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cimg" + (pug.attr("class", pug.classes([css['image-core']], [true]), false, true)+pug.attr("src", t.url, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['image-loading']], [true]), false, true)) + "\u003E";
    if (t.loadingIcon) {
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E\u003C\u002Fsvg\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", `#icon-${t.loadingIcon}`, true, true)) + "\u003E\u003C\u002Fuse\u003E";
    }
    if (t.loadingText) {
    pug_html = pug_html + "\u003Cp\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.loadingText) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['image-error']], [true]), false, true)) + "\u003E";
    if (t.errorIcon) {
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E\u003C\u002Fsvg\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", `#icon-${t.errorIcon}`, true, true)) + "\u003E\u003C\u002Fuse\u003E";
    }
    if (t.errorText) {
    pug_html = pug_html + "\u003Cp\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.errorText) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VImage = /** @class */ (function (_super) {
        __extends(VImage, _super);
        function VImage(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '.v-image'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.images = document.querySelectorAll(_this.opt.el);
            _this.images.forEach(function (image) {
                var cimage = image;
                _this.bindObverse(cimage);
            });
            return _this;
        }
        VImage.prototype.mounted = function (el) {
            this.width = el.getAttribute('width');
            this.height = el.getAttribute('height');
            this.url = el.getAttribute('data-src');
            this.errorText = el.getAttribute('error-text') || '404';
            this.errorIcon = el.getAttribute('error-icon') || '';
            this.loadingText = el.getAttribute('loading-text') || 'Longrise';
            this.loadingIcon = el.getAttribute('loading-icon') || '';
            this.render(el);
        };
        VImage.prototype.render = function (image) {
            var t = this;
            var html = tpl$B({
                t: t,
                css: css$F
            });
            var el = this.parseHtmlToDom(html);
            image.parentNode.replaceChild(el, image);
            this.el = el;
            this.watchLoaded();
        };
        VImage.prototype.watchLoaded = function () {
            var core = this.el.querySelector('img');
            core.onload = this.loadSuccess.bind(this);
            core.onerror = this.loadFaild.bind(this);
        };
        VImage.prototype.loadSuccess = function () {
            this.el.setAttribute('status', 'success');
        };
        VImage.prototype.loadFaild = function () {
            this.el.setAttribute('status', 'faild');
        };
        VImage.prototype.bindObverse = function (el) {
            var _this = this;
            var io = new IntersectionObserver(function (entries) {
                entries.forEach(function (entry) {
                    if (entries && entry.isIntersecting) {
                        _this.mounted(el);
                        io.unobserve(entry.target);
                    }
                });
            });
            io.observe(el);
        };
        return VImage;
    }(Utils));
    var default_1$1a = /** @class */ (function () {
        function default_1(option) {
            return new VImage(option);
        }
        return default_1;
    }());

    function tpl$A(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, opt) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['indexbar']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cinput" + (pug.attr("class", pug.classes([css['indexbar-core']], [true]), false, true)+" type=\"range\" min=\"0\""+pug.attr("max", opt.content.length, true, true)+" step=\"1\"") + "\u003E";
    pug_html = pug_html + "\u003Cul" + (pug.attr("class", pug.classes([css['indexbar-list']], [true]), false, true)) + "\u003E";
    // iterate opt.content
    ;(function(){
      var $$obj = opt.content;
      if ('number' == typeof $$obj.length) {
          for (var pug_index0 = 0, $$l = $$obj.length; pug_index0 < $$l; pug_index0++) {
            var item = $$obj[pug_index0];
    pug_html = pug_html + "\u003Cli" + (pug.attr("class", pug.classes([css['indexbar-item']], [true]), false, true)+pug.attr("letter", item, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cspan" + (pug.attr("class", pug.classes([css['indexbar-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    pug_html = pug_html + "\u003Cspan" + (pug.attr("class", pug.classes([css['indexbar-tooltip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E\u003C\u002Fli\u003E";
          }
      } else {
        var $$l = 0;
        for (var pug_index0 in $$obj) {
          $$l++;
          var item = $$obj[pug_index0];
    pug_html = pug_html + "\u003Cli" + (pug.attr("class", pug.classes([css['indexbar-item']], [true]), false, true)+pug.attr("letter", item, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cspan" + (pug.attr("class", pug.classes([css['indexbar-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    pug_html = pug_html + "\u003Cspan" + (pug.attr("class", pug.classes([css['indexbar-tooltip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E\u003C\u002Fli\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Ful\u003E\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"opt" in locals_for_with?locals_for_with.opt:typeof opt!=="undefined"?opt:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var indexbar = "v-indexbar";
    var css$E = {
    	indexbar: indexbar,
    	"indexbar-list": "v-indexbar-list",
    	"indexbar-item": "v-indexbar-item",
    	"indexbar-tooltip": "v-indexbar-tooltip",
    	"indexbar-core": "v-indexbar-core"
    };

    var VIndexbar = /** @class */ (function (_super) {
        __extends(VIndexbar, _super);
        function VIndexbar(option) {
            var _this = _super.call(this) || this;
            _this.current = 0;
            _this.opt = {
                el: '',
                content: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'],
                onChange: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            _this.bindChangeEvent();
            return _this;
        }
        VIndexbar.prototype.renderActive = function (index) {
            this.opt.onChange(index);
            this.items.forEach(function (item, i) {
                var itm = item;
                itm.removeAttribute('active');
                if (index === i) {
                    itm.setAttribute('active', '');
                }
            });
        };
        VIndexbar.prototype.bindChangeEvent = function () {
            var _this = this;
            var content = this.opt.content;
            var core = this.el.querySelector('input');
            core.addEventListener('input', function () {
                var value = content.length - parseInt(core.value);
                _this.current = value;
                _this.renderActive(_this.current);
            });
            core.addEventListener('change', function () {
                _this.renderActive(-1);
            });
        };
        VIndexbar.prototype.render = function () {
            var opt = this.opt;
            var html = tpl$A({
                css: css$E,
                opt: opt
            });
            var el = this.el.appendChild(this.parseHtmlToDom(html));
            this.el = el;
            this.items = this.el.querySelectorAll("." + css$E['indexbar-item']);
        };
        return VIndexbar;
    }(Utils));
    var default_1$19 = /** @class */ (function () {
        function default_1(option) {
            return new VIndexbar(option);
        }
        return default_1;
    }());

    var input = "v-input";
    var css$D = {
    	input: input,
    	"input-prefix": "v-input-prefix",
    	"input-suffix": "v-input-suffix",
    	"input-core": "v-input-core",
    	"input-length": "v-input-length",
    	"input-clear": "v-input-clear"
    };

    function tpl$z(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['input']], [true]), false, true)+pug.attr("shape", t.opt.shape, true, true)+pug.attr("radius", t.opt.radius, true, true)+pug.attr("hairline", t.opt.hairline, true, true)+pug.attr("clearable", t.opt.value, true, true)+pug.attr("justify", t.opt.justify, true, true)) + "\u003E";
    if (t.opt.prefixLabel || t.opt.prefixIcon) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['input-prefix']], [true]), false, true)) + "\u003E";
    if (t.opt.prefixLabel) {
    pug_html = pug_html + "\u003Cspan\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.prefixLabel) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    }
    if (t.opt.prefixIcon) {
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", `#icon-${t.opt.prefixIcon}`, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003Cinput" + (pug.attr("class", pug.classes([css['input-core']], [true]), false, true)+pug.attr("type", t.opt.type, true, true)+pug.attr("placeholder", t.opt.placeholder, true, true)+pug.attr("value", t.opt.value, true, true)+pug.attr("maxlength", t.opt.maxLength, true, true)) + "\u003E";
    if (t.opt.suffixLabel || t.opt.suffixIcon || t.opt.clearable) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['input-suffix']], [true]), false, true)+pug.attr("style", pug.style(`color:${t.opt.suffixColor}`), true, true)) + "\u003E";
    if (t.opt.clearable) {
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['input-clear']], [true]), false, true)+" aria-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-clear\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    if (t.opt.maxLength) {
    pug_html = pug_html + "\u003Cspan" + (pug.attr("class", pug.classes([css['input-length']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `${t.opt.value.length}/${t.opt.maxLength}`) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    }
    if (t.opt.suffixLabel) {
    pug_html = pug_html + "\u003Cspan\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.suffixLabel) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    }
    if (t.opt.suffixIcon) {
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", `#icon-${t.opt.suffixIcon}`, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VInput = /** @class */ (function (_super) {
        __extends(VInput, _super);
        function VInput(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'text',
                radius: 'conner',
                onChange: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            return _this;
        }
        VInput.prototype.render = function () {
            var t = this;
            var html = tpl$z({
                css: css$D,
                t: t
            });
            var el = this.parseHtmlToDom(html);
            this.el.parentNode.replaceChild(el, this.el);
            this.el = el;
            this.clear = this.el.querySelector("." + css$D['input-clear']);
            this.core = this.el.querySelector("." + css$D['input-core']);
            this.length = this.el.querySelector("." + css$D['input-length']);
            this.bindEvent();
        };
        VInput.prototype.bindEvent = function () {
            if (this.clear) {
                this.bindClearEvent();
            }
            this.bindCoreInput();
        };
        VInput.prototype.bindCoreInput = function () {
            var _this = this;
            var _a = this, core = _a.core, el = _a.el, length = _a.length, opt = _a.opt;
            var maxLength = opt.maxLength;
            core.oninput = function () {
                var value = core.value;
                _this.opt.value = value;
                _this.opt.onChange(value);
                length.innerHTML = value.length + "/" + maxLength;
                if (core.value) {
                    el.setAttribute('clearable', '');
                }
                else {
                    el.removeAttribute('clearable');
                }
            };
        };
        VInput.prototype.bindClearEvent = function () {
            var _this = this;
            var _a = this, el = _a.el, core = _a.core, clear = _a.clear, length = _a.length, opt = _a.opt;
            clear.onclick = function () {
                _this.opt.value = '';
                core.value = '';
                el.removeAttribute('clearable');
                length.innerHTML = "0/" + opt.maxLength;
            };
        };
        return VInput;
    }(Utils));
    var default_1$18 = /** @class */ (function () {
        function default_1(option) {
            return new VInput(option);
        }
        return default_1;
    }());

    var VList = /** @class */ (function (_super) {
        __extends(VList, _super);
        function VList(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VList.prototype.render = function () {
        };
        VList.prototype.generateData = function () {
        };
        return VList;
    }(Utils));
    var default_1$17 = /** @class */ (function () {
        function default_1(option) {
            return new VList(option);
        }
        return default_1;
    }());

    var VNavbar = /** @class */ (function (_super) {
        __extends(VNavbar, _super);
        function VNavbar(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VNavbar.prototype.render = function () {
        };
        VNavbar.prototype.generateData = function () {
        };
        return VNavbar;
    }(Utils));
    var default_1$16 = /** @class */ (function () {
        function default_1(option) {
            return new VNavbar(option);
        }
        return default_1;
    }());

    var noticebar = "v-noticebar";
    var css$C = {
    	noticebar: noticebar,
    	"noticebar-content": "v-noticebar-content",
    	"noticebar-wrap": "v-noticebar-wrap",
    	"noticebar-close": "v-noticebar-close",
    	"noticebar-button": "v-noticebar-button"
    };

    function tpl$y(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['noticebar']], [true]), false, true)+pug.attr("type", t.opt.type, true, true)) + "\u003E";
    if (t.opt.icon) {
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", "#icon-"+t.opt.icon, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['noticebar-content']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['noticebar-wrap']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.content) ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    if (t.opt.button) {
    pug_html = pug_html + "\u003Cbutton" + (pug.attr("class", pug.classes([css['noticebar-button']], [true]), false, true)+" action=\"onClick\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.button) ? "" : pug_interp)) + "\u003C\u002Fbutton\u003E";
    }
    if (t.opt.close) {
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['noticebar-close']], [true]), false, true)+" aria-hidden=\"true\" action=\"onClose\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", "#icon-"+t.opt.close, true, true)+" action=\"onClose\"") + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VNoticebar = /** @class */ (function (_super) {
        __extends(VNoticebar, _super);
        function VNoticebar(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'light',
                speed: 60,
                delay: 300,
                content: '',
                close: '',
                button: '',
                onClick: function () { },
                onClose: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            return _this;
        }
        VNoticebar.prototype.render = function () {
            var t = this;
            var html = tpl$y({
                t: t,
                css: css$C
            });
            this.el.innerHTML = html;
            this.content = this.el.querySelector("." + css$C['noticebar-content']);
            this.scroll = this.el.querySelector("." + css$C['noticebar-wrap']);
            this.width = this.content.offsetWidth;
            this.scrollWidth = this.scroll.offsetWidth;
            this.bindClick();
            if (this.width > this.scrollWidth)
                return;
            this.duration = (this.scrollWidth) / this.opt.speed * 1000;
            this.transform();
        };
        VNoticebar.prototype.transform = function () {
            var _this = this;
            var _a = this, scrollWidth = _a.scrollWidth, scroll = _a.scroll, width = _a.width;
            scroll.style.transitionDuration = this.duration + "ms";
            scroll.style.transitionTimingFunction = 'linear';
            scroll.style.transform = "translate3d(" + -scrollWidth + "px, 0, 0)";
            setTimeout(function () {
                scroll.style.transitionDuration = '0s';
                scroll.style.transform = "translate3d(" + width + "px, 0, 0)";
                _this.duration = (scrollWidth + width) / _this.opt.speed * 1000;
                setTimeout(function () {
                    _this.transform();
                }, _this.opt.delay);
            }, this.duration);
        };
        VNoticebar.prototype.bindClick = function () {
            var _this = this;
            this.el.onclick = function (e) {
                var target = e.target;
                var action = target.getAttribute('action');
                if (action) {
                    _this.opt[action]();
                }
            };
        };
        return VNoticebar;
    }(Utils));
    var default_1$15 = /** @class */ (function () {
        function default_1(option) {
            return new VNoticebar(option);
        }
        return default_1;
    }());

    var VNotify = /** @class */ (function (_super) {
        __extends(VNotify, _super);
        function VNotify(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                message: '',
                type: 'primary',
                duration: 0
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VNotify.prototype.render = function () {
            var _this = this;
            var _a = this.opt, el = _a.el, message = _a.message, type = _a.type, duration = _a.duration;
            this.drawer = new default_1$1q({
                el: el,
                buttons: null,
                title: '',
                stick: true,
                placement: 'top',
                type: type,
                radius: '',
                mask: 'rgba(0,0,0,0)',
                clickable: false,
                onReady: function (el) {
                    new default_1$15({
                        el: el,
                        content: message,
                        type: type,
                        close: duration > 0 ? '' : 'close',
                        onClose: function () {
                            console.log('close');
                            _this.drawer.hide();
                        }
                    });
                    if (duration) {
                        setTimeout(function () {
                            _this.drawer.hide();
                        }, duration);
                    }
                }
            });
        };
        return VNotify;
    }(Utils));
    var default_1$14 = /** @class */ (function () {
        function default_1(option) {
            return new VNotify(option);
        }
        return default_1;
    }());

    var VPage = /** @class */ (function (_super) {
        __extends(VPage, _super);
        function VPage(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VPage.prototype.render = function () {
        };
        VPage.prototype.generateData = function () {
        };
        return VPage;
    }(Utils));
    var default_1$13 = /** @class */ (function () {
        function default_1(option) {
            return new VPage(option);
        }
        return default_1;
    }());

    function tpl$x(locals) {var pug_html = "";var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, opt) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['popover']], [true]), false, true)+pug.attr("placement", opt.placement, true, true)+pug.attr("theme", opt.theme, true, true)+pug.attr("stick", opt.stick, true, true)) + "\u003E";
    if (opt.arrow) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['popover-arrow']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['popover-content']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"opt" in locals_for_with?locals_for_with.opt:typeof opt!=="undefined"?opt:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var popover = "v-popover";
    var css$B = {
    	popover: popover,
    	"popover-content": "v-popover-content",
    	"popover-arrow": "v-popover-arrow"
    };

    var VPopover = /** @class */ (function (_super) {
        __extends(VPopover, _super);
        function VPopover(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                mask: 'rgba(0,0,0,0)',
                offset: 12,
                space: 32,
                stick: false,
                arrow: false,
                onReady: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.page = _this.parents(_this.opt.el, 'v-page');
            _this.render();
            return _this;
        }
        VPopover.prototype.render = function () {
            var _this = this;
            var opt = this.opt;
            this.mask = new default_1$1s({
                el: opt.el,
                clickable: false,
                background: opt.mask,
                onReady: function (dom) {
                    var html = tpl$x({
                        css: css$B,
                        opt: opt
                    });
                    _this.width = dom.offsetWidth;
                    _this.height = dom.offsetHeight;
                    _this.el = dom.appendChild(_this.parseHtmlToDom(html));
                    _this.popover = _this.el.querySelector("." + css$B['popover-content']);
                    _this.renderContent();
                    _this.opt.onReady(_this.popover);
                    _this.show();
                    _this.bindPanelClick();
                },
                onClick: function () {
                    _this.hide();
                }
            });
        };
        VPopover.prototype.renderContent = function () {
            var popover = this.popover;
            var content = this.opt.content;
            if (!content)
                return;
            if (typeof content === 'string') {
                popover.innerHTML = content;
            }
            else {
                popover.appendChild(content);
            }
        };
        VPopover.prototype.bindPanelClick = function () {
            this.el.onclick = function (e) {
                e.stopPropagation();
            };
        };
        VPopover.prototype.computedStyle = function () {
            var _a = this.opt, placement = _a.placement, offset = _a.offset;
            var _b = this, position = _b.position, panel = _b.panel;
            var place = placement.split('-');
            var x = 0, y = 0;
            if (place[0] === 'bottom') {
                y = position.top + position.height + offset;
            }
            if (place[0] === 'top') {
                y = panel.height < position.top - this.opt.space - offset ? position.top - panel.height - offset : this.opt.space;
            }
            if (place[0] === 'left') {
                x = position.left - panel.width - offset;
            }
            if (place[0] === 'right') {
                x = position.left + position.width + offset;
            }
            if (place[0] === 'bottom' || place[0] === 'top') {
                if (place[1] === 'start') {
                    x = position.left;
                }
                else if (place[1] === 'end') {
                    x = position.left - (panel.width - position.width);
                }
                else {
                    x = position.left + position.width / 2 - panel.width / 2;
                }
            }
            if (place[0] === 'left' || place[0] === 'right') {
                if (place[1] === 'start') {
                    y = position.top;
                }
                else if (place[1] === 'end') {
                    y = panel.height < position.top - this.opt.space ? position.top - (panel.height - position.height) : this.opt.space;
                }
                else {
                    y = position.top + position.height / 2 - panel.height / 2;
                }
            }
            var mh;
            if (place[0] === 'bottom') {
                mh = position.bottom - this.opt.space;
            }
            else if (place[0] === 'top') {
                mh = position.top - this.opt.space - offset;
            }
            else if (place[0] === 'left' || place[0] === 'right') {
                if (place[1] === 'start') {
                    mh = position.bottom + position.height - this.opt.space;
                }
                else if (place[1] === 'end') {
                    mh = position.top + position.height - this.opt.space;
                }
            }
            // 防止贴边
            x = x < 10 ? this.opt.offset : this.width - (x + panel.width) < 10 ? x - this.opt.offset : x;
            this.el.style.top = y + "px";
            this.el.style.left = x + "px";
            this.el.style.maxHeight = mh + "px";
        };
        VPopover.prototype.getPosition = function () {
            var el = this.opt.el;
            var page = this.page;
            var wpos = page.getBoundingClientRect();
            var pos = el.getBoundingClientRect();
            var center = {
                left: pos.left - wpos.left,
                top: pos.top - wpos.top,
                width: pos.width,
                height: pos.height,
                right: page.offsetWidth - (pos.left - wpos.left) - pos.width,
                bottom: page.offsetHeight - (pos.top - wpos.top) - pos.height
            };
            this.position = center;
            this.computedPosition();
        };
        VPopover.prototype.computedPosition = function () {
            var _a = this, position = _a.position, opt = _a.opt, panel = _a.panel;
            var placement = opt.placement;
            var p = position;
            var d, h = '';
            var max = 0;
            this.el.offsetWidth;
            var ph = this.el.offsetHeight;
            if (placement) {
                var a = placement.split('-')[0];
                console.log(a);
                if (a === 'bottom' || a === 'top') {
                    console.log(p['bottom'], ph, p['top']);
                    if (p['bottom'] > p['top']) {
                        d = 'bottom';
                    }
                    else {
                        d = 'top';
                    }
                }
                if (a === 'left' || a === 'right') {
                    if (p['left'] > p['right']) {
                        d = 'left';
                    }
                    else {
                        d = 'right';
                    }
                }
            }
            else {
                for (var key in p) {
                    if (p[key] > max) {
                        max = p[key];
                        d = key;
                    }
                }
            }
            if (d === 'bottom' || d === 'top') {
                if (p['left'] > panel.width / 2 && p['right'] > panel.width / 2) {
                    h = '';
                }
                else {
                    h = p['left'] > p['right'] ? 'end' : 'start';
                }
            }
            else {
                if (p['top'] > panel.height / 2 && p['bottom'] > panel.height / 2) {
                    h = '';
                }
                else {
                    h = p['top'] > p['bottom'] ? 'end' : 'start';
                }
            }
            this.opt.placement = h ? d + "-" + h : d;
            console.log(this.opt.placement);
            this.el.setAttribute('placement', this.opt.placement);
        };
        VPopover.prototype.show = function () {
            var _this = this;
            this.el.style.display = 'flex';
            this.panel = {
                width: this.el.offsetWidth,
                height: this.el.offsetHeight
            };
            this.getPosition();
            this.computedStyle();
            setTimeout(function () {
                _this.el.style.transition = '0.3s';
                _this.el.setAttribute('visible', '');
            }, 20);
        };
        VPopover.prototype.hide = function () {
            this.el.removeAttribute('visible');
            this.mask.hide();
        };
        return VPopover;
    }(Utils));
    var default_1$12 = /** @class */ (function () {
        function default_1(option) {
            return new VPopover(option);
        }
        return default_1;
    }());

    function tpl$w(locals) {var pug_html = "";var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, opt, step) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['rate']], [true]), false, true)+pug.attr("half", opt.half, true, true)) + "\u003E";
    var arr = new Array(opt.length);
    pug_html = pug_html + "\u003Cinput" + (pug.attr("class", pug.classes([css['rate-core']], [true]), false, true)+" type=\"range\""+pug.attr("min", opt.min, true, true)+pug.attr("max", opt.length * opt.step, true, true)+pug.attr("value", opt.value, true, true)+pug.attr("step", step, true, true)+pug.attr("disabled", opt.readonly, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['rate-default']], [true]), false, true)+pug.attr("style", pug.style(`color: ${opt.color.default}`), true, true)) + "\u003E";
    // iterate arr
    ;(function(){
      var $$obj = arr;
      if ('number' == typeof $$obj.length) {
          for (var pug_index0 = 0, $$l = $$obj.length; pug_index0 < $$l; pug_index0++) {
            var item = $$obj[pug_index0];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['rate-item']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg arial-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", "#icon-" + opt.icon.default, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var pug_index0 in $$obj) {
          $$l++;
          var item = $$obj[pug_index0];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['rate-item']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg arial-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", "#icon-" + opt.icon.default, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['rate-active']], [true]), false, true)+pug.attr("style", pug.style(`color: ${opt.color.active}`), true, true)) + "\u003E";
    // iterate arr
    ;(function(){
      var $$obj = arr;
      if ('number' == typeof $$obj.length) {
          for (var pug_index1 = 0, $$l = $$obj.length; pug_index1 < $$l; pug_index1++) {
            var item = $$obj[pug_index1];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['rate-item']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg arial-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", "#icon-" + opt.icon.active, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var pug_index1 in $$obj) {
          $$l++;
          var item = $$obj[pug_index1];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['rate-item']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg arial-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", "#icon-" + opt.icon.active, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"opt" in locals_for_with?locals_for_with.opt:typeof opt!=="undefined"?opt:undefined,"step" in locals_for_with?locals_for_with.step:typeof step!=="undefined"?step:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var rate = "v-rate";
    var css$A = {
    	rate: rate,
    	"rate-core": "v-rate-core",
    	"rate-default": "v-rate-default",
    	"rate-active": "v-rate-active",
    	"rate-item": "v-rate-item"
    };

    var VRate = /** @class */ (function (_super) {
        __extends(VRate, _super);
        function VRate(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                length: 5,
                min: 0,
                max: 5,
                value: 1,
                step: 1,
                half: false,
                icon: {
                    default: 'star',
                    active: 'star-fill'
                },
                color: {
                    default: '',
                    active: ''
                },
                readonly: false
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.el.className = css$A['rate'];
            _this.render();
            _this.renderActive(_this.opt.value);
            _this.bindChangeEvent();
            return _this;
        }
        VRate.prototype.render = function () {
            var opt = this.opt;
            var step = (opt.length - opt.min) / opt.length;
            if (opt.half) {
                step = step / 2;
            }
            var html = tpl$w({
                css: css$A,
                opt: opt,
                step: step
            });
            var el = this.parseHtmlToDom(html);
            this.el.parentNode.replaceChild(el, this.el);
            this.el = el;
            this.active = this.el.querySelector("." + css$A['rate-active']);
        };
        VRate.prototype.renderActive = function (value) {
            var _a = this.opt, min = _a.min, length = _a.length;
            var width = value / (length - min) * 100 + '%';
            this.active.style.width = width;
        };
        VRate.prototype.bindChangeEvent = function () {
            var _this = this;
            var core = this.el.querySelector('input');
            core.addEventListener('input', function (e) {
                _this.opt.value = parseFloat(core.value);
                _this.renderActive(_this.opt.value);
            });
        };
        return VRate;
    }(Utils));
    var default_1$11 = /** @class */ (function () {
        function default_1(option) {
            return new VRate(option);
        }
        return default_1;
    }());

    var search = "v-search";
    var css$z = {
    	search: search,
    	"search-clear": "v-search-clear",
    	"search-content": "v-search-content",
    	"search-core": "v-search-core",
    	"search-prefix": "v-search-prefix",
    	"search-suffix": "v-search-suffix",
    	"search-classify": "v-search-classify",
    	"search-button": "v-search-button",
    	"search-more": "v-search-more"
    };

    function tpl$v(locals) {var pug_html = "";var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['search']], [true]), false, true)+pug.attr("radius", t.opt.radius, true, true)+pug.attr("shape", t.opt.shape, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['search-prefix']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cform" + (pug.attr("class", pug.classes([css['search-content']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-search\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    pug_html = pug_html + "\u003Cinput" + (pug.attr("class", pug.classes([css['search-core']], [true]), false, true)+" type=\"search\" autocomplete=\"off\""+pug.attr("placeholder", t.opt.placeholder, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['search-clear']], [true]), false, true)+" aria-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-clear\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fform\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['search-suffix']], [true]), false, true)) + "\u003E";
    if (t.opt.more) {
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['search-more']], [true]), false, true)+" aria-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-screen\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var sticky = "v-sticky";
    var css$y = {
    	sticky: sticky,
    	"sticky-content": "v-sticky-content"
    };

    var VSticky = /** @class */ (function (_super) {
        __extends(VSticky, _super);
        function VSticky(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                offset: 0
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.scroll = _this.parents(_this.el, pcss['section']);
            _this.render();
            _this.bindObverse();
            return _this;
        }
        VSticky.prototype.renderFixed = function () {
            var offset = this.opt.offset;
            var center = this.center;
            this.content.style.position = 'fixed';
            this.content.style.top = offset + this.scroll.offsetTop + "px";
            this.content.style.left = '0px';
            this.content.style.right = '0px';
            this.content.style.paddingLeft = center.left + "px";
        };
        VSticky.prototype.cancelFixed = function () {
            this.content.removeAttribute('style');
        };
        VSticky.prototype.renderMove = function () {
            if (!this.opt.parent)
                return;
            this.content.style.position = 'absolute';
            this.content.style.bottom = '0px';
            this.content.style.top = 'auto';
        };
        VSticky.prototype.bindObverse = function () {
            var _this = this;
            var wt = this.offset(this.scroll).top;
            var parent = this.opt.parent;
            var offset = this.offset(this.el);
            var poffset = parent ? this.offset(parent) : { left: 0, top: 0 };
            this.scroll.addEventListener('scroll', function () {
                var st = _this.scroll.scrollTop;
                if (parent) {
                    if (st < poffset.top - wt + parent.offsetHeight - _this.el.offsetHeight && st >= offset.top - wt - _this.opt.offset) {
                        _this.renderFixed();
                    }
                    else if (st >= poffset.top - wt + parent.offsetHeight - _this.el.offsetHeight) {
                        _this.renderMove();
                    }
                    else {
                        _this.cancelFixed();
                    }
                }
                else {
                    if (st >= offset.top - wt - _this.opt.offset) {
                        _this.renderFixed();
                    }
                    else {
                        _this.cancelFixed();
                    }
                }
            });
        };
        VSticky.prototype.render = function () {
            var pos = this.el.getBoundingClientRect();
            this.center = {
                width: pos.width,
                height: pos.height,
                left: pos.left
            };
            var sticky = document.createElement('div');
            sticky.className = css$y['sticky'];
            sticky.style.width = this.center.width + "px";
            sticky.style.height = this.center.height + "px";
            var stickycontent = document.createElement('div');
            stickycontent.className = css$y['sticky-content'];
            sticky.appendChild(stickycontent);
            var el = this.el;
            el.parentNode.replaceChild(sticky, el);
            stickycontent.appendChild(el);
            this.el = sticky;
            this.content = this.el.querySelector("." + css$y['sticky-content']);
        };
        return VSticky;
    }(Utils));
    var default_1$10 = /** @class */ (function () {
        function default_1(option) {
            return new VSticky(option);
        }
        return default_1;
    }());

    var classification = "v-classification";
    var css$x = {
    	classification: classification,
    	"classification-item": "v-classification-item",
    	"classification-content": "v-classification-content",
    	"classification-more": "v-classification-more",
    	"classification-title": "v-classification-title",
    	"classification-option": "v-classification-option",
    	"classification-label": "v-classification-label",
    	"classification-input": "v-classification-input"
    };

    function tpl$u(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['classification']], [true]), false, true)+pug.attr("radius", t.opt.radius, true, true)) + "\u003E";
    // iterate t.opt.options
    ;(function(){
      var $$obj = t.opt.options;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var group = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['classification-item']], [true]), false, true)+pug.attr("type", group[t.opt.fields['type']], true, true)+pug.attr("key", group[t.opt.fields['key']], true, true)+pug.attr("open", group[t.opt.fields['open']], true, true)+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['classification-title']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cspan\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = group[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    if (group[t.opt.fields['type']] === 'single' || group[t.opt.fields['type']] === 'multiple') {
    if (group[t.opt.fields['options']].length > 6) {
    pug_html = pug_html + "\u003Cspan" + (pug.attr("class", pug.classes([css['classification-more']], [true]), false, true)+" action=\"onToggle\""+pug.attr("col", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cspan" + (" action=\"onToggle\""+pug.attr("col", index, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '展开') ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    pug_html = pug_html + "\u003Cspan" + (" action=\"onToggle\""+pug.attr("col", index, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '收起') ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    pug_html = pug_html + "\u003Csvg" + (" aria-hidden=\"true\" action=\"onToggle\""+pug.attr("col", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (" xlink:href=\"#icon-point-down\" action=\"onToggle\""+pug.attr("col", index, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fspan\u003E";
    }
    }
    pug_html = pug_html + "\u003C\u002Fh2\u003E";
    if (group[t.opt.fields['type']] === 'single' || group[t.opt.fields['type']] === 'multiple') {
    pug_html = pug_html + "\u003Cul" + (pug.attr("class", pug.classes([css['classification-content']], [true]), false, true)) + "\u003E";
    // iterate group[t.opt.fields['options']]
    ;(function(){
      var $$obj = group[t.opt.fields['options']];
      if ('number' == typeof $$obj.length) {
          for (var i = 0, $$l = $$obj.length; i < $$l; i++) {
            var item = $$obj[i];
    pug_html = pug_html + "\u003Cli" + (pug.attr("class", pug.classes([css['classification-option']], [true]), false, true)+pug.attr("active", item.active, true, true)+pug.attr("style", pug.style(`width:${100/t.opt.columns}%`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['classification-label']], [true]), false, true)+pug.attr("col", index, true, true)+pug.attr("index", i, true, true)+" action=\"onPicker\""+pug.attr("key", group[t.opt.fields['key']], true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fli\u003E";
          }
      } else {
        var $$l = 0;
        for (var i in $$obj) {
          $$l++;
          var item = $$obj[i];
    pug_html = pug_html + "\u003Cli" + (pug.attr("class", pug.classes([css['classification-option']], [true]), false, true)+pug.attr("active", item.active, true, true)+pug.attr("style", pug.style(`width:${100/t.opt.columns}%`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['classification-label']], [true]), false, true)+pug.attr("col", index, true, true)+pug.attr("index", i, true, true)+" action=\"onPicker\""+pug.attr("key", group[t.opt.fields['key']], true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fli\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Ful\u003E";
    }
    if (group[t.opt.fields['type']] === 'input') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['classification-input'],group[t.opt.fields['type']]], [true,true]), false, true)+pug.attr("key", group[t.opt.fields['key']], true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cinput" + (" type=\"text\""+pug.attr("placeholder", group[t.opt.fields['placeholder']], true, true)+pug.attr("value", t.opt.value[index], true, true)) + "\u003E\u003C\u002Fdiv\u003E";
    }
    if (group[t.opt.fields['type']] === 'date' || group[t.opt.fields['type']] === 'cascader' || group[t.opt.fields['type']] === 'picker') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['classification-input'],group[t.opt.fields['type']]], [true,true]), false, true)+pug.attr("key", group[t.opt.fields['key']], true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cinput" + (" type=\"text\" readonly=\"readonly\""+pug.attr("placeholder", group[t.opt.fields['placeholder']], true, true)) + "\u003E";
    if (group[t.opt.fields['type']] === 'date') {
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-date\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    else {
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-point-down\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var group = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['classification-item']], [true]), false, true)+pug.attr("type", group[t.opt.fields['type']], true, true)+pug.attr("key", group[t.opt.fields['key']], true, true)+pug.attr("open", group[t.opt.fields['open']], true, true)+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['classification-title']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cspan\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = group[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    if (group[t.opt.fields['type']] === 'single' || group[t.opt.fields['type']] === 'multiple') {
    if (group[t.opt.fields['options']].length > 6) {
    pug_html = pug_html + "\u003Cspan" + (pug.attr("class", pug.classes([css['classification-more']], [true]), false, true)+" action=\"onToggle\""+pug.attr("col", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cspan" + (" action=\"onToggle\""+pug.attr("col", index, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '展开') ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    pug_html = pug_html + "\u003Cspan" + (" action=\"onToggle\""+pug.attr("col", index, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '收起') ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    pug_html = pug_html + "\u003Csvg" + (" aria-hidden=\"true\" action=\"onToggle\""+pug.attr("col", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (" xlink:href=\"#icon-point-down\" action=\"onToggle\""+pug.attr("col", index, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fspan\u003E";
    }
    }
    pug_html = pug_html + "\u003C\u002Fh2\u003E";
    if (group[t.opt.fields['type']] === 'single' || group[t.opt.fields['type']] === 'multiple') {
    pug_html = pug_html + "\u003Cul" + (pug.attr("class", pug.classes([css['classification-content']], [true]), false, true)) + "\u003E";
    // iterate group[t.opt.fields['options']]
    ;(function(){
      var $$obj = group[t.opt.fields['options']];
      if ('number' == typeof $$obj.length) {
          for (var i = 0, $$l = $$obj.length; i < $$l; i++) {
            var item = $$obj[i];
    pug_html = pug_html + "\u003Cli" + (pug.attr("class", pug.classes([css['classification-option']], [true]), false, true)+pug.attr("active", item.active, true, true)+pug.attr("style", pug.style(`width:${100/t.opt.columns}%`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['classification-label']], [true]), false, true)+pug.attr("col", index, true, true)+pug.attr("index", i, true, true)+" action=\"onPicker\""+pug.attr("key", group[t.opt.fields['key']], true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fli\u003E";
          }
      } else {
        var $$l = 0;
        for (var i in $$obj) {
          $$l++;
          var item = $$obj[i];
    pug_html = pug_html + "\u003Cli" + (pug.attr("class", pug.classes([css['classification-option']], [true]), false, true)+pug.attr("active", item.active, true, true)+pug.attr("style", pug.style(`width:${100/t.opt.columns}%`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['classification-label']], [true]), false, true)+pug.attr("col", index, true, true)+pug.attr("index", i, true, true)+" action=\"onPicker\""+pug.attr("key", group[t.opt.fields['key']], true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fli\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Ful\u003E";
    }
    if (group[t.opt.fields['type']] === 'input') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['classification-input'],group[t.opt.fields['type']]], [true,true]), false, true)+pug.attr("key", group[t.opt.fields['key']], true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cinput" + (" type=\"text\""+pug.attr("placeholder", group[t.opt.fields['placeholder']], true, true)+pug.attr("value", t.opt.value[index], true, true)) + "\u003E\u003C\u002Fdiv\u003E";
    }
    if (group[t.opt.fields['type']] === 'date' || group[t.opt.fields['type']] === 'cascader' || group[t.opt.fields['type']] === 'picker') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['classification-input'],group[t.opt.fields['type']]], [true,true]), false, true)+pug.attr("key", group[t.opt.fields['key']], true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cinput" + (" type=\"text\" readonly=\"readonly\""+pug.attr("placeholder", group[t.opt.fields['placeholder']], true, true)) + "\u003E";
    if (group[t.opt.fields['type']] === 'date') {
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-date\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    else {
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-point-down\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VClassification = /** @class */ (function (_super) {
        __extends(VClassification, _super);
        function VClassification(option) {
            var _this = _super.call(this) || this;
            _this.value = [];
            _this.opt = {
                el: '',
                mark: 'name',
                radius: 'conner',
                columns: 4,
                fields: {
                    name: 'name',
                    options: 'options',
                    type: 'type',
                    key: 'key',
                    placeholder: 'placeholder',
                    open: 'open'
                },
                value: []
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.generateOption();
            _this.render();
            return _this;
        }
        VClassification.prototype.render = function () {
            var _this = this;
            var t = this;
            var html = tpl$u({
                css: css$x,
                t: t
            });
            var el = this.parseHtmlToDom(html);
            this.el.parentNode.replaceChild(el, this.el);
            this.el = el;
            this.items = this.el.querySelectorAll("." + css$x['classification-item']);
            this.items.forEach(function (item, index) {
                var citem = item;
                _this.bindClickEvent(citem, index);
            });
        };
        VClassification.prototype.bindClickEvent = function (target, index) {
            var options = this.opt.options;
            var type = target.getAttribute('type');
            var data = options[index];
            switch (type) {
                case 'single':
                    this.bindClick(target, 'single');
                    break;
                case 'multiple':
                    this.bindClick(target, 'multiple');
                    break;
                case 'cascader':
                    this.bindCascader(target, data, index);
                    break;
                case 'picker':
                    this.bindPicker(target);
                    break;
                case 'input':
                    this.bindInputListen(target);
                    break;
            }
        };
        VClassification.prototype.getItemIndex = function (key) {
            var _this = this;
            var options = this.opt.options;
            var index = options.findIndex(function (a) { return a[_this.opt.fields['key']] === key; });
            return index;
        };
        /**
         * 单选/多选
         * @param dom
         * @param type
         */
        VClassification.prototype.bindClick = function (dom, type) {
            var _this = this;
            var opt = this.opt;
            var fields = opt.fields, mark = opt.mark, value = opt.value;
            dom.onclick = function (e) {
                var target = e.target;
                if (target.className !== css$x['classification-label'])
                    return;
                var col = parseInt(target.getAttribute('col'));
                var index = parseInt(target.getAttribute('index'));
                var current = _this.opt.options[col][fields['options']][index][fields[mark]];
                var cvalue = value[col];
                if (typeof cvalue === 'string') {
                    _this.opt.value[col] = current === cvalue ? '' : current;
                }
                else {
                    var i = cvalue.indexOf(current);
                    if (i < 0) {
                        _this.opt.value[col].push(current);
                    }
                    else {
                        _this.opt.value[col].splice(i, 1);
                    }
                }
                _this.generateOption();
                _this.render();
            };
        };
        VClassification.prototype.bindCascader = function (target, data, index) {
            new default_1$1n({
                el: target,
                data: data[this.opt.fields['options']]
            });
        };
        VClassification.prototype.bindPicker = function (target) { };
        VClassification.prototype.bindInputListen = function (target) {
            var _this = this;
            var index = parseInt(target.getAttribute('index'));
            var input = target.querySelector('input');
            input.oninput = function () {
                _this.opt.value[index] = input.value;
                console.log(_this.opt.value);
            };
        };
        /**
         * 根据option和value给option添加选中效果
         */
        VClassification.prototype.generateOption = function () {
            var _this = this;
            var opt = this.opt;
            var value = opt.value, options = opt.options, fields = opt.fields, mark = opt.mark;
            options.forEach(function (option, index) {
                var opts = option[fields['options']];
                var type = option[fields['type']];
                if (type === 'single' || type === 'multiple') {
                    var open = option[fields['open']];
                    var cvalue = value[index] ? value[index] : type === 'multiple' ? [] : '';
                    _this.opt.value[index] = cvalue;
                    if (open === undefined) {
                        _this.opt.options[index][fields['open']] = false;
                    }
                    var cv_1 = typeof cvalue === 'object' ? cvalue.join(',') : cvalue;
                    if (opts) {
                        opts.forEach(function (opt, i) {
                            if (cv_1.indexOf(opt[fields[mark]]) >= 0) {
                                opts[i]['active'] = true;
                            }
                            else {
                                opts[i]['active'] = false;
                            }
                        });
                    }
                    _this.opt.options[index][fields['options']] = opts;
                }
            });
        };
        return VClassification;
    }(Utils));
    var default_1$$ = /** @class */ (function () {
        function default_1(option) {
            return new VClassification(option);
        }
        return default_1;
    }());

    var VSearch = /** @class */ (function (_super) {
        __extends(VSearch, _super);
        function VSearch(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                placeholder: '关键词',
                position: 'static',
                value: '',
                radius: 'conner',
                more: false
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            return _this;
        }
        VSearch.prototype.render = function () {
            var t = this;
            var html = tpl$v({
                css: css$z,
                t: t
            });
            var el = this.parseHtmlToDom(html);
            this.el.parentNode.replaceChild(el, this.el);
            this.el = el;
            this.core = this.el.querySelector("." + css$z['search-core']);
            this.clear = this.el.querySelector("." + css$z['search-clear']);
            this.more = this.el.querySelector("." + css$z['search-more']);
            this.renderClear();
            this.onClear();
            this.bindInput();
            this.renderFixed();
            this.renderMore();
        };
        VSearch.prototype.renderFixed = function () {
            if (this.opt.position === 'fixed') {
                new default_1$10({
                    el: this.el
                });
            }
        };
        VSearch.prototype.bindInput = function () {
            var _this = this;
            var core = this.core;
            core.oninput = function () {
                _this.opt.value = core.value;
                _this.renderClear();
            };
        };
        VSearch.prototype.renderClear = function () {
            var _a = this, el = _a.el, opt = _a.opt;
            var value = opt.value;
            if (value) {
                el.setAttribute('clear', '');
            }
            else {
                el.removeAttribute('clear');
            }
        };
        VSearch.prototype.onClear = function () {
            var _this = this;
            this.clear.onclick = function () {
                _this.opt.value = '';
                _this.core.value = '';
                _this.renderClear();
            };
        };
        VSearch.prototype.renderMore = function () {
            var _this = this;
            var _a = this, more = _a.more; _a.el; var opt = _a.opt, core = _a.core;
            var radius = opt.radius, options = opt.options;
            if (!more)
                return;
            more.onclick = function () {
                var isActive = more.getAttribute('active') !== null;
                if (isActive)
                    return;
                more.setAttribute('active', '');
                _this.drawer = new default_1$1q({
                    el: core,
                    placement: 'top',
                    origin: true,
                    radius: radius,
                    clickable: true,
                    buttons: [{ name: '重置', id: 'reset' }, { name: '确认', id: 'onConfirm' }],
                    onButtonClick: function (cb) {
                        more.removeAttribute('active');
                    },
                    onReady: function (el) {
                        var dom = document.createElement('div');
                        el.appendChild(dom);
                        _this.condition = new default_1$$({
                            el: dom,
                            radius: radius,
                            options: options
                        });
                    }
                });
            };
        };
        VSearch.prototype.hide = function () {
            this.more.removeAttribute('active');
            this.drawer.hide();
        };
        return VSearch;
    }(Utils));
    var default_1$_ = /** @class */ (function () {
        function default_1(option) {
            return new VSearch(option);
        }
        return default_1;
    }());

    function tpl$t(locals) {var pug_html = "";var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, opt) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['slider']], [true]), false, true)+pug.attr("range", opt.range, true, true)+pug.attr("direction", opt.direction, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['slider-active']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['slider-handle']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cinput" + (pug.attr("class", pug.classes([css['slider-core']], [true]), false, true)+" type=\"range\" index=\"0\""+pug.attr("min", opt.min, true, true)+pug.attr("max", opt.max, true, true)+pug.attr("step", opt.step, true, true)+pug.attr("value", opt.value[0], true, true)) + "\u003E";
    if (opt.range) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['slider-handle']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cinput" + (pug.attr("class", pug.classes([css['slider-core']], [true]), false, true)+" type=\"range\" index=\"1\""+pug.attr("min", opt.min, true, true)+pug.attr("max", opt.max, true, true)+pug.attr("step", opt.step, true, true)+pug.attr("value", opt.value[1], true, true)) + "\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"opt" in locals_for_with?locals_for_with.opt:typeof opt!=="undefined"?opt:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var slider = "v-slider";
    var css$w = {
    	slider: slider,
    	"slider-active": "v-slider-active",
    	"slider-handle": "v-slider-handle",
    	"slider-core": "v-slider-core"
    };

    var VSlider = /** @class */ (function (_super) {
        __extends(VSlider, _super);
        function VSlider(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                range: false,
                direction: 'horizontal',
                min: 0,
                max: 100,
                step: 1,
                value: [0]
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            _this.size = _this.opt.direction === 'vertical' ? _this.el.offsetHeight : _this.el.offsetWidth;
            _this.setValue(_this.opt.value);
            return _this;
        }
        VSlider.prototype.renderActive = function () {
            var dis = [];
            var handles = this.el.querySelectorAll("." + css$w['slider-handle']);
            var active = this.el.querySelector("." + css$w['slider-active']);
            var p = this.opt.direction === 'vertical' ? 'bottom' : 'left';
            handles.forEach(function (handle) {
                dis.push(parseInt(handle.style[p]));
            });
            var handle = handles[0].offsetWidth / 2;
            var sort = dis.sort(function (a, b) { return a - b; });
            if (this.opt.direction === 'horizontal') {
                if (this.opt.range) {
                    active.style.left = sort[0] + handle + "px";
                    active.style.width = sort[1] - sort[0] + handle + "px";
                }
                else {
                    active.style.width = sort[0] + handle + "px";
                }
            }
            else {
                if (this.opt.range) {
                    active.style.bottom = sort[0] + handle + "px";
                    active.style.height = sort[1] - sort[0] + handle + "px";
                }
                else {
                    active.style.height = sort[0] + handle + "px";
                }
            }
        };
        VSlider.prototype.parseValueToPosition = function (value) {
            var handles = this.el.querySelectorAll("." + css$w['slider-handle']);
            var handle = handles[0];
            var _a = this.opt, min = _a.min, max = _a.max;
            var scale = (value - min) / (max - min);
            var dis = scale * (this.size - handle.offsetWidth);
            return dis;
        };
        VSlider.prototype.renderHandle = function (value, index) {
            var direction = this.opt.direction;
            var p = direction === 'vertical' ? 'bottom' : 'left';
            var handles = this.el.querySelectorAll("." + css$w['slider-handle']);
            var handle = handles[index];
            var dis = this.parseValueToPosition(value[index]);
            handle.style[p] = dis + "px";
        };
        VSlider.prototype.setValue = function (value) {
            var _this = this;
            var cores = this.el.querySelectorAll('input');
            cores.forEach(function (core, index) {
                core.setAttribute('value', "" + value[index]);
                _this.renderHandle(value, index);
                _this.bindChangeEvent(core, index);
            });
            this.renderActive();
        };
        VSlider.prototype.render = function () {
            var opt = this.opt;
            var html = tpl$t({
                opt: opt,
                css: css$w
            });
            var el = this.parseHtmlToDom(html);
            this.el.parentNode.replaceChild(el, this.el);
            this.el = el;
        };
        VSlider.prototype.bindChangeEvent = function (core, index) {
            var _this = this;
            core.addEventListener('input', function () {
                _this.opt.value[index] = parseInt(core.value);
                _this.renderHandle(_this.opt.value, index);
                _this.renderActive();
            });
        };
        return VSlider;
    }(Utils));
    var default_1$Z = /** @class */ (function () {
        function default_1(option) {
            return new VSlider(option);
        }
        return default_1;
    }());

    var stepper = "v-stepper";
    var css$v = {
    	stepper: stepper,
    	"stepper-handle": "v-stepper-handle",
    	"stepper-core": "v-stepper-core"
    };

    function tpl$s(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, opt) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['toast']], [true]), false, true)+pug.attr("shape", opt.shape, true, true)+pug.attr("placement", opt.placement, true, true)+pug.attr("type", opt.type, true, true)+pug.attr("style", pug.style(`background-color:${opt.color}`), true, true)) + "\u003E";
    if (opt.icon) {
    pug_html = pug_html + "\u003Csvg" + (" aria-hidden=\"true\""+pug.attr("spin", opt.spin, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", `#icon-${opt.icon}`, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['toast-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = opt.message) ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E";
    }.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"opt" in locals_for_with?locals_for_with.opt:typeof opt!=="undefined"?opt:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var toast = "v-toast";
    var toastSpin = "v-toastSpin";
    var css$u = {
    	toast: toast,
    	"toast-label": "v-toast-label",
    	toastSpin: toastSpin
    };

    var VToast = /** @class */ (function (_super) {
        __extends(VToast, _super);
        function VToast(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                type: '',
                placement: 'end',
                shape: 'conner',
                duration: 3000,
                message: '',
                mask: true,
                spin: false
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VToast.prototype.render = function () {
            var _this = this;
            var opt = this.opt;
            opt.mask;
            var html = tpl$s({
                css: css$u,
                opt: opt
            });
            this.mask = new default_1$1s({
                placement: opt.placement,
                background: 'rgba(0,0,0,0)',
                clickable: false,
                el: this.opt.el,
                onReady: function (mask) {
                    _this.el = mask.appendChild(_this.parseHtmlToDom(html));
                    _this.show();
                    if (_this.opt.duration) {
                        setTimeout(function () {
                            _this.hide();
                        }, _this.opt.duration);
                    }
                }
            });
        };
        VToast.prototype.show = function () {
            var _this = this;
            this.el.style.display = this.opt.shape === 'square' ? 'flex' : 'inline-block';
            setTimeout(function () {
                _this.el.setAttribute('visible', '');
            }, 10);
        };
        VToast.prototype.hide = function () {
            this.el.removeAttribute('visible');
            this.mask.hide();
        };
        return VToast;
    }(Utils));
    var default_1$Y = /** @class */ (function () {
        function default_1(option) {
            return new VToast(option);
        }
        return default_1;
    }());

    function tpl$r(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['stepper']], [true]), false, true)+pug.attr("shape", t.opt.shape, true, true)+pug.attr("disabled", t.opt.disabled, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['stepper-handle']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\" action=\"onReduce\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-reduce\" action=\"onReduce\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['stepper-core']], [true]), false, true)+pug.attr("style", pug.style(`min-width:${t.length > 2 ? t.length : 2}em;`), true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.value) ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['stepper-handle']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\" action=\"onAdd\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-add\" action=\"onAdd\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VStepper = /** @class */ (function (_super) {
        __extends(VStepper, _super);
        function VStepper(option) {
            var _this = _super.call(this) || this;
            _this.length = 2;
            _this.float = 0;
            _this.opt = {
                el: '',
                min: 0,
                value: 0,
                step: 1,
                disabled: false,
                tips: ['已是最小值', '已是最大值'],
                onChange: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            if (_this.opt.max) {
                _this.length = ("" + _this.opt.max).length;
            }
            _this.float = "this.opt.step".split('.')[1].length;
            _this.render();
            return _this;
        }
        VStepper.prototype.render = function () {
            var t = this;
            var html = tpl$r({
                css: css$v,
                t: t
            });
            var el = this.parseHtmlToDom(html);
            this.el.parentNode.replaceChild(el, this.el);
            this.el = el;
            this.core = this.el.querySelector("." + css$v['stepper-core']);
            var handles = this.el.querySelectorAll("." + css$v['stepper-handle']);
            this.prev = handles[0];
            this.next = handles[1];
            this.renderDisabled();
            this.bindClick();
        };
        VStepper.prototype.bindClick = function () {
            var _this = this;
            if (this.opt.disabled)
                return;
            this.el.onclick = function (e) {
                var target = e.target;
                var action = target.getAttribute('action');
                if (action) {
                    _this[action]();
                }
            };
        };
        VStepper.prototype.onReduce = function () {
            if (this.opt.value >= this.opt.min + this.opt.step) {
                this.opt.value = this.opt.value - this.opt.step;
                this.setValue();
            }
            else {
                this.showToast(this.opt.tips[0]);
            }
        };
        VStepper.prototype.showToast = function (message) {
            this.toast = new default_1$Y({
                el: this.el,
                message: message
            });
        };
        VStepper.prototype.onAdd = function () {
            if (this.opt.value <= this.opt.max - this.opt.step || !this.opt.max) {
                this.opt.value = this.opt.value + this.opt.step;
                this.setValue();
            }
            else {
                this.showToast(this.opt.tips[1]);
            }
        };
        VStepper.prototype.setValue = function () {
            var _a = this, core = _a.core, opt = _a.opt;
            this.opt.value = parseFloat(this.opt.value.toFixed(this.float));
            var value = opt.value;
            core.innerHTML = "" + value;
            this.opt.onChange(value);
            this.renderDisabled();
        };
        VStepper.prototype.renderDisabled = function () {
            var _a = this.opt, value = _a.value, min = _a.min, max = _a.max;
            if (value === min) {
                this.prev.setAttribute('disabled', '');
                this.next.removeAttribute('disabled');
            }
            else if (value === max) {
                this.next.setAttribute('disabled', '');
                this.prev.removeAttribute('disabled');
            }
            else {
                this.prev.removeAttribute('disabled');
                this.next.removeAttribute('disabled');
            }
        };
        return VStepper;
    }(Utils));
    var default_1$X = /** @class */ (function () {
        function default_1(option) {
            return new VStepper(option);
        }
        return default_1;
    }());

    var swiper = "v-swiper";
    var css$t = {
    	swiper: swiper,
    	"swiper-content": "v-swiper-content",
    	"swiper-item": "v-swiper-item",
    	"swiper-indicate": "v-swiper-indicate",
    	"swiper-indicate-item": "v-swiper-indicate-item"
    };

    var ElementMonitoring = /** @class */ (function (_super) {
        __extends(ElementMonitoring, _super);
        function ElementMonitoring(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                onResize: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.mounted();
            return _this;
        }
        ElementMonitoring.prototype.mounted = function () {
            this.createIframe();
        };
        ElementMonitoring.prototype.createIframe = function () {
            var iframe = document.createElement('iframe');
            iframe.style.cssText = "position:absolute;top:0;left:0;width:100%;height:100%;z-index:-1;opacity:0;";
            this.el = this.opt.el.appendChild(iframe);
            this.opt.el.style.position = 'relative';
            this.bindEvent();
        };
        ElementMonitoring.prototype.bindEvent = function () {
            var _this = this;
            this.el.contentWindow.addEventListener('resize', function (e) {
                if (e.timeStamp < 100)
                    return;
                _this.opt.onResize({
                    el: _this.opt.el,
                    width: _this.opt.el.offsetWidth,
                    height: _this.opt.el.offsetHeight
                });
            });
        };
        return ElementMonitoring;
    }(Utils));
    var default_1$W = /** @class */ (function () {
        function default_1(option) {
            return new ElementMonitoring(option);
        }
        return default_1;
    }());

    var Swiper = /** @class */ (function (_super) {
        __extends(Swiper, _super);
        function Swiper(option) {
            var _this = _super.call(this) || this;
            _this.offsets = 0;
            _this.duration = 0;
            _this.momentumThreshold = 15;
            _this.momentumTimeThreshold = 300;
            _this.isStarted = false;
            _this.min = 0;
            _this.max = 0;
            _this.opt = {
                height: 200,
                current: 0,
                onChange: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.isHorizontal = _this.opt.direction === 'horizontal';
            _this.init();
            _this.bindResize();
            return _this;
        }
        Swiper.prototype.bindResize = function () {
            var _this = this;
            new default_1$W({
                el: this.opt.el,
                onResize: function (cb) {
                    _this.init();
                }
            });
        };
        Swiper.prototype.init = function () {
            var _a = this, opt = _a.opt, isHorizontal = _a.isHorizontal;
            var el = opt.el, content = opt.content, current = opt.current;
            this.width = this.opt.width ? this.opt.width : el.offsetWidth;
            this.items = this.opt.items ? this.opt.items : content.querySelectorAll(this.opt.child);
            this.length = this.items.length;
            this.initStyle();
            var ow = el.offsetWidth;
            var oh = el.offsetHeight;
            var sw = content.scrollWidth;
            var sh = content.scrollHeight;
            this.min = isHorizontal ? ow - sw : oh - sh;
            this.offsets = isHorizontal ? -current * ow : -current * oh;
            this.setStyle();
            this.bindEvent();
            this.autoplay();
        };
        Swiper.prototype.autoplay = function () {
            var _this = this;
            if (!this.opt.autoplay)
                return;
            var opt = this.opt;
            var duration = opt.duration;
            this.timer = setInterval(function () {
                _this.moveNext();
            }, duration);
        };
        Swiper.prototype.movePrev = function () {
            this.opt.current = this.opt.current >= 0 ? this.opt.current - 1 : this.length - 1;
            this.resetMove();
            this.slideTo(this.opt.current);
        };
        Swiper.prototype.moveNext = function () {
            var length = this.length;
            this.opt.current = this.opt.current < length ? this.opt.current + 1 : 1;
            this.resetMove();
            this.slideTo(this.opt.current);
        };
        Swiper.prototype.resetMove = function () {
            if (this.opt.current === this.length) {
                this.transformFirst();
            }
            else if (this.opt.current === -1) {
                this.transformLast();
            }
            else {
                if (this.opt.vis === 1) {
                    this.last.style.transform = '';
                    this.first.style.transform = '';
                }
            }
        };
        Swiper.prototype.slideTo = function (index) {
            var _this = this;
            var _a = this, width = _a.width, opt = _a.opt, isHorizontal = _a.isHorizontal, length = _a.length, first = _a.first, last = _a.last;
            var height = opt.height;
            this.offsets = isHorizontal ? -index * width : -index * height;
            this.duration = this.opt.speed;
            this.bezier = "cubic-bezier(.25, .46, .45, .94)";
            this.setStyle();
            if (this.opt.vis > 1 && this.opt.vis < this.length) {
                if (index >= 1) {
                    setTimeout(function () {
                        _this.transformSecond(index);
                    }, this.duration);
                }
                if (index === length) {
                    setTimeout(function () {
                        _this.items.forEach(function (item) {
                            var citem = item;
                            citem.style.transform = '';
                        });
                        _this.items[1].style.transform = '';
                        _this.offsets = 0;
                        _this.duration = 0;
                        _this.setStyle();
                    }, this.duration);
                }
            }
            else {
                if (index === length - 1) {
                    this.transformFirst();
                    this.opt.onChange(this.opt.current);
                }
                else if (index === 0) {
                    this.transformLast();
                    this.opt.onChange(this.opt.current);
                }
                else if (index === length) {
                    setTimeout(function () {
                        _this.duration = 0;
                        _this.offsets = 0;
                        first.style.transform = '';
                        _this.setStyle();
                        _this.opt.onChange(_this.opt.current);
                    }, this.duration);
                }
                else if (index === -1) {
                    setTimeout(function () {
                        _this.opt.current = length - 1;
                        _this.offsets = isHorizontal ? -_this.opt.current * width : -_this.opt.current * height;
                        _this.duration = 0;
                        last.style.transform = '';
                        _this.setStyle();
                        _this.opt.onChange(_this.opt.current);
                    }, this.duration);
                }
                else {
                    this.opt.onChange(this.opt.current);
                }
            }
        };
        Swiper.prototype.transformSecond = function (index) {
            var _a = this, width = _a.width, opt = _a.opt, isHorizontal = _a.isHorizontal, length = _a.length;
            var height = opt.height;
            var item = this.items[index - 1];
            item.style.transform = isHorizontal ? "translate3d(" + length * width + "px, 0, 0)" : "translate3d(0, " + length * height + "px, 0)";
        };
        Swiper.prototype.initStyle = function () {
            var _a = this, opt = _a.opt, width = _a.width, items = _a.items, length = _a.length, isHorizontal = _a.isHorizontal;
            var content = opt.content, current = opt.current, height = opt.height, el = opt.el, vis = opt.vis;
            el.style.overflow = 'hidden';
            el.style.height = this.opt.vis < this.length ? height * vis + "px" : height + "px";
            if (isHorizontal) {
                content.style.width = length * width + "px";
            }
            else {
                content.style.height = length * height + "px";
            }
            items.forEach(function (item, index) {
                var c = item;
                c.style.width = width + "px";
                c.style.height = height + "px";
                if (current === index) {
                    c.setAttribute('active', '');
                }
            });
        };
        Swiper.prototype.bindEvent = function () {
            var el = this.opt.el;
            var items = this.items;
            this.last = items[this.length - 1];
            this.first = items[0];
            if (this.opt.vis > 1)
                return;
            el.ontouchstart = this.onStart.bind(this);
            el.ontouchmove = this.onMove.bind(this);
            el.ontouchend = this.onEnd.bind(this);
            el.ontouchcancel = this.onEnd.bind(this);
            // 兼容pc
            el.onmousedown = this.onStart.bind(this);
            el.onmousemove = this.onMove.bind(this);
            el.onmouseup = this.onEnd.bind(this);
            el.onmouseleave = this.onEnd.bind(this);
        };
        Swiper.prototype.onStart = function (e) {
            e.preventDefault();
            var isHorizontal = this.isHorizontal;
            clearInterval(this.timer);
            var point = e.changedTouches ? e.changedTouches[0] : e;
            this.isStarted = true;
            this.duration = 0;
            this.stop();
            this.point = isHorizontal ? point.pageX : point.pageY;
            this.momentumStart = this.start = this.offsets;
            this.startTime = new Date().getTime();
            if (!this.opt.loop)
                return;
            if (this.opt.current === this.length - 1) {
                this.transformFirst();
            }
            else if (this.opt.current === 0) {
                this.transformLast();
            }
            else {
                this.resetItemsTransform();
            }
        };
        Swiper.prototype.resetItemsTransform = function () {
            var _a = this, first = _a.first, last = _a.last;
            first.style.transform = '';
            last.style.transform = '';
        };
        Swiper.prototype.transformFirst = function () {
            var _a = this, first = _a.first, width = _a.width, opt = _a.opt, isHorizontal = _a.isHorizontal, length = _a.length;
            var height = opt.height;
            first.style.transform = isHorizontal ? "translate3d(" + length * width + "px, 0, 0)" : "translate3d(0, " + length * height + "px, 0)";
        };
        Swiper.prototype.transformLast = function () {
            var _a = this, last = _a.last, width = _a.width, opt = _a.opt, isHorizontal = _a.isHorizontal, length = _a.length;
            var height = opt.height;
            last.style.transform = isHorizontal ? "translate3d(" + -length * width + "px, 0, 0)" : "translate3d(0, " + -length * height + "px, 0)";
        };
        Swiper.prototype.onMove = function (e) {
            if (!this.isStarted)
                return;
            var isHorizontal = this.isHorizontal;
            var point = e.changedTouches ? e.changedTouches[0] : e;
            var delta = isHorizontal ? point.pageX : point.pageY;
            delta = delta - this.point;
            var offsets = Math.round(this.start + delta);
            if (!this.opt.loop) {
                if (offsets < this.min || offsets > this.max) {
                    offsets = Math.round(this.start + delta / 3);
                }
            }
            this.offsets = offsets;
            var now = new Date().getTime();
            if (now - this.startTime > this.momentumTimeThreshold) {
                this.momentumStart = this.offsets;
                this.startTime = now;
            }
            this.setStyle();
        };
        Swiper.prototype.onEnd = function () {
            var _this = this;
            if (!this.isStarted)
                return;
            this.isStarted = false;
            if (!this.opt.loop) {
                if (this.isNeedReset())
                    return;
            }
            var opt = this.opt;
            var loop = opt.loop;
            var absDelta = this.offsets - this.momentumStart;
            var duration = new Date().getTime() - this.startTime;
            if (duration < this.momentumTimeThreshold || Math.abs(absDelta) > 100) {
                if (absDelta < 0) {
                    if (loop) {
                        this.opt.current = this.opt.current < this.length ? this.opt.current + 1 : 0;
                    }
                    else {
                        this.opt.current = this.opt.current < this.length - 1 ? this.opt.current + 1 : this.length - 1;
                    }
                }
                else {
                    if (loop) {
                        this.opt.current = this.opt.current >= 0 ? this.opt.current - 1 : this.length - 1;
                    }
                    else {
                        this.opt.current = this.opt.current > 0 ? this.opt.current - 1 : 0;
                    }
                }
                this.offsets = this.isHorizontal ? -this.width * this.opt.current : -this.opt.height * this.opt.current;
                this.duration = this.opt.speed;
                this.bezier = "cubic-bezier(.25, .46, .45, .94)";
                this.setStyle();
                if (!this.opt.loop) {
                    this.opt.onChange(this.opt.current);
                    return false;
                }
                setTimeout(function () {
                    _this.reset();
                }, this.duration);
            }
        };
        Swiper.prototype.reset = function () {
            var _a = this, opt = _a.opt, isHorizontal = _a.isHorizontal, length = _a.length, first = _a.first, last = _a.last;
            var current = opt.current;
            if (current < 0) {
                last.style.transform = "";
                this.opt.current = this.length - 1;
                this.offsets = isHorizontal ? -this.opt.current * this.width : -this.opt.current * this.opt.height;
                this.duration = 0;
            }
            else if (current >= length) {
                first.style.transform = "";
                this.opt.current = 0;
                this.offsets = 0;
                this.duration = 0;
            }
            this.setStyle();
            this.opt.onChange(this.opt.current);
            this.autoplay();
        };
        Swiper.prototype.isNeedReset = function () {
            var offsets;
            if (this.offsets < this.min) {
                offsets = this.min;
            }
            else if (this.offsets > this.max) {
                offsets = this.max;
            }
            if (typeof offsets !== 'undefined') {
                this.offsets = offsets;
                this.duration = this.opt.speed,
                    this.bezier = 'cubic-bezier(.165, .84, .44, 1)';
                this.setStyle();
                return true;
            }
            return false;
        };
        Swiper.prototype.stop = function () {
            var _a = this, opt = _a.opt, isHorizontal = _a.isHorizontal;
            var content = opt.content;
            var _b = this.getTransform(content), translateY = _b.translateY, translateX = _b.translateX;
            this.offsets = isHorizontal ? translateX : translateY;
        };
        Swiper.prototype.setStyle = function () {
            if (this.opt.duration - this.opt.speed <= 30) {
                this.bezier = 'linear';
            }
            var content = this.opt.content;
            var _a = this, offsets = _a.offsets, duration = _a.duration, bezier = _a.bezier, isHorizontal = _a.isHorizontal;
            content.style.transitionDuration = duration + "ms";
            content.style.transitionTimingFunction = bezier;
            content.style.transform = isHorizontal ? "translate3d(" + offsets + "px, 0, 0)" : "translate3d(0, " + offsets + "px, 0)";
        };
        return Swiper;
    }(Utils));
    var default_1$V = /** @class */ (function () {
        function default_1(option) {
            return new Swiper(option);
        }
        return default_1;
    }());

    function tpl$q(locals) {var pug_html = "";var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    var index=0;
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['swiper-indicate']], [true]), false, true)+pug.attr("length", t.length, true, true)) + "\u003E";
    while (index < t.length) {
    var i = index++;
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['swiper-indicate-item']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VSwiper = /** @class */ (function (_super) {
        __extends(VSwiper, _super);
        function VSwiper(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                direction: 'horizontal',
                height: 200,
                current: 0,
                child: '.v-swiper-item',
                loop: false,
                indicate: true,
                autoplay: false,
                duration: 2000,
                vis: 1,
                speed: 300
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.el.style.fontSize = _this.opt.indicateSize + "px";
            _this.el.setAttribute('direction', _this.opt.direction);
            if (_this.opt.autoplay) {
                _this.opt.loop = true;
            }
            if (_this.opt.vis > 1) {
                _this.opt.indicate = false;
            }
            _this.renderLayout();
            _this.render();
            return _this;
        }
        VSwiper.prototype.renderLayout = function () {
            var child = this.opt.child;
            this.items = this.el.querySelectorAll(child);
            var content = document.createElement('div');
            content.className = css$t['swiper-content'];
            this.length = this.items.length;
            this.items.forEach(function (item) {
                var citem = item;
                citem.className = css$t['swiper-item'];
                content.appendChild(citem);
            });
            this.content = this.el.appendChild(content);
            this.el.className = css$t['swiper'];
            this.el.style.height = this.opt.height + "px";
            this.renderIndicate();
        };
        VSwiper.prototype.renderIndicate = function () {
            if (!this.opt.indicate)
                return;
            var t = this;
            var html = tpl$q({
                css: css$t,
                t: t
            });
            var el = this.parseHtmlToDom(html);
            this.el.appendChild(el);
            this.indicates = this.el.querySelectorAll("." + css$t['swiper-indicate-item']);
            this.renderActive();
        };
        VSwiper.prototype.render = function () {
            var _this = this;
            var _a = this, el = _a.el, content = _a.content, opt = _a.opt;
            var height = opt.height, current = opt.current, direction = opt.direction, loop = opt.loop, autoplay = opt.autoplay, duration = opt.duration, vis = opt.vis, speed = opt.speed, child = opt.child;
            this.swiper = new default_1$V({
                el: el,
                content: content,
                height: height,
                current: current,
                child: child,
                direction: direction,
                loop: loop,
                items: this.items,
                autoplay: autoplay,
                duration: duration,
                width: this.opt.width,
                vis: vis,
                speed: speed,
                onChange: function (index) {
                    _this.opt.current = index;
                    _this.renderActive();
                }
            });
        };
        VSwiper.prototype.renderActive = function () {
            if (!this.opt.indicate)
                return;
            var current = this.opt.current;
            var indicates = this.indicates;
            indicates.forEach(function (indicate, i) {
                var citem = indicate;
                if (i === current) {
                    citem.setAttribute('active', '');
                }
                else {
                    citem.removeAttribute('active');
                }
            });
        };
        return VSwiper;
    }(Utils));
    var default_1$U = /** @class */ (function () {
        function default_1(option) {
            return new VSwiper(option);
        }
        return default_1;
    }());

    var VSwitch = /** @class */ (function (_super) {
        __extends(VSwitch, _super);
        function VSwitch(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VSwitch.prototype.render = function () {
        };
        VSwitch.prototype.generateData = function () {
        };
        return VSwitch;
    }(Utils));
    var default_1$T = /** @class */ (function () {
        function default_1(option) {
            return new VSwitch(option);
        }
        return default_1;
    }());

    var tab = "v-tab";
    var css$s = {
    	tab: tab,
    	"tab-icon": "v-tab-icon",
    	"tab-badge": "v-tab-badge",
    	"tab-head": "v-tab-head",
    	"tab-scroll": "v-tab-scroll",
    	"tab-item": "v-tab-item",
    	"tab-indicate": "v-tab-indicate",
    	"tab-content": "v-tab-content",
    	"tab-label": "v-tab-label"
    };

    function tpl$p(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tab']], [true]), false, true)+pug.attr("shape", t.opt.shape, true, true)+pug.attr("scroll", t.opt.scroll, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tab-head']], [true]), false, true)+pug.attr("style", pug.style(`display:${t.data.length > 1 ? 'block' : 'none'}`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tab-scroll']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tab-indicate']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E";
    // iterate t.data
    ;(function(){
      var $$obj = t.data;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tab-item']], [true]), false, true)+pug.attr("index", index, true, true)+pug.attr("shape", t.opt.shape, true, true)) + "\u003E";
    if (item[t.opt.fields['default']] && item[t.opt.fields['active']]) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tab-icon']], [true]), false, true)+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cimg" + (pug.attr("index", index, true, true)+pug.attr("src", item[t.opt.fields['default']], true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cimg" + (pug.attr("index", index, true, true)+pug.attr("src", item[t.opt.fields['active']], true, true)) + "\u003E\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['tab-label']], [true]), false, true)+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    if (item[t.opt.fields['badge']] > 0) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tab-badge']], [true]), false, true)+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['badge']]) ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tab-item']], [true]), false, true)+pug.attr("index", index, true, true)+pug.attr("shape", t.opt.shape, true, true)) + "\u003E";
    if (item[t.opt.fields['default']] && item[t.opt.fields['active']]) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tab-icon']], [true]), false, true)+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cimg" + (pug.attr("index", index, true, true)+pug.attr("src", item[t.opt.fields['default']], true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cimg" + (pug.attr("index", index, true, true)+pug.attr("src", item[t.opt.fields['active']], true, true)) + "\u003E\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['tab-label']], [true]), false, true)+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    if (item[t.opt.fields['badge']] > 0) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tab-badge']], [true]), false, true)+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['badge']]) ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tab-content']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tab-scroll']], [true]), false, true)+pug.attr("style", pug.style(`width:${t.opt.scroll ? 'auto' : t.width * t.data.length + 'px'}`), true, true)) + "\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VTab = /** @class */ (function (_super) {
        __extends(VTab, _super);
        function VTab(option) {
            var _this = _super.call(this) || this;
            _this.data = [];
            _this.opt = {
                el: '',
                current: 0,
                animation: false,
                justify: 'around',
                indicateWidth: 20,
                child: 'div',
                fields: {
                    name: 'name',
                    badge: 'badge',
                    default: 'default',
                    active: 'active'
                },
                scroll: false,
                sticky: false,
                onChange: function () { },
                onReady: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.page = _this.parents(_this.el, pcss['page']);
            _this.width = _this.el.offsetWidth;
            _this.data = _this.opt.data ? _this.opt.data : _this.generateData();
            _this.render();
            return _this;
        }
        VTab.prototype.bindObverse = function () {
            var _this = this;
            if (!this.opt.scroll)
                return;
            var items = this.items;
            items.forEach(function (item, index) {
                var citem = item;
                _this.obverse(citem, index);
            });
        };
        VTab.prototype.obverse = function (dom, index) {
            var _this = this;
            var io = new IntersectionObserver(function (entries) {
                if (entries[0] && entries[0].isIntersecting) {
                    // const target = entries[0].target
                    _this.opt.current = index;
                    _this.renderActive(index, false);
                }
            }, {
                threshold: 0
            });
            io.observe(dom);
        };
        VTab.prototype.render = function () {
            var t = this;
            var html = tpl$p({
                css: css$s,
                t: t
            });
            var el = this.parseHtmlToDom(html);
            this.el.parentNode.replaceChild(el, this.el);
            this.el = el;
            this.head = this.el.querySelector("." + css$s['tab-head']);
            this.content = this.el.querySelector("." + css$s['tab-content']);
            this.indicate = this.el.querySelector("." + css$s['tab-indicate']);
            var handlewrap = this.head.querySelector("." + css$s['tab-scroll']);
            handlewrap.style.justifyContent = t.opt.justify === 'center' ? t.opt.justify : t.opt.justify === 'around' ? "space-" + t.opt.justify : "flex-" + t.opt.justify;
            if (this.opt.sticky) {
                new default_1$10({
                    el: this.head
                });
            }
            this.indicate.style.width = this.opt.indicateWidth + "px";
            this.renderContent();
            this.renderActive(this.opt.current, true);
            this.bindClickEvent();
            this.bindObverse();
        };
        VTab.prototype.renderContent = function () {
            var _this = this;
            if (this.opt.data)
                return;
            var _a = this, contents = _a.contents, width = _a.width;
            var contentScroll = this.content.querySelector("." + css$s['tab-scroll']);
            if (this.opt.animation) {
                contentScroll.style.transition = '0.3s';
            }
            contents.forEach(function (item) {
                var c = item;
                if (!_this.opt.scroll) {
                    c.className = css$s['tab-item'];
                    c.style.width = width + "px";
                }
                contentScroll.appendChild(c);
            });
            this.items = this.content.querySelectorAll("." + css$s['tab-item']);
            this.opt.onReady(this.items);
        };
        VTab.prototype.bindClickEvent = function () {
            var _this = this;
            this.head.onclick = function (e) {
                var target = e.target;
                var index = target.getAttribute('index');
                if (!index)
                    return;
                _this.opt.current = parseInt(index);
                _this.renderActive(_this.opt.current, true);
            };
        };
        VTab.prototype.renderActive = function (index, scroll) {
            var _a = this, indicate = _a.indicate, width = _a.width;
            var items = this.head.querySelectorAll("." + css$s['tab-item']);
            this.opt.onChange(index);
            items.forEach(function (item, i) {
                var c = item;
                if (index === i) {
                    c.setAttribute('active', '');
                }
                else {
                    c.removeAttribute('active');
                }
            });
            var active = items[index];
            if (!active)
                return;
            var left = active.offsetLeft;
            var w = active.offsetWidth;
            var iw = this.opt.indicateWidth ? this.opt.indicateWidth : indicate.offsetWidth;
            if (this.opt.shape === 'card') {
                indicate.style.width = w + "px";
                iw = w;
            }
            var x = left + (w - iw) / 2;
            indicate.style.transform = "translate3d(" + x + "px, 0, 0)";
            var sl = x - width / 2;
            if (sl < 0) {
                sl = 0;
            }
            var headWrap = this.head.querySelector("." + css$s['tab-scroll']);
            headWrap.scrollTo({
                left: sl,
                top: 0,
                behavior: 'smooth'
            });
            if (scroll) {
                this.scrollContent(index);
            }
        };
        VTab.prototype.scrollContent = function (index) {
            if (this.opt.data)
                return;
            var width = this.width;
            var content = this.content.querySelector("." + css$s['tab-scroll']);
            if (this.opt.scroll) {
                this.renderScroll();
            }
            else {
                content.style.transform = "translate3d(" + -index * width + "px, 0 , 0)";
                this.items.forEach(function (item, i) {
                    var it = item;
                    if (index === i) {
                        it.setAttribute('visible', '');
                    }
                    else {
                        it.removeAttribute('visible');
                    }
                });
            }
        };
        VTab.prototype.renderScroll = function () {
            var _a = this, page = _a.page, opt = _a.opt, items = _a.items, head = _a.head;
            var current = opt.current;
            var citem = items[current];
            var section = page.querySelector("." + pcss['section']);
            var st = this.offset(citem).top - this.offset(section).top;
            section.scrollTop = st - head.offsetHeight;
        };
        VTab.prototype.generateData = function () {
            var _this = this;
            this.contents = this.el.querySelectorAll(this.opt.child);
            var data = [];
            var contents = this.contents;
            contents.forEach(function (content) {
                var _a;
                var item = content;
                var name = item.getAttribute(_this.opt.fields['name']);
                var badge = item.getAttribute(_this.opt.fields['badge']);
                var di = item.getAttribute(_this.opt.fields['default']);
                var ai = item.getAttribute(_this.opt.fields['active']);
                data.push((_a = {},
                    _a[_this.opt.fields['name']] = name,
                    _a[_this.opt.fields['badge']] = badge ? parseInt(badge) : 0,
                    _a.default = di,
                    _a.active = ai,
                    _a));
            });
            return data;
        };
        return VTab;
    }(Utils));
    var default_1$S = /** @class */ (function () {
        function default_1(option) {
            return new VTab(option);
        }
        return default_1;
    }());

    var VTag = /** @class */ (function (_super) {
        __extends(VTag, _super);
        function VTag(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VTag.prototype.render = function () {
        };
        VTag.prototype.generateData = function () {
        };
        return VTag;
    }(Utils));
    var default_1$R = /** @class */ (function () {
        function default_1(option) {
            return new VTag(option);
        }
        return default_1;
    }());

    var VRow = /** @class */ (function (_super) {
        __extends(VRow, _super);
        function VRow(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VRow.prototype.render = function () {
        };
        VRow.prototype.generateData = function () {
        };
        return VRow;
    }(Utils));
    var default_1$Q = /** @class */ (function () {
        function default_1(option) {
            return new VRow(option);
        }
        return default_1;
    }());

    var VCol = /** @class */ (function (_super) {
        __extends(VCol, _super);
        function VCol(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VCol.prototype.render = function () {
        };
        VCol.prototype.generateData = function () {
        };
        return VCol;
    }(Utils));
    var default_1$P = /** @class */ (function () {
        function default_1(option) {
            return new VCol(option);
        }
        return default_1;
    }());

    var VText = /** @class */ (function (_super) {
        __extends(VText, _super);
        function VText(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VText.prototype.render = function () {
        };
        VText.prototype.generateData = function () {
        };
        return VText;
    }(Utils));
    var default_1$O = /** @class */ (function () {
        function default_1(option) {
            return new VText(option);
        }
        return default_1;
    }());

    var VPanel = /** @class */ (function (_super) {
        __extends(VPanel, _super);
        function VPanel(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VPanel.prototype.render = function () {
        };
        VPanel.prototype.generateData = function () {
        };
        return VPanel;
    }(Utils));
    var default_1$N = /** @class */ (function () {
        function default_1(option) {
            return new VPanel(option);
        }
        return default_1;
    }());

    var tree = "v-tree";
    var css$r = {
    	tree: tree,
    	"tree-item": "v-tree-item",
    	"tree-handle": "v-tree-handle",
    	"tree-indicate": "v-tree-indicate",
    	"tree-check": "v-tree-check",
    	"tree-label": "v-tree-label",
    	"tree-prefix": "v-tree-prefix",
    	"tree-suffix": "v-tree-suffix",
    	"tree-icon": "v-tree-icon",
    	"tree-content": "v-tree-content"
    };

    function tpl$o(locals) {var pug_html = "", pug_mixins = {}, pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_mixins["tree"] = pug_interp = function(data){
    var block = (this && this.block), attributes = (this && this.attributes) || {};
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tree']], [true]), false, true)) + "\u003E";
    // iterate data
    ;(function(){
      var $$obj = data;
      if ('number' == typeof $$obj.length) {
          for (var i = 0, $$l = $$obj.length; i < $$l; i++) {
            var item = $$obj[i];
    var children = item[t.opt.fields['children']];
    var hasChildren = t.opt.fields['children'] in item && t.opt.fields['children'].length > 0;
    pug_html = pug_html + "\u003Cdetails" + (pug.attr("class", pug.classes([css['tree-item']], [true]), false, true)+pug.attr("children", hasChildren, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csummary" + (pug.attr("class", pug.classes([css['tree-handle']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tree-prefix']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['tree-indicate']], [true]), false, true)+" aria-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-caret-right\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    if (item[t.opt.fields['icon']]) {
    pug_html = pug_html + "\u003Cimg" + (pug.attr("class", pug.classes([css['tree-icon']], [true]), false, true)+pug.attr("src", item[t.opt.fields['icon']], true, true)) + "\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['tree-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tree-suffix']], [true]), false, true)) + "\u003E";
    if (t.opt.editable) {
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-reduce\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-add\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    if (t.opt.optional) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tree-check']], [true]), false, true)+" action=\"onCheck\""+pug.attr("value", item[t.opt.fields['id']], true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (" aria-hidden=\"true\" action=\"onCheck\""+pug.attr("value", item[t.opt.fields['id']], true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (" xlink:href=\"#icon-check\" action=\"onCheck\""+pug.attr("value", item[t.opt.fields['id']], true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E\u003C\u002Fsummary\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tree-content']], [true]), false, true)) + "\u003E";
    if (children) {
    pug_mixins["tree"](children);
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E";
          }
      } else {
        var $$l = 0;
        for (var i in $$obj) {
          $$l++;
          var item = $$obj[i];
    var children = item[t.opt.fields['children']];
    var hasChildren = t.opt.fields['children'] in item && t.opt.fields['children'].length > 0;
    pug_html = pug_html + "\u003Cdetails" + (pug.attr("class", pug.classes([css['tree-item']], [true]), false, true)+pug.attr("children", hasChildren, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csummary" + (pug.attr("class", pug.classes([css['tree-handle']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tree-prefix']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['tree-indicate']], [true]), false, true)+" aria-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-caret-right\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    if (item[t.opt.fields['icon']]) {
    pug_html = pug_html + "\u003Cimg" + (pug.attr("class", pug.classes([css['tree-icon']], [true]), false, true)+pug.attr("src", item[t.opt.fields['icon']], true, true)) + "\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['tree-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tree-suffix']], [true]), false, true)) + "\u003E";
    if (t.opt.editable) {
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-reduce\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-add\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    if (t.opt.optional) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tree-check']], [true]), false, true)+" action=\"onCheck\""+pug.attr("value", item[t.opt.fields['id']], true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (" aria-hidden=\"true\" action=\"onCheck\""+pug.attr("value", item[t.opt.fields['id']], true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (" xlink:href=\"#icon-check\" action=\"onCheck\""+pug.attr("value", item[t.opt.fields['id']], true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E\u003C\u002Fsummary\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tree-content']], [true]), false, true)) + "\u003E";
    if (children) {
    pug_mixins["tree"](children);
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E\u003C\u002Fdetails\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    };
    pug_mixins["tree"](t.opt.data);
    }.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VTree = /** @class */ (function (_super) {
        __extends(VTree, _super);
        function VTree(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                fields: {
                    id: 'id',
                    name: 'label',
                    children: 'children',
                    icon: 'icon'
                },
                editable: false,
                optional: false
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            return _this;
        }
        VTree.prototype.render = function () {
            var t = this;
            var html = tpl$o({
                css: css$r,
                t: t
            });
            var el = this.parseHtmlToDom(html);
            this.el.parentNode.replaceChild(el, this.el);
            this.el = el;
            this.bindClick();
        };
        VTree.prototype.bindClick = function () {
            var _this = this;
            this.el.onclick = function (e) {
                var target = e.target;
                var action = target.getAttribute('action');
                if (action === 'onCheck') {
                    e.preventDefault();
                }
                if (action) {
                    _this[action](target);
                }
            };
        };
        VTree.prototype.onCheck = function (target) {
            var cvalue = target.getAttribute('value');
            this.generateCheck(cvalue);
            return false;
        };
        VTree.prototype.generateCheck = function (value) {
            var opt = this.opt;
            var data = opt.data;
            this.getAllItems(data, value);
        };
        VTree.prototype.getAllItems = function (arr, value) {
            var _this = this;
            var opt = this.opt;
            var fields = opt.fields;
            var prefix = [];
            var parseJson = function (arr, value) {
                arr.forEach(function (item) {
                    if (item[fields['id']] === value) {
                        _this.getChildrens(item[fields['children']]);
                    }
                    else {
                        prefix.push(item[fields['id']]);
                        if (item[fields['children']]) {
                            parseJson(item[fields['children']], value);
                        }
                    }
                });
            };
            parseJson(arr, value);
            console.log(prefix);
        };
        VTree.prototype.getChildrens = function (arr) {
            return [];
        };
        return VTree;
    }(Utils));
    var default_1$M = /** @class */ (function () {
        function default_1(option) {
            return new VTree(option);
        }
        return default_1;
    }());

    function tpl$n(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tabbar']], [true]), false, true)+pug.attr("swipe", t.swipe, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cul" + (pug.attr("class", pug.classes([css['tabbar-list']], [true]), false, true)) + "\u003E";
    var name = Math.random()
    // iterate t.opt.data
    ;(function(){
      var $$obj = t.opt.data;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    var checked = index === t.opt.current;
    pug_html = pug_html + "\u003Cli" + (pug.attr("class", pug.classes([css['tabbar-item']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cinput" + (pug.attr("class", pug.classes([css['tabbar-core']], [true]), false, true)+" type=\"radio\""+pug.attr("name", "tabbar"+name, true, true)+pug.attr("checked", checked, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tabbar-icon']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cimg" + (pug.attr("class", pug.classes([css['tabbar-image']], [true]), false, true)+pug.attr("src", item[t.opt.fields['defaultIcon']], true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cimg" + (pug.attr("class", pug.classes([css['tabbar-image']], [true]), false, true)+pug.attr("src", item[t.opt.fields['activeIcon']], true, true)) + "\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['tabbar-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E\u003C\u002Fli\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    var checked = index === t.opt.current;
    pug_html = pug_html + "\u003Cli" + (pug.attr("class", pug.classes([css['tabbar-item']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cinput" + (pug.attr("class", pug.classes([css['tabbar-core']], [true]), false, true)+" type=\"radio\""+pug.attr("name", "tabbar"+name, true, true)+pug.attr("checked", checked, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['tabbar-icon']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cimg" + (pug.attr("class", pug.classes([css['tabbar-image']], [true]), false, true)+pug.attr("src", item[t.opt.fields['defaultIcon']], true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cimg" + (pug.attr("class", pug.classes([css['tabbar-image']], [true]), false, true)+pug.attr("src", item[t.opt.fields['activeIcon']], true, true)) + "\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['tabbar-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E\u003C\u002Fli\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Ful\u003E\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var tabbar = "v-tabbar";
    var css$q = {
    	tabbar: tabbar,
    	"tabbar-list": "v-tabbar-list",
    	"tabbar-item": "v-tabbar-item",
    	"tabbar-icon": "v-tabbar-icon",
    	"tabbar-label": "v-tabbar-label",
    	"tabbar-image": "v-tabbar-image",
    	"tabbar-core": "v-tabbar-core"
    };

    var VTabbar = /** @class */ (function (_super) {
        __extends(VTabbar, _super);
        function VTabbar(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                fields: {
                    name: 'name',
                    defaultIcon: 'defaultIcon',
                    activeIcon: 'activeIcon',
                    url: 'url',
                    badge: 'badge'
                }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.swipe = _this.opt.data.length > 4;
            _this.render();
            return _this;
        }
        VTabbar.prototype.render = function () {
            var t = this;
            var html = tpl$n({
                css: css$q,
                t: t
            });
            this.el.innerHTML = html;
        };
        VTabbar.prototype.generateData = function () {
        };
        return VTabbar;
    }(Utils));
    var default_1$L = /** @class */ (function () {
        function default_1(option) {
            return new VTabbar(option);
        }
        return default_1;
    }());

    var VTabbarItem = /** @class */ (function (_super) {
        __extends(VTabbarItem, _super);
        function VTabbarItem(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VTabbarItem.prototype.render = function () {
        };
        VTabbarItem.prototype.generateData = function () {
        };
        return VTabbarItem;
    }(Utils));
    var default_1$K = /** @class */ (function () {
        function default_1(option) {
            return new VTabbarItem(option);
        }
        return default_1;
    }());

    var uploader = "v-uploader";
    var css$p = {
    	uploader: uploader,
    	"uploader-content": "v-uploader-content",
    	"uploader-item": "v-uploader-item",
    	"uploader-handle": "v-uploader-handle",
    	"uploader-core": "v-uploader-core",
    	"uploader-box": "v-uploader-box",
    	"uploader-wrap": "v-uploader-wrap",
    	"uploader-preview": "v-uploader-preview",
    	"uploader-delete": "v-uploader-delete"
    };

    function tpl$m(locals) {var pug_html = "";var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['uploader']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['uploader-content']], [true]), false, true)) + "\u003E";
    // iterate t.opt.data
    ;(function(){
      var $$obj = t.opt.data;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['uploader-item']], [true]), false, true)+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['uploader-box']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['uploader-wrap']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cimg" + (pug.attr("class", pug.classes([css['uploader-preview']], [true]), false, true)+pug.attr("src", item.path, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['uploader-delete']], [true]), false, true)+" aria-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-clear\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['uploader-item']], [true]), false, true)+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['uploader-box']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['uploader-wrap']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cimg" + (pug.attr("class", pug.classes([css['uploader-preview']], [true]), false, true)+pug.attr("src", item.path, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['uploader-delete']], [true]), false, true)+" aria-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-clear\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['uploader-handle']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['uploader-box']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['uploader-wrap']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cinput" + (pug.attr("class", pug.classes([css['uploader-core']], [true]), false, true)+" type=\"file\""+pug.attr("multiple", t.opt.multiple, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", `#icon-${t.opt.icon}`, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VUploader = /** @class */ (function (_super) {
        __extends(VUploader, _super);
        function VUploader(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                icon: 'add',
                data: [],
                multiple: false,
                type: 'image',
                fields: {
                    path: 'path',
                    name: 'name',
                    size: 'size'
                }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            return _this;
        }
        VUploader.prototype.render = function () {
            var t = this;
            var html = tpl$m({
                css: css$p,
                t: t
            });
            var el = this.parseHtmlToDom(html);
            this.el.parentNode.replaceChild(el, this.el);
            this.el = el;
            this.upload = this.el.querySelector('input');
            this.upload.onchange = this.onFileChange.bind(this);
        };
        VUploader.prototype.onFileChange = function (e) {
            var files = e.target.files;
            for (var i = 0; i < files.length; i++) {
                this.onFileUpload(files[i]);
            }
        };
        VUploader.prototype.onFileUpload = function (file) {
            var el = this.el;
            var pass = file.type.indexOf(this.opt.type) >= 0;
            if (!pass) {
                new default_1$Y({
                    el: el,
                    message: '格式不正确'
                });
            }
            else {
                this.uploadFile(file);
            }
        };
        VUploader.prototype.uploadFile = function (file) {
            var _this = this;
            var reader = new FileReader();
            reader.readAsDataURL(file);
            reader.onload = function (e) {
                var target = e.target;
                _this.opt.data.push({
                    path: target.result,
                    size: e.total
                });
                _this.render();
            };
        };
        return VUploader;
    }(Utils));
    var default_1$J = /** @class */ (function () {
        function default_1(option) {
            return new VUploader(option);
        }
        return default_1;
    }());

    var Com = /** @class */ (function () {
        function Com(option) {
            this.current = [];
            this.data = [];
            this.opt = option;
            this.random = option.random;
            this.data = this.initData();
            return this;
        }
        Com.prototype.initData = function () {
            var type = this.opt.type;
            switch (type) {
                case 'number':
                    return this.generateNumber(true);
                case 'char':
                    return this.generateChar(false);
                case 'upperchar':
                    return this.generateChar(true);
                case 'licence':
                    return this.generateProvince();
                case 'id':
                    return this.generateNumber(true);
                case 'carchar':
                    return this.generateChar(true);
                case 'symbol':
                    return this.generateSymbol();
            }
        };
        Com.prototype.generateSymbol = function () {
            return [
                [
                    {
                        key: '^'
                    },
                    {
                        key: '|'
                    },
                    {
                        key: '<'
                    },
                    {
                        key: '>'
                    },
                    {
                        key: '['
                    },
                    {
                        key: ']'
                    },
                    {
                        key: '{'
                    },
                    {
                        key: '}'
                    },
                    {
                        key: '+'
                    },
                    {
                        key: '-'
                    }
                ],
                [
                    {
                        key: '!'
                    },
                    {
                        key: '@'
                    },
                    {
                        key: '#'
                    },
                    {
                        key: '$'
                    },
                    {
                        key: '%'
                    },
                    {
                        key: '*'
                    },
                    {
                        key: ','
                    },
                    {
                        key: '.'
                    },
                    {
                        key: '/'
                    },
                    {
                        key: ';'
                    }
                ],
                [
                    {
                        key: ':'
                    },
                    {
                        key: "'"
                    },
                    {
                        key: '\\'
                    },
                    {
                        key: '`'
                    },
                    {
                        key: '￥'
                    },
                    {
                        key: '￡'
                    },
                    {
                        key: '℃'
                    },
                    {
                        key: '℉'
                    },
                    {
                        key: '㎡'
                    },
                    {
                        key: '㎥'
                    }
                ],
                [
                    {
                        key: '♀'
                    },
                    {
                        key: '♂'
                    },
                    {
                        key: '™'
                    },
                    {
                        key: 'Σ'
                    },
                    {
                        key: '↙'
                    },
                    {
                        key: '↘'
                    },
                    {
                        key: '「'
                    },
                    {
                        key: '」'
                    },
                    {
                        key: '←'
                    },
                    {
                        key: '→'
                    }
                ],
                [
                    {
                        key: '↑'
                    },
                    {
                        key: '↓'
                    },
                    {
                        key: '÷'
                    },
                    {
                        key: '∠'
                    },
                    {
                        key: '∥'
                    },
                    {
                        key: '￠'
                    },
                    {
                        key: '£'
                    },
                    {
                        key: '€'
                    }
                ]
            ];
        };
        Com.prototype.generateNumber = function (isGroup) {
            var keys = [];
            var keyarr = [];
            for (var i = 48; i < 58; i++) {
                keys.push({
                    keycode: i,
                    key: String.fromCharCode(i)
                });
            }
            if (this.random) {
                keys = keys.sort(function () { return Math.random() - 0.5; });
            }
            var mid = keys.filter(function (item, index) {
                return index > 0;
            });
            keys = __spreadArray(__spreadArray([], mid, true), [keys[0]], false);
            if (isGroup) {
                for (var i = 0; i < keys.length; i += 3) {
                    keyarr.push(keys.slice(i, i + 3));
                }
            }
            return isGroup ? keyarr : keys;
        };
        Com.prototype.generateChar = function (uppercase) {
            var _this = this;
            var num = this.generateNumber(false);
            var en = [81, 87, 69, 82, 84, 89, 85, 73, 79, 80, 65, 83, 68, 70, 71, 72, 74, 75, 76, 90, 88, 67, 86, 66, 78, 77];
            if (this.random) {
                en = en.sort(function () { return Math.random() - 0.5; });
                num = num.sort(function () { return Math.random() - 0.5; });
            }
            var char = [[], [], []];
            en.forEach(function (item, i) {
                var key = String.fromCharCode(item);
                var disabled = _this.opt.type === 'carchar' && 'OI'.indexOf(key.toUpperCase()) >= 0;
                var c = {
                    key: uppercase ? key.toUpperCase() : key.toLowerCase(),
                    keycode: item,
                    disabled: disabled
                };
                if (i <= 9) {
                    char[0].push(c);
                }
                else if (i >= en.length - 7) {
                    char[2].push(c);
                }
                else {
                    char[1].push(c);
                }
            });
            return __spreadArray([__spreadArray([], num, true)], char, true);
        };
        Com.prototype.generateProvince = function () {
            return [
                [
                    {
                        key: '京',
                        keycode: 11
                    },
                    {
                        key: '沪',
                        keycode: 31
                    },
                    {
                        key: '粤',
                        keycode: 44
                    },
                    {
                        key: '津',
                        keycode: 12
                    },
                    {
                        key: '冀',
                        keycode: 13
                    },
                    {
                        key: '晋',
                        keycode: 14
                    },
                    {
                        key: '蒙',
                        keycode: 15
                    },
                    {
                        key: '辽',
                        keycode: 21
                    },
                    {
                        key: '吉',
                        keycode: 22
                    },
                    {
                        key: '黑',
                        keycode: 23
                    }
                ], [
                    {
                        key: '苏',
                        keycode: 32
                    },
                    {
                        key: '浙',
                        keycode: 33
                    },
                    {
                        key: '皖',
                        keycode: 34
                    },
                    {
                        key: '闽',
                        keycode: 35
                    },
                    {
                        key: '赣',
                        keycode: 36
                    },
                    {
                        key: '鲁',
                        keycode: 37
                    },
                    {
                        key: '豫',
                        keycode: 41
                    },
                    {
                        key: '鄂',
                        keycode: 42
                    },
                    {
                        key: '湘',
                        keycode: 43
                    },
                    {
                        key: '贵',
                        keycode: 52
                    }
                ], [
                    {
                        key: '琼',
                        keycode: 46
                    },
                    {
                        key: '渝',
                        keycode: 50
                    },
                    {
                        key: '川',
                        keycode: 51
                    },
                    {
                        key: '贵',
                        keycode: 52
                    },
                    {
                        key: '云',
                        keycode: 53
                    },
                    {
                        key: '藏',
                        keycode: 54
                    },
                    {
                        key: '陕',
                        keycode: 61
                    },
                    {
                        key: '甘',
                        keycode: 62
                    },
                    {
                        key: '青',
                        keycode: 63
                    },
                    {
                        key: '宁',
                        keycode: 21
                    }
                ], [
                    {
                        key: '新',
                        keycode: 65
                    },
                    {
                        key: '使',
                        keycode: 11
                    },
                    {
                        key: '领',
                        keycode: 11
                    },
                    {
                        key: '警',
                        keycode: 11
                    },
                    {
                        key: '学',
                        keycode: 11
                    },
                    {
                        key: '港',
                        keycode: 11
                    },
                    {
                        key: '澳',
                        keycode: 11
                    }
                ]
            ];
        };
        return Com;
    }());
    var Keys = (function (option) {
        return new Com(option);
    });

    var keyboard = "v-keyboard";
    var css$o = {
    	keyboard: keyboard,
    	"keyboard-head": "v-keyboard-head",
    	"keyboard-button": "v-keyboard-button",
    	"keyboard-content": "v-keyboard-content",
    	"keyboard-row": "v-keyboard-row",
    	"keyboard-item": "v-keyboard-item",
    	"keyboard-label": "v-keyboard-label"
    };

    function tpl$l(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard']], [true]), false, true)+pug.attr("type", t.type, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-head']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Ch2\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '安全键盘') ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    if (t.opt.buttons) {
    // iterate t.opt.buttons
    ;(function(){
      var $$obj = t.opt.buttons;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cbutton" + (pug.attr("class", pug.classes([css['keyboard-button']], [true]), false, true)+pug.attr("callback", item.id, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item.name) ? "" : pug_interp)) + "\u003C\u002Fbutton\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cbutton" + (pug.attr("class", pug.classes([css['keyboard-button']], [true]), false, true)+pug.attr("callback", item.id, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item.name) ? "" : pug_interp)) + "\u003C\u002Fbutton\u003E";
        }
      }
    }).call(this);

    }
    else {
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\" action=\"hide\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-point-down\" action=\"hide\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-content']], [true]), false, true)) + "\u003E";
    // iterate t.data
    ;(function(){
      var $$obj = t.data;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var row = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-row']], [true]), false, true)) + "\u003E";
    if (index === t.data.length - 1 && t.type === 'number' && t.type === t.opt.type) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onKeyDown\" keycode=\"190\" key=\".\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onKeyDown\" key=\".\" keycode=\"190\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '.') ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    if (index === t.data.length - 1 && t.type === 'number' && t.type !== t.opt.type) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onBack\" type=\"button\" key=\"返回\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onBack\" key=\"返回\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '返回') ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    if (index === t.data.length - 1 && t.type === 'id') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onKeyDown\" keycode=\"88\" key=\"X\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onKeyDown\" key=\"X\" keycode=\"88\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = 'X') ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    if (index === t.data.length - 1 && t.type === 'char') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" style=\"flex:1;\" action=\"onUppercase\" keycode=\"20\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onUppercase\" keycode=\"20\"") + "\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\" action=\"onUppercase\" keycode=\"20\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-arrow-up\" action=\"onUppercase\" keycode=\"20\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    if (index === t.data.length - 1 && t.type === 'upperchar') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+pug.attr("active", true, true, true)+" style=\"flex:1;\" action=\"onUppercase\" keycode=\"20\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onUppercase\" keycode=\"20\"") + "\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\" action=\"onUppercase\" keycode=\"20\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-arrow-up\" action=\"onUppercase\" keycode=\"20\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    if (index === t.data.length - 1 && t.type === 'licence') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" style=\"flex:1;\" type=\"button\" action=\"onCarNumber\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onCarNumber\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = 'EN') ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    if (index === t.data.length - 1 && t.type === 'carchar') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" style=\"flex:1;\" type=\"button\" action=\"onProvince\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onProvince\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '地区') ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    if (index === t.data.length - 1 && t.type === 'symbol' && t.type !== t.opt.type) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onBack\" type=\"button\" key=\"返回\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onBack\" key=\"返回\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '返回') ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    // iterate row
    ;(function(){
      var $$obj = row;
      if ('number' == typeof $$obj.length) {
          for (var i = 0, $$l = $$obj.length; i < $$l; i++) {
            var item = $$obj[i];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onKeyDown\""+pug.attr("keycode", item.keycode, true, true)+pug.attr("key", item.key, true, true)+pug.attr("disabled", item.disabled, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onKeyDown\""+pug.attr("keycode", item.keycode, true, true)+pug.attr("disabled", item.disabled, true, true)+pug.attr("key", item.key, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item.key) ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var i in $$obj) {
          $$l++;
          var item = $$obj[i];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onKeyDown\""+pug.attr("keycode", item.keycode, true, true)+pug.attr("key", item.key, true, true)+pug.attr("disabled", item.disabled, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onKeyDown\""+pug.attr("keycode", item.keycode, true, true)+pug.attr("disabled", item.disabled, true, true)+pug.attr("key", item.key, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item.key) ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    if (index === t.data.length - 1 && t.type === 'number' || index === t.data.length - 1 && t.type === 'id') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onDelete\" type=\"button\" keycode=\"8\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onDelete\" keycode=\"8\"") + "\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\" action=\"onDelete\" keycode=\"8\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-backspace\" action=\"onDelete\" keycode=\"8\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    if (index === t.data.length - 1 && t.type.indexOf('char') >= 0 || index === t.data.length - 1 && t.type === 'licence' || index === t.data.length - 1 && t.type === 'carchar' || index === t.data.length - 1 && t.type === 'symbol') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onDelete\" style=\"flex:1;\" type=\"button\" keycode=\"8\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onDelete\" keycode=\"8\"") + "\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\" action=\"onDelete\" keycode=\"8\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-backspace\" action=\"onDelete\" keycode=\"8\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var row = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-row']], [true]), false, true)) + "\u003E";
    if (index === t.data.length - 1 && t.type === 'number' && t.type === t.opt.type) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onKeyDown\" keycode=\"190\" key=\".\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onKeyDown\" key=\".\" keycode=\"190\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '.') ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    if (index === t.data.length - 1 && t.type === 'number' && t.type !== t.opt.type) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onBack\" type=\"button\" key=\"返回\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onBack\" key=\"返回\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '返回') ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    if (index === t.data.length - 1 && t.type === 'id') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onKeyDown\" keycode=\"88\" key=\"X\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onKeyDown\" key=\"X\" keycode=\"88\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = 'X') ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    if (index === t.data.length - 1 && t.type === 'char') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" style=\"flex:1;\" action=\"onUppercase\" keycode=\"20\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onUppercase\" keycode=\"20\"") + "\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\" action=\"onUppercase\" keycode=\"20\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-arrow-up\" action=\"onUppercase\" keycode=\"20\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    if (index === t.data.length - 1 && t.type === 'upperchar') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+pug.attr("active", true, true, true)+" style=\"flex:1;\" action=\"onUppercase\" keycode=\"20\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onUppercase\" keycode=\"20\"") + "\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\" action=\"onUppercase\" keycode=\"20\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-arrow-up\" action=\"onUppercase\" keycode=\"20\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    if (index === t.data.length - 1 && t.type === 'licence') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" style=\"flex:1;\" type=\"button\" action=\"onCarNumber\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onCarNumber\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = 'EN') ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    if (index === t.data.length - 1 && t.type === 'carchar') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" style=\"flex:1;\" type=\"button\" action=\"onProvince\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onProvince\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '地区') ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    if (index === t.data.length - 1 && t.type === 'symbol' && t.type !== t.opt.type) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onBack\" type=\"button\" key=\"返回\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onBack\" key=\"返回\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '返回') ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    // iterate row
    ;(function(){
      var $$obj = row;
      if ('number' == typeof $$obj.length) {
          for (var i = 0, $$l = $$obj.length; i < $$l; i++) {
            var item = $$obj[i];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onKeyDown\""+pug.attr("keycode", item.keycode, true, true)+pug.attr("key", item.key, true, true)+pug.attr("disabled", item.disabled, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onKeyDown\""+pug.attr("keycode", item.keycode, true, true)+pug.attr("disabled", item.disabled, true, true)+pug.attr("key", item.key, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item.key) ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var i in $$obj) {
          $$l++;
          var item = $$obj[i];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onKeyDown\""+pug.attr("keycode", item.keycode, true, true)+pug.attr("key", item.key, true, true)+pug.attr("disabled", item.disabled, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onKeyDown\""+pug.attr("keycode", item.keycode, true, true)+pug.attr("disabled", item.disabled, true, true)+pug.attr("key", item.key, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item.key) ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    if (index === t.data.length - 1 && t.type === 'number' || index === t.data.length - 1 && t.type === 'id') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onDelete\" type=\"button\" keycode=\"8\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onDelete\" keycode=\"8\"") + "\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\" action=\"onDelete\" keycode=\"8\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-backspace\" action=\"onDelete\" keycode=\"8\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    if (index === t.data.length - 1 && t.type.indexOf('char') >= 0 || index === t.data.length - 1 && t.type === 'licence' || index === t.data.length - 1 && t.type === 'carchar' || index === t.data.length - 1 && t.type === 'symbol') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onDelete\" style=\"flex:1;\" type=\"button\" keycode=\"8\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onDelete\" keycode=\"8\"") + "\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\" action=\"onDelete\" keycode=\"8\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-backspace\" action=\"onDelete\" keycode=\"8\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    if (t.type.indexOf('char') >= 0 && t.type !== 'carchar') {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-row']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onSymbol\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onSymbol\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '!?#') ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onNumber\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onNumber\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '123') ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onKeyDown\" key=\".\" keycode=\"190\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onKeyDown\" keycode=\"190\" key=\".\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '.') ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onKeyDown\" style=\"flex:2;\" key=\" \" keycode=\"32\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onKeyDown\" keycode=\"32\" key=\" \"") + "\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\" action=\"onKeyDown\" keycode=\"32\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-space\" action=\"onKeyDown\" keycode=\"32\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" action=\"onKeyDown\" key=\"@\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onKeyDown\" key=\"@\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '@') ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-item']], [true]), false, true)+" type=\"button\" action=\"onEnter\" style=\"flex:1;\" keycode=\"13\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['keyboard-label']], [true]), false, true)+" action=\"onEnter\" keycode=\"13\"") + "\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\" action=\"onEnter\" keycode=\"13\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-enter\" action=\"onEnter\" keycode=\"13\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VKeyboard = /** @class */ (function (_super) {
        __extends(VKeyboard, _super);
        function VKeyboard(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'number',
                random: false,
                value: '',
                autofill: true,
                onKeyDown: function () { },
                onBackSpace: function () { },
                onReady: function () { },
                onDestory: function () { },
                onClick: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.type = _this.opt.type;
            if (_this.el.tagName === 'INPUT') {
                _this.el.setAttribute('readonly', '');
            }
            else {
                if (_this.el.querySelector('input')) {
                    _this.el.querySelector('input').setAttribute('readonly', '');
                }
            }
            _this.el.addEventListener('click', function (e) {
                e.preventDefault();
                _this.data = Keys({
                    type: _this.type,
                    random: _this.opt.random
                }).data;
                _this.initValue();
                _this.el.setAttribute('focus', '');
                _this.render();
            });
            return _this;
        }
        VKeyboard.prototype.render = function () {
            var _this = this;
            var t = this;
            var html = tpl$l({
                css: css$o,
                t: t
            });
            this.drawer = new default_1$1q({
                el: this.el,
                mask: 'rgba(0,0,0,0)',
                title: '',
                clickable: true,
                buttons: null,
                pressing: true,
                onReady: function (el) {
                    el.innerHTML = html;
                    if (_this.value.length > 1) {
                        _this.onCarNumber();
                    }
                    _this.bindClick();
                    _this.opt.onReady();
                },
                onDestory: function () {
                    _this.el.removeAttribute('focus');
                    _this.opt.onDestory();
                }
            });
        };
        VKeyboard.prototype.initValue = function () {
            var v = '';
            if (this.el.tagName === 'INPUT') {
                v = this.el.value;
            }
            else {
                var input = this.el.querySelector('input');
                if (input) {
                    v = input.value;
                }
            }
            this.value = this.opt.value ? this.opt.value : v;
            this.setValue();
        };
        VKeyboard.prototype.bindClick = function () {
            var _this = this;
            this.drawer.content.onclick = function (e) {
                var target = e.target;
                var action = target.getAttribute('action');
                var callback = target.getAttribute('callback');
                if (action) {
                    _this[action](target);
                }
                if (callback) {
                    _this.opt.onClick(callback);
                    if (callback === 'clear') {
                        _this.clear();
                    }
                }
            };
        };
        VKeyboard.prototype.clear = function () {
            this.value = '';
            this.setValue();
            if (this.type === 'carchar' && this.value.length < 1) {
                this.onProvince();
            }
        };
        VKeyboard.prototype.onDelete = function () {
            this.value = this.value.substring(0, this.value.length - 1);
            this.setValue();
            if (this.type === 'carchar' && this.value.length < 1) {
                this.onProvince();
            }
            this.opt.onBackSpace();
        };
        VKeyboard.prototype.hide = function (target) {
            this.drawer.hide();
            this.el.removeAttribute('focus');
            this.opt.onDestory();
        };
        VKeyboard.prototype.onKeyDown = function (target) {
            if (target.getAttribute('disabled') !== null)
                return;
            var keycode = parseInt(target.getAttribute('keycode'));
            var key = target.getAttribute('key');
            this.value = "" + this.value + key;
            this.setValue();
            if (this.type === 'licence' && this.value.length === 1) {
                this.onCarNumber();
            }
            this.opt.onKeyDown({
                key: key,
                value: this.value,
                keycode: keycode
            });
        };
        VKeyboard.prototype.setValue = function (v) {
            if (!this.opt.autofill)
                return;
            var value = this.value;
            if (this.el.tagName === 'INPUT') {
                this.el.value = value;
                this.el.focus();
            }
            else if (this.el.childNodes.length > 0) {
                var input = this.el.querySelector('input');
                if (input) {
                    input.value = value;
                    input.focus();
                }
                else {
                    this.el.childNodes[0].innerHTML = value;
                }
            }
            else {
                this.el.innerHTML = value;
            }
        };
        VKeyboard.prototype.onNumber = function () {
            this.type = 'number';
            this.changeLayout(this.type);
        };
        VKeyboard.prototype.onBack = function () {
            this.type = this.opt.type;
            this.changeLayout(this.type);
        };
        VKeyboard.prototype.onCarNumber = function () {
            this.type = 'carchar';
            this.changeLayout(this.type);
        };
        VKeyboard.prototype.onProvince = function () {
            this.type = 'licence';
            this.changeLayout(this.type);
        };
        VKeyboard.prototype.onUpperChar = function () {
            this.type = 'upperchar';
            this.changeLayout(this.type);
        };
        VKeyboard.prototype.onSymbol = function () {
            this.type = 'symbol';
            this.changeLayout(this.type);
        };
        VKeyboard.prototype.onUppercase = function () {
            if (this.type === 'char') {
                this.type = 'upperchar';
            }
            else {
                this.type = 'char';
            }
            this.changeLayout(this.type);
        };
        VKeyboard.prototype.changeLayout = function (type) {
            var t = this;
            this.data = Keys({
                type: type,
                random: this.opt.random
            }).data;
            var html = tpl$l({
                css: css$o,
                t: t
            });
            this.drawer.content.innerHTML = html;
        };
        return VKeyboard;
    }(Utils));
    var default_1$I = /** @class */ (function () {
        function default_1(option) {
            return new VKeyboard(option);
        }
        return default_1;
    }());

    var VListItem = /** @class */ (function (_super) {
        __extends(VListItem, _super);
        function VListItem(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VListItem.prototype.render = function () {
        };
        VListItem.prototype.generateData = function () {
        };
        return VListItem;
    }(Utils));
    var default_1$H = /** @class */ (function () {
        function default_1(option) {
            return new VListItem(option);
        }
        return default_1;
    }());

    var VTitle = /** @class */ (function (_super) {
        __extends(VTitle, _super);
        function VTitle(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VTitle.prototype.render = function () {
        };
        VTitle.prototype.generateData = function () {
        };
        return VTitle;
    }(Utils));
    var default_1$G = /** @class */ (function () {
        function default_1(option) {
            return new VTitle(option);
        }
        return default_1;
    }());

    var VCellGroup = /** @class */ (function (_super) {
        __extends(VCellGroup, _super);
        function VCellGroup(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VCellGroup.prototype.render = function () {
        };
        VCellGroup.prototype.generateData = function () {
        };
        return VCellGroup;
    }(Utils));
    var default_1$F = /** @class */ (function () {
        function default_1(option) {
            return new VCellGroup(option);
        }
        return default_1;
    }());

    var VCheckboxGroup = /** @class */ (function (_super) {
        __extends(VCheckboxGroup, _super);
        function VCheckboxGroup(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VCheckboxGroup.prototype.render = function () {
        };
        VCheckboxGroup.prototype.generateData = function () {
        };
        return VCheckboxGroup;
    }(Utils));
    var default_1$E = /** @class */ (function () {
        function default_1(option) {
            return new VCheckboxGroup(option);
        }
        return default_1;
    }());

    var paragraph = "v-paragraph";
    var css$n = {
    	paragraph: paragraph,
    	"paragraph-content": "v-paragraph-content",
    	"paragraph-place": "v-paragraph-place",
    	"paragraph-handle": "v-paragraph-handle",
    	"paragraph-ellipsis": "v-paragraph-ellipsis",
    	"paragraph-label": "v-paragraph-label",
    	"paragraph-core": "v-paragraph-core"
    };

    function tpl$k(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['paragraph']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cinput" + (pug.attr("class", pug.classes([css['paragraph-core']], [true]), false, true)+" type=\"checkbox\""+pug.attr("checked", t.opt.visible, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['paragraph-content']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cspan" + (pug.attr("class", pug.classes([css['paragraph-place']], [true]), false, true)) + "\u003E\u003C\u002Fspan\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['paragraph-handle']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cspan" + (pug.attr("class", pug.classes([css['paragraph-ellipsis']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '…') ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    pug_html = pug_html + "\u003Cspan" + (pug.attr("class", pug.classes([css['paragraph-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.labels[0]) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    pug_html = pug_html + "\u003Cspan" + (pug.attr("class", pug.classes([css['paragraph-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.labels[1]) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    pug_html = pug_html + "\u003Csvg arial-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-point-down\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.content) ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VParagraph = /** @class */ (function (_super) {
        __extends(VParagraph, _super);
        function VParagraph(option) {
            var _this = _super.call(this) || this;
            _this.scrollHeight = 0;
            _this.offsetHeight = 0;
            _this.opt = {
                rows: 3,
                visible: false,
                labels: ['展开', '收起']
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.content = _this.el.innerText;
            _this.el.className = css$n['paragraph'];
            _this.el.style.maxHeight = _this.opt.rows * 1.5 + "em";
            _this.el.style.display = 'block';
            _this.scrollHeight = _this.el.scrollHeight;
            _this.offsetHeight = _this.el.offsetHeight;
            _this.hasMore = _this.scrollHeight > _this.offsetHeight;
            if (_this.hasMore) {
                _this.render();
            }
            else {
                _this.el.style.display = 'block';
            }
            return _this;
        }
        VParagraph.prototype.render = function () {
            var t = this;
            var html = tpl$k({
                t: t,
                css: css$n
            });
            var el = this.parseHtmlToDom(html);
            t.el.parentNode.replaceChild(el, t.el);
            this.el = el;
            this.core = this.el.querySelector('input');
            this.place = this.el.querySelector("." + css$n['paragraph-place']);
            this.handle = this.el.querySelector("." + css$n['paragraph-handle']);
            this.text = this.el.querySelector("." + css$n['paragraph-content']);
            this.el.style.lineHeight = '1';
            this.el.style.fontSize = '0px';
            this.renderActive(this.core.checked);
            this.bindEvent();
        };
        VParagraph.prototype.renderActive = function (checked) {
            var opt = this.opt;
            var rows = opt.rows;
            if (checked) {
                var hh = this.handle.offsetHeight;
                this.place.style.height = "calc(100% - " + hh + "px)";
                this.text.style.maxHeight = "none";
            }
            else {
                this.text.style.maxHeight = rows * 1.5 + "em";
                this.place.style.height = (rows - 1) * 1.5 + "em";
            }
        };
        VParagraph.prototype.bindEvent = function () {
            var _this = this;
            this.core.onchange = function () {
                _this.opt.visible = _this.core.checked;
                console.log(_this.opt.visible);
                _this.renderActive(_this.opt.visible);
            };
        };
        return VParagraph;
    }(Utils));
    var default_1$D = /** @class */ (function () {
        function default_1(option) {
            return new VParagraph(option);
        }
        return default_1;
    }());

    var css$m = {
    	"picker-group": "v-picker-group",
    	"picker-column": "v-picker-column",
    	"picker-item": "v-picker-item",
    	"picker-label": "v-picker-label",
    	"picker-unit": "v-picker-unit",
    	"picker-indicate": "v-picker-indicate",
    	"picker-scroll": "v-picker-scroll"
    };

    function tpl$j(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['picker-column']], [true]), false, true)+pug.attr("style", pug.style(`height:${t.opt.itemHeight * t.opt.vis}px;`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['picker-indicate']], [true]), false, true)+pug.attr("style", pug.style(`height:${t.opt.itemHeight * 2}px;margin-top:${-t.opt.itemHeight}px`), true, true)) + "\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['picker-scroll']], [true]), false, true)+" style=\"transform:translate3d(0,0,0)\"") + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("style", pug.style(`height:${t.opt.itemHeight * ((t.opt.vis - 1)/2)}px`), true, true)) + "\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['picker-group']], [true]), false, true)) + "\u003E";
    // iterate t.opt.data
    ;(function(){
      var $$obj = t.opt.data;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['picker-item']], [true]), false, true)+pug.attr("style", pug.style(`height:${t.opt.itemHeight}px`), true, true)+pug.attr("index", index, true, true)+" action=\"jump\"") + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['picker-label']], [true]), false, true)+pug.attr("index", index, true, true)+" action=\"jump\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['picker-unit']], [true]), false, true)+pug.attr("index", index, true, true)+" action=\"jump\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['unit']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['picker-item']], [true]), false, true)+pug.attr("style", pug.style(`height:${t.opt.itemHeight}px`), true, true)+pug.attr("index", index, true, true)+" action=\"jump\"") + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['picker-label']], [true]), false, true)+pug.attr("index", index, true, true)+" action=\"jump\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['picker-unit']], [true]), false, true)+pug.attr("index", index, true, true)+" action=\"jump\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['unit']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("style", pug.style(`height:${t.opt.itemHeight * ((t.opt.vis - 1)/2)}px`), true, true)) + "\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var Transition = /** @class */ (function (_super) {
        __extends(Transition, _super);
        function Transition(option) {
            var _this = _super.call(this) || this;
            _this.minX = 0;
            _this.minY = 0;
            _this.maxX = 0;
            _this.maxY = 0;
            _this.wrapperWidth = 0;
            _this.wrapperHeight = 0;
            _this.duration = 0;
            _this.pointY = 0;
            _this.pointX = 0;
            _this.startX = 0;
            _this.startY = 0;
            _this.offsetY = 0;
            _this.offsetX = 0;
            _this.startTime = 0;
            _this.momentumStartY = 0;
            _this.momentumStartX = 0;
            _this.momentumTimeThreshold = 300;
            _this.momentumYThreshold = 15;
            _this.momentumXThreshold = 15;
            _this.isStarted = false;
            _this.scale = 1;
            _this.bezier = 'linear';
            _this.opt = {
                step: 1,
                offsetX: 0,
                direction: ['x', 'y'],
                duration: 300,
                offsetY: 0,
                onTransitionEnd: function () { },
                onReady: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.offsetX = _this.opt.offsetX;
            _this.offsetY = _this.opt.offsetY;
            _this.mounted();
            return _this;
        }
        Transition.prototype.mounted = function () {
            var _this = this;
            this.init();
            this.bindEvent();
            this.opt.onReady();
            new default_1$W({
                el: this.opt.content,
                onResize: function () {
                    console.log('resize');
                    var h = _this.opt.content.parentNode.offsetHeight;
                    var sh = _this.opt.content.offsetHeight;
                    _this.minY = h - sh;
                }
            });
        };
        Transition.prototype.init = function () {
            var _a = this.opt, el = _a.el, content = _a.content;
            var wrapperWidth = el.offsetWidth;
            var wrapperHeight = el.offsetHeight;
            var scrollHeight = content.scrollHeight;
            var scrollWidth = content.scrollWidth;
            this.wrapperWidth = wrapperWidth;
            this.wrapperHeight = wrapperHeight;
            this.minY = wrapperHeight - scrollHeight;
            this.minX = wrapperWidth - scrollWidth;
            content.style.transform = "translate3d(" + -this.offsetX + "px, " + -this.offsetY + "px, 0) scale(" + this.scale + ")";
            el.style.overflow = 'hidden';
        };
        Transition.prototype.bindEvent = function () {
            var el = this.opt.el;
            el.ontouchstart = this.onTouchStart.bind(this);
            el.ontouchmove = this.onTouchMove.bind(this);
            el.ontouchend = this.onTouchEnd.bind(this);
            el.ontouchcancel = this.onTouchEnd.bind(this);
            // 兼容pc
            el.onmousedown = this.onTouchStart.bind(this);
            el.onmousemove = this.onTouchMove.bind(this);
            el.onmouseup = this.onTouchEnd.bind(this);
            el.onmouseleave = this.onTouchEnd.bind(this);
        };
        Transition.prototype.stop = function () {
            var content = this.opt.content;
            var _a = this.getTransform(content), translateX = _a.translateX, translateY = _a.translateY;
            this.offsetY = translateY;
            this.offsetX = translateX;
        };
        Transition.prototype.setStyle = function () {
            var _a = this, offsetY = _a.offsetY, offsetX = _a.offsetX, duration = _a.duration, bezier = _a.bezier;
            var _b = this.opt, content = _b.content, direction = _b.direction;
            var x = direction.indexOf('x') >= 0 ? offsetX : 0;
            var y = direction.indexOf('y') >= 0 ? offsetY : 0;
            content.style.transform = "translate3d(" + x + "px, " + y + "px, 0) scale(" + this.scale + ")";
            content.style.transitionDuration = duration + "ms";
            content.style.transitionTimingFunction = bezier;
        };
        Transition.prototype.onTouchStart = function (e) {
            e.preventDefault();
            var point = e.changedTouches ? e.changedTouches[0] : e;
            this.isStarted = true;
            this.duration = 0;
            this.stop();
            this.pointY = point.pageY;
            this.pointX = point.pageX;
            this.momentumStartY = this.startY = this.offsetY;
            this.momentumStartX = this.startX = this.offsetX;
            this.startTime = new Date().getTime();
        };
        Transition.prototype.onTouchMove = function (e) {
            if (!this.isStarted)
                return;
            var point = e.changedTouches ? e.changedTouches[0] : e;
            var deltaY = point.pageY - this.pointY;
            var deltaX = point.pageX - this.pointX;
            var offsetY = Math.round(this.startY + deltaY);
            var offsetX = Math.round(this.startX + deltaX);
            if (offsetY < this.minY || offsetY > this.maxY) {
                offsetY = Math.round(this.startY + deltaY / 3);
            }
            if (offsetX < this.minX || offsetX > this.maxX) {
                offsetX = Math.round(this.startX + deltaX / 3);
            }
            this.offsetX = offsetX;
            this.offsetY = offsetY;
            var now = new Date().getTime();
            if (now - this.startTime > this.momentumTimeThreshold) {
                this.momentumStartX = this.offsetX;
                this.momentumStartY = this.offsetY;
                this.startTime = now;
            }
            this.setStyle();
        };
        Transition.prototype.onTouchEnd = function () {
            var _this = this;
            if (!this.isStarted)
                return;
            this.isStarted = false;
            if (this.isNeedReset())
                return;
            var absDeltaX = Math.abs(this.offsetX - this.momentumStartX);
            var absDeltaY = Math.abs(this.offsetY - this.momentumStartY);
            var duration = new Date().getTime() - this.startTime;
            // 正常模式
            if (duration < this.momentumTimeThreshold) {
                var momentumY = void 0, momentumX = void 0;
                if (absDeltaY > this.momentumYThreshold && this.opt.direction.indexOf('y') >= 0) {
                    momentumY = this.momentum(this.offsetY, this.momentumStartY, this.wrapperHeight, this.minY, this.maxY, duration);
                    var destination = Math.round(momentumY.destination);
                    this.offsetY = destination;
                    this.duration = momentumY.duration;
                    this.bezier = momentumY.bezier;
                }
                if (absDeltaX > this.momentumXThreshold && this.opt.direction.indexOf('x') >= 0) {
                    momentumX = this.momentum(this.offsetX, this.momentumStartX, this.wrapperWidth, this.minX, this.maxX, duration);
                    var destination = Math.round(momentumX.destination);
                    this.offsetX = destination;
                    this.duration = momentumX.duration;
                    this.bezier = momentumX.bezier;
                }
            }
            else {
                this.duration = 300;
                this.bezier = "cubic-bezier(.25, .46, .45, .94)";
            }
            if (this.opt.step > 1) {
                this.offsetY = Math.round(this.offsetY / this.opt.step) * this.opt.step;
                this.offsetX = Math.round(this.offsetX / this.opt.step) * this.opt.step;
            }
            if (!this.duration) {
                this.duration = this.opt.duration;
            }
            this.setStyle();
            setTimeout(function () {
                _this.onTransitionEnd();
                if (_this.opt.onTransitionEnd) {
                    _this.opt.onTransitionEnd(_this.offsetY);
                }
            }, this.duration);
        };
        Transition.prototype.onTransitionEnd = function () {
            this.isNeedReset();
        };
        Transition.prototype.isNeedReset = function () {
            var offsetY, offsetX;
            var result = false;
            if (this.offsetY < this.minY) {
                offsetY = this.minY;
            }
            else if (this.offsetY > this.maxY) {
                offsetY = this.maxY;
            }
            if (this.offsetX < this.minX) {
                offsetX = this.minX;
            }
            else if (this.offsetX > this.maxX) {
                offsetX = this.maxX;
            }
            if (typeof offsetY !== 'undefined' && this.opt.direction.indexOf('y') >= 0) {
                this.offsetY = offsetY;
                this.duration = this.opt.duration;
                this.bezier = 'cubic-bezier(.165, .84, .44, 1)';
                result = true;
            }
            if (typeof offsetX !== 'undefined' && this.opt.direction.indexOf('x') >= 0) {
                this.offsetX = offsetX;
                this.duration = this.opt.duration;
                this.bezier = 'cubic-bezier(.165, .84, .44, 1)';
                result = true;
            }
            this.setStyle();
            return result;
        };
        Transition.prototype.momentum = function (current, start, wrapper, min, max, duration) {
            var durationMap = {
                'noBounce': 1500,
                'weekBounce': 800,
                'strongBounce': 400,
            };
            var bezierMap = {
                'noBounce': 'cubic-bezier(.17, .89, .45, 1)',
                'weekBounce': 'cubic-bezier(.25, .46, .45, .94)',
                'strongBounce': 'cubic-bezier(.25, .46, .45, .94)',
            };
            var type = 'noBounce';
            // 惯性滑动加速度
            var deceleration = 0.003;
            // 回弹阻力
            var bounceRate = 10;
            // 强弱回弹的分割值
            var bounceThreshold = 300;
            // 回弹的最大限度
            var maxOverflowY = wrapper / 6;
            var overflow;
            var distance = current - start;
            var speed = 2 * Math.abs(distance) / duration;
            var destination = current + speed / deceleration * (distance < 0 ? -1 : 1);
            if (destination < min) {
                overflow = min - destination;
                type = overflow > bounceThreshold ? 'strongBounce' : 'weekBounce';
                destination = Math.max(min - maxOverflowY, min - overflow / bounceRate);
            }
            else if (destination > max) {
                overflow = destination - max;
                type = overflow > bounceThreshold ? 'strongBounce' : 'weekBounce';
                destination = Math.min(max + maxOverflowY, max + overflow / bounceRate);
            }
            return {
                destination: destination,
                duration: durationMap[type],
                bezier: bezierMap[type],
            };
        };
        Transition.prototype.scrollTo = function (x, y) {
            this.offsetY = -y;
            this.offsetX = -x;
            if (this.isNeedReset())
                return;
            this.duration = this.opt.duration;
            this.bezier = 'cubic-bezier(.165, .84, .44, 1)';
            this.setStyle();
        };
        return Transition;
    }(Utils));
    var default_1$C = /** @class */ (function () {
        function default_1(option) {
            return new Transition(option);
        }
        return default_1;
    }());

    var VPickerColumn = /** @class */ (function (_super) {
        __extends(VPickerColumn, _super);
        function VPickerColumn(option) {
            var _this = _super.call(this) || this;
            _this.current = 0;
            _this.height = 0;
            _this.opt = {
                data: [],
                value: '',
                itemHeight: 44,
                vis: 5,
                fields: {
                    name: 'name',
                    value: 'code',
                    unit: 'unit'
                },
                onReady: function () { },
                onChange: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.init();
            return _this;
        }
        VPickerColumn.prototype.init = function () {
            this.mounted(this.opt.data, this.opt.value);
            this.renderDom();
        };
        VPickerColumn.prototype.mounted = function (data, value) {
            var _this = this;
            this.current = data.findIndex(function (a) { return a[_this.opt.fields['name']] === value; });
            if (this.current < 0) {
                this.current = 0;
            }
        };
        VPickerColumn.prototype.renderDom = function () {
            var t = this;
            var html = tpl$j({
                t: t,
                css: css$m
            });
            var el = this.parseHtmlToDom(html);
            this.el.parentNode.replaceChild(el, this.el);
            this.el = el;
            this.scroll = this.el.querySelector("." + css$m['picker-scroll']);
            this.group = this.scroll.querySelector("." + css$m['picker-group']);
            this.items = this.scroll.querySelectorAll("." + css$m['picker-item']);
            this.height = this.scroll.offsetHeight;
            this.bindEvent();
        };
        VPickerColumn.prototype.bindEvent = function () {
            var _this = this;
            var _a = this, el = _a.el, scroll = _a.scroll, opt = _a.opt;
            var itemHeight = opt.itemHeight;
            this.transition = new default_1$C({
                el: el,
                content: scroll,
                step: itemHeight,
                direction: ['y'],
                offsetY: this.current * itemHeight,
                onReady: function () {
                    _this.renderActive('ready');
                },
                onTransitionEnd: function (y) {
                    _this.current = Math.abs(y / itemHeight);
                    if (!_this.opt.data[_this.current])
                        return;
                    _this.opt.value = _this.opt.data[_this.current][_this.opt.fields['name']];
                    _this.renderActive('change');
                }
            });
        };
        VPickerColumn.prototype.renderActive = function (type) {
            var _a = this, current = _a.current, items = _a.items;
            items.forEach(function (item, i) {
                var c = item;
                if (current === i) {
                    c.setAttribute('active', '');
                }
                else {
                    c.removeAttribute('active');
                }
            });
            var cur = this.opt.data[this.current];
            var name = type === 'ready' ? 'onReady' : 'onChange';
            this.opt[name]({
                current: this.current,
                value: cur[this.opt.fields['name']],
                data: cur
            });
        };
        VPickerColumn.prototype.render = function (data, value) {
            this.opt.data = data;
            this.opt.value = value;
            this.init();
        };
        VPickerColumn.prototype.scrollTo = function (value) {
            this.opt.value = value;
            this.mounted(this.opt.data, this.opt.value);
            this.transition.scrollTo(0, this.current * this.opt.itemHeight);
            this.renderActive('change');
        };
        return VPickerColumn;
    }(Utils));
    var default_1$B = /** @class */ (function () {
        function default_1(option) {
            return new VPickerColumn(option);
        }
        return default_1;
    }());

    var scroll = "v-scroll";
    var css$l = {
    	scroll: scroll,
    	"scroll-content": "v-scroll-content"
    };

    var VScroll = /** @class */ (function (_super) {
        __extends(VScroll, _super);
        function VScroll(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                refresh: true,
                loading: true
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            return _this;
        }
        VScroll.prototype.render = function () {
            var scroll = document.createElement('div');
            scroll.className = css$l['scroll'];
            var scrollcontent = document.createElement('div');
            scrollcontent.className = css$l['scroll-content'];
            this.wrap(scrollcontent, this.el);
            this.wrap(scroll, scrollcontent);
            this.el = scroll;
            this.content = scrollcontent;
            this.transition = new default_1$C({
                el: scroll,
                direction: ['y'],
                content: scrollcontent,
                offsetY: 200
            });
        };
        return VScroll;
    }(Utils));
    var default_1$A = /** @class */ (function () {
        function default_1(option) {
            return new VScroll(option);
        }
        return default_1;
    }());

    var css$k = {
    	"picker-view": "v-picker-view"
    };

    var VPickerView = /** @class */ (function (_super) {
        __extends(VPickerView, _super);
        function VPickerView(option) {
            var _this = _super.call(this) || this;
            _this.pickers = [];
            _this.async = true;
            _this.value = [];
            _this.current = [];
            _this.opt = {
                el: '',
                columns: 5,
                fields: {
                    name: 'name',
                    value: 'code',
                    unit: 'unit'
                },
                vis: 5,
                itemHeight: 44,
                value: [],
                onChange: function (data) { },
                onReady: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.mounted();
            return _this;
        }
        VPickerView.prototype.mounted = function () {
            this.initData();
            this.renderPicker();
        };
        VPickerView.prototype.renderPicker = function () {
            var _this = this;
            var _a = this, el = _a.el, opt = _a.opt;
            var value = opt.value, vis = opt.vis, itemHeight = opt.itemHeight;
            el.className = css$k['picker-view'];
            el.innerHTML = '';
            this.data.forEach(function (data, index) {
                if (index > _this.opt.columns - 1)
                    return;
                var els = document.createElement('div');
                el.appendChild(els);
                var v = value[index] ? value[index] : data[0][opt.fields['name']];
                _this.opt.value[index] = v;
                _this.pickers[index] = new default_1$B({
                    el: els,
                    data: data,
                    vis: vis,
                    itemHeight: itemHeight,
                    value: v,
                    onReady: function (data) {
                        _this.current[index] = data.current;
                        _this.value[index] = data.data;
                        _this.opt.value[index] = data.value;
                    },
                    onChange: function (cb) {
                        _this.refresh(cb, index);
                    }
                });
            });
            this.opt.onReady({
                current: this.current,
                data: this.value,
                value: this.opt.value
            });
        };
        VPickerView.prototype.refresh = function (data, index) {
            if (this.async) {
                this.opt.value[index] = data.value;
                this.opt.onChange({
                    value: this.opt.value,
                });
            }
            else {
                this.opt.value.splice(index);
                this.opt.value[index] = data.value;
                this.initData();
                this.reinit();
                var value = this.source.value.map(function (a) { return a.name; });
                this.opt.value = value;
                this.opt.onChange({
                    current: this.source.indexs,
                    value: this.opt.value,
                    data: this.source.value
                });
            }
        };
        VPickerView.prototype.reinit = function () {
            var _this = this;
            this.data.forEach(function (data, index) {
                _this.pickers[index].render(data, _this.opt.value[index]);
            });
        };
        VPickerView.prototype.initData = function () {
            // 判断data子元素是否是数组，如果不是则代表包含children属性，则内部处理
            this.async = this.isArray(this.opt.data[0]);
            if (this.async) {
                this.data = this.opt.data;
                return;
            }
            this.source = this.ArraytoTree(this.opt.data, this.opt.value, this.opt.fields);
            this.data = this.source.data;
        };
        VPickerView.prototype.render = function (data, value) {
            this.data = data;
            this.opt.value = value.split(/[/ :]/);
            this.renderPicker();
        };
        return VPickerView;
    }(Utils));
    var default_1$z = /** @class */ (function () {
        function default_1(option) {
            return new VPickerView(option);
        }
        return default_1;
    }());

    var VPicker = /** @class */ (function (_super) {
        __extends(VPicker, _super);
        function VPicker(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                fields: {
                    name: 'name',
                    value: 'code',
                    children: 'children'
                },
                value: [],
                title: '请选择',
                event: 'click',
                vis: 7,
                radius: 'conner',
                data: [],
                height: 300,
                onConfirm: function () { },
                onChange: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            if (!_this.opt.event) {
                _this.generateData();
                _this.render();
                return _this;
            }
            _this.el.addEventListener('click', function () {
                _this.generateData();
                _this.render();
            });
            return _this;
        }
        VPicker.prototype.render = function () {
            var _this = this;
            var _a = this, el = _a.el, opt = _a.opt;
            var title = opt.title, radius = opt.radius;
            this.drawer = new default_1$1q({
                el: el,
                title: title,
                radius: radius,
                onReady: function (el) {
                    _this.renderDom(el);
                },
                onButtonClick: function () {
                    _this.opt.onConfirm({
                        value: _this.opt.value,
                        data: _this.value
                    });
                }
            });
        };
        VPicker.prototype.renderDom = function (el) {
            var _a = this; _a.opt; var data = _a.data, value = _a.value;
            this.view = new default_1$z({
                el: el,
                data: data,
                value: value
            });
        };
        VPicker.prototype.generateData = function () {
            var _a = this.opt, data = _a.data, value = _a.value, fields = _a.fields;
            var result = this.ArraytoTree(data, value, fields);
            this.data = result.data;
            this.value = result.value;
            this.current = result.indexs;
        };
        VPicker.prototype.hide = function () {
            this.drawer.hide();
        };
        return VPicker;
    }(Utils));
    var default_1$y = /** @class */ (function () {
        function default_1(option) {
            return new VPicker(option);
        }
        return default_1;
    }());

    var default_1$x = /** @class */ (function () {
        function default_1() {
        }
        return default_1;
    }());

    var actionselect = "v-actionselect";
    var css$j = {
    	actionselect: actionselect,
    	"actionselect-content": "v-actionselect-content",
    	"actionselect-head": "v-actionselect-head",
    	"actionselect-head-item": "v-actionselect-head-item",
    	"actionselect-title": "v-actionselect-title",
    	"actionselect-textarea": "v-actionselect-textarea",
    	"actionselect-list": "v-actionselect-list",
    	"actionselect-item": "v-actionselect-item",
    	"actionselect-check": "v-actionselect-check",
    	"actionselect-label": "v-actionselect-label"
    };

    function tpl$i(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    var disabled = t.opt.maxLength > 0 && t.value.length >= t.opt.maxLength;
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['actionselect']], [true]), false, true)+pug.attr("shape", t.opt.shape, true, true)+pug.attr("disabled", disabled, true, true)+pug.attr("radius", t.opt.radius, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['actionselect-content']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cul" + (pug.attr("class", pug.classes([css['actionselect-list']], [true]), false, true)) + "\u003E";
    // iterate t.opt.options
    ;(function(){
      var $$obj = t.opt.options;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cli" + (pug.attr("class", pug.classes([css['actionselect-item'],item.active], [true,true]), false, true)+pug.attr("index", index, true, true)+pug.attr("active", item.active, true, true)+" action=\"pickItem\"") + "\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['actionselect-label']], [true]), false, true)+pug.attr("index", index, true, true)+" action=\"pickItem\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['actionselect-check']], [true]), false, true)+pug.attr("index", index, true, true)+" action=\"pickItem\"") + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (" aria-hidden=\"true\""+pug.attr("spin", t.opt.spin, true, true)+pug.attr("index", index, true, true)+" action=\"pickItem\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (" xlink:href=\"#icon-check\""+pug.attr("index", index, true, true)+" action=\"pickItem\"") + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fli\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cli" + (pug.attr("class", pug.classes([css['actionselect-item'],item.active], [true,true]), false, true)+pug.attr("index", index, true, true)+pug.attr("active", item.active, true, true)+" action=\"pickItem\"") + "\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['actionselect-label']], [true]), false, true)+pug.attr("index", index, true, true)+" action=\"pickItem\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['actionselect-check']], [true]), false, true)+pug.attr("index", index, true, true)+" action=\"pickItem\"") + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (" aria-hidden=\"true\""+pug.attr("spin", t.opt.spin, true, true)+pug.attr("index", index, true, true)+" action=\"pickItem\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (" xlink:href=\"#icon-check\""+pug.attr("index", index, true, true)+" action=\"pickItem\"") + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fli\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Ful\u003E\u003C\u002Fdiv\u003E";
    if (t.opt.multiple) {
    var length=t.opt.value.length;
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['actionselect-head']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['actionselect-head-item']], [true]), false, true)+" action=\"onEmpty\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = length ? `清空(${length})` : '清空') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    if (t.opt.maxLength === 0) {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['actionselect-head-item']], [true]), false, true)+" action=\"onReverse\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '反选') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['actionselect-head-item']], [true]), false, true)+" action=\"onAll\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '全选') ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    else {
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['actionselect-head-item']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `不超过${t.opt.maxLength}项`) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VActionselect = /** @class */ (function (_super) {
        __extends(VActionselect, _super);
        function VActionselect(option) {
            var _this = _super.call(this) || this;
            _this.scrolltop = 0;
            _this.value = [];
            _this.opt = {
                el: '',
                title: '请选择',
                options: [],
                fields: {
                    name: 'name',
                    value: 'value'
                },
                maxLength: 0,
                value: '',
                radius: 'conner',
                placement: 'bottom',
                separate: ',',
                autofill: true,
                multiple: false,
                footer: true,
                onChange: function () { },
                onEmpty: function () { },
                onSelectAll: function () { },
                onReverse: function () { },
                onConfirm: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.setValue();
            _this.el.onclick = function () {
                _this.render();
            };
            return _this;
        }
        VActionselect.prototype.render = function () {
            var _this = this;
            var t = this;
            var _a = this, opt = _a.opt, el = _a.el;
            var title = opt.title, footer = opt.footer, radius = opt.radius, placement = opt.placement;
            this.drawer = new default_1$1q({
                el: el,
                title: title,
                radius: radius,
                placement: placement,
                buttons: footer ? [{ name: '取消', value: 'onCancel' }, { name: '确认', value: 'onConfirm' }] : [],
                onReady: function (dom) {
                    _this.computedOption(_this.opt.value);
                    var html = tpl$i({
                        css: css$j,
                        t: t
                    });
                    dom.innerHTML = html;
                    _this.dom = dom.querySelector("." + css$j['actionselect']);
                    _this.scrollCenter();
                    _this.bindClick();
                    _this.bindScroll();
                },
                onButtonClick: function () {
                    _this.opt.onConfirm(_this.value);
                    _this.setValue();
                    // this.drawer.hide()
                }
            });
        };
        VActionselect.prototype.setValue = function () {
            var _a = this, opt = _a.opt, el = _a.el;
            var value = opt.value, autofill = opt.autofill, separate = opt.separate;
            if (!autofill)
                return;
            var v = typeof value === 'string' ? value : value.join(separate);
            if (el.tagName === 'INPUT') {
                el.value = v;
            }
            else {
                var input = el.querySelector('input');
                if (input) {
                    input.value = v;
                }
                else {
                    el.innerHTML = v;
                }
            }
        };
        VActionselect.prototype.bindScroll = function () {
            var _this = this;
            this.scroll.onscroll = function () {
                _this.scrolltop = _this.scroll.scrollTop;
            };
        };
        VActionselect.prototype.showTip = function (message) {
            this.toast = new default_1$Y({
                el: this.el,
                message: message,
                placement: 'end',
                mask: false,
                duration: 1000
            });
        };
        VActionselect.prototype.scrollCenter = function () {
            this.scroll = this.drawer.content.querySelector("." + css$j['actionselect-content']);
            var current = this.scroll.querySelector(".true");
            if (current) {
                this.scrolltop = this.scrolltop ? this.scrolltop : current.offsetTop - this.scroll.offsetHeight / 2;
            }
            this.scroll.scrollTop = this.scrolltop;
        };
        VActionselect.prototype.bindClick = function () {
            var _this = this;
            this.drawer.content.onclick = function (e) {
                var target = e.target;
                var index = parseInt(target.getAttribute('index'));
                var action = target.getAttribute('action');
                if (action) {
                    _this[action](index);
                }
            };
        };
        VActionselect.prototype.onEmpty = function () {
            var multiple = this.opt.multiple;
            this.opt.value = multiple ? [] : '';
            this.computedOption(this.opt.value);
            this.scrolltop = 0;
            this.rerender();
            this.opt.onEmpty();
        };
        VActionselect.prototype.onReverse = function () {
            var _a = this.opt, value = _a.value, fields = _a.fields, options = _a.options, maxLength = _a.maxLength;
            var v = typeof this.opt.value === 'string' ? [this.opt.value] : this.opt.value;
            if (maxLength > 0 && options.length - v.length > maxLength) {
                this.showTip("\u5F85\u9009\u4E2A\u6570\u8D85\u8FC7" + this.opt.maxLength + "\u4E2A");
                return false;
            }
            this.opt.options.forEach(function (item, index) {
                var idx = value.indexOf(item[fields['name']]);
                if (idx >= 0) {
                    v.splice(idx, 1);
                }
                else {
                    v.push(item[fields['name']]);
                }
            });
            this.opt.value = v;
            this.computedOption(this.opt.value);
            this.rerender();
            this.opt.onReverse(this.value);
        };
        VActionselect.prototype.onAll = function () {
            var _a = this.opt, options = _a.options, fields = _a.fields, maxLength = _a.maxLength;
            var v = options.map(function (a) { return a[fields['name']]; });
            if (maxLength > 0 && options.length > maxLength) {
                this.showTip("\u603B\u4E2A\u6570\u8D85\u8FC7" + this.opt.maxLength + "\u4E2A");
                return false;
            }
            this.opt.value = v;
            this.computedOption(this.opt.value);
            this.rerender();
            this.opt.onSelectAll(this.value);
        };
        VActionselect.prototype.pickItem = function (index) {
            var _a = this.opt, options = _a.options, fields = _a.fields, multiple = _a.multiple, maxLength = _a.maxLength;
            var value = options[index][fields['name']];
            var v = typeof this.opt.value === 'string' ? [this.opt.value] : this.opt.value;
            if (multiple) {
                var index_1 = this.opt.value.indexOf(value);
                if (index_1 >= 0) {
                    v.splice(index_1, 1);
                }
                else {
                    if (maxLength > 0 && v.length >= maxLength) {
                        this.showTip("\u5DF2\u9009\u4E2D" + this.opt.maxLength + "\u4E2A");
                        return false;
                    }
                    v.push(value);
                }
                this.opt.value = v;
            }
            else {
                this.opt.value = value;
            }
            this.computedOption(this.opt.value);
            this.rerender();
            if (!this.opt.multiple && !this.opt.footer) {
                this.drawer.hide();
                this.setValue();
            }
        };
        VActionselect.prototype.rerender = function () {
            var t = this;
            this.drawer.content.innerHTML = tpl$i({
                css: css$j,
                t: t
            });
            this.scrollCenter();
            this.bindScroll();
        };
        VActionselect.prototype.computedOption = function (value) {
            var _this = this;
            var _a = this.opt, options = _a.options, multiple = _a.multiple, fields = _a.fields;
            options.find(function (item, index) {
                var isIndex = multiple ? value.indexOf(item[fields['name']]) >= 0 : item[fields['name']] === value;
                if (isIndex) {
                    _this.opt.options[index]['active'] = true;
                }
                else {
                    delete _this.opt.options[index]['active'];
                }
            });
            this.value = this.opt.options.filter(function (a) { return a['active']; });
            this.valuestring = this.value.map(function (a) { return a[fields['name']]; });
            this.opt.onChange({
                value: this.value,
                valuestring: this.valuestring
            });
        };
        return VActionselect;
    }(Utils));
    var default_1$w = /** @class */ (function () {
        function default_1(option) {
            return new VActionselect(option);
        }
        return default_1;
    }());

    var VSelect = /** @class */ (function (_super) {
        __extends(VSelect, _super);
        function VSelect(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VSelect.prototype.render = function () {
        };
        VSelect.prototype.generateData = function () {
        };
        return VSelect;
    }(Utils));
    var default_1$v = /** @class */ (function () {
        function default_1(option) {
            return new VSelect(option);
        }
        return default_1;
    }());

    function tpl$h(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['contextmenu']], [true]), false, true)) + "\u003E";
    // iterate t.opt.options
    ;(function(){
      var $$obj = t.opt.options;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['contextmenu-item']], [true]), false, true)+" action=\"onItemClick\""+pug.attr("index", index, true, true)+pug.attr("name", item[t.opt.fields['name']], true, true)) + "\u003E";
    if (t.opt.fields['icon'] in item) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['contextmenu-icon']], [true]), false, true)+" action=\"onItemClick\""+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (" aria-hidden=\"true\" action=\"onItemClick\""+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", `#icon-${item[t.opt.fields['icon']]}`, true, true)+" action=\"onItemClick\""+pug.attr("index", index, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['contextmenu-label']], [true]), false, true)+" action=\"onItemClick\""+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['contextmenu-check']], [true]), false, true)+" action=\"onItemClick\""+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (" aria-hidden=\"true\" action=\"onItemClick\""+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (" xlink:href=\"#icon-check\" action=\"onItemClick\""+pug.attr("index", index, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['contextmenu-item']], [true]), false, true)+" action=\"onItemClick\""+pug.attr("index", index, true, true)+pug.attr("name", item[t.opt.fields['name']], true, true)) + "\u003E";
    if (t.opt.fields['icon'] in item) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['contextmenu-icon']], [true]), false, true)+" action=\"onItemClick\""+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (" aria-hidden=\"true\" action=\"onItemClick\""+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", `#icon-${item[t.opt.fields['icon']]}`, true, true)+" action=\"onItemClick\""+pug.attr("index", index, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['contextmenu-label']], [true]), false, true)+" action=\"onItemClick\""+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['contextmenu-check']], [true]), false, true)+" action=\"onItemClick\""+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (" aria-hidden=\"true\" action=\"onItemClick\""+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (" xlink:href=\"#icon-check\" action=\"onItemClick\""+pug.attr("index", index, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var contextmenu = "v-contextmenu";
    var css$i = {
    	contextmenu: contextmenu,
    	"contextmenu-item": "v-contextmenu-item",
    	"contextmenu-check": "v-contextmenu-check",
    	"contextmenu-label": "v-contextmenu-label",
    	"contextmenu-icon": "v-contextmenu-icon"
    };

    var VContextmenu = /** @class */ (function (_super) {
        __extends(VContextmenu, _super);
        function VContextmenu(option) {
            var _this = _super.call(this) || this;
            _this.value = [];
            _this.opt = {
                el: '',
                placement: 'right',
                options: [],
                event: 'click',
                offset: 0,
                space: 20,
                fields: {
                    name: 'name',
                    icon: 'icon'
                },
                onClick: function () { },
                onChange: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.page = _this.parents(_this.opt.el, 'v-page');
            _this.el.onclick = function () {
                _this.render();
            };
            return _this;
        }
        VContextmenu.prototype.render = function () {
            var _this = this;
            var t = this;
            var el = this.el;
            this.mask = new default_1$1s({
                el: el,
                clickable: false,
                placement: 'top-start',
                background: 'rgba(0, 0, 0, 0.2)',
                onReady: function (dom) {
                    var html = tpl$h({
                        css: css$i,
                        t: t
                    });
                    _this.dom = dom.appendChild(_this.parseHtmlToDom(html));
                    _this.items = _this.dom.querySelectorAll("." + css$i['contextmenu-item']);
                    _this.show();
                    _this.bindClick();
                    _this.renderActive();
                },
                onClick: function () {
                    _this.hide();
                }
            });
        };
        VContextmenu.prototype.computedStyle = function () {
            var _a = this, el = _a.el, page = _a.page, dom = _a.dom, opt = _a.opt;
            var space = opt.space;
            var pos = this.offset(el);
            var poffset = this.offset(page);
            var wrap = {
                width: page.offsetWidth,
                height: page.offsetHeight,
                top: poffset.top,
                left: poffset.left
            };
            var center = {
                top: pos.top - wrap.top,
                left: pos.left - wrap.left,
                right: wrap.width - (pos.left - wrap.left) - el.offsetWidth,
                bottom: wrap.height - (pos.top - wrap.top) - el.offsetHeight
            };
            var h = center.left > center.right ? 'right' : 'left';
            var v = center.top > center.bottom ? 'bottom' : 'top';
            var ht = center.top > center.bottom ? wrap.height - center.bottom - space : wrap.height - center.top - space;
            var placement = h + "-" + v;
            dom.style[h] = center[h] + "px";
            dom.style[v] = center[v] + "px";
            dom.style.position = 'absolute';
            dom.style.maxHeight = ht + "px";
            dom.setAttribute('placement', placement);
        };
        VContextmenu.prototype.bindClick = function () {
            var _this = this;
            this.dom.onclick = function (e) {
                e.stopPropagation();
                var target = e.target;
                var action = target.getAttribute('action');
                if (action) {
                    _this[action](target);
                }
            };
        };
        VContextmenu.prototype.onItemClick = function (target) {
            var _a = this.opt, options = _a.options, mode = _a.mode, fields = _a.fields;
            var index = parseInt(target.getAttribute('index'));
            var current = options[index];
            if (!mode) {
                this.opt.onChange(current);
                this.hide();
            }
            else {
                if (mode === 'single') {
                    this.value = [current];
                    this.hide();
                }
                else {
                    var i = this.value.findIndex(function (a) { return a[fields['name']] === current[fields['name']]; });
                    if (i < 0) {
                        this.value.push(current);
                    }
                    else {
                        this.value.splice(i, 1);
                    }
                }
                this.opt.onChange(this.value);
                this.renderActive();
            }
        };
        VContextmenu.prototype.renderActive = function () {
            var _a = this, items = _a.items, value = _a.value, opt = _a.opt;
            items.forEach(function (item, index) {
                var citem = item;
                var name = citem.getAttribute(opt.fields['name']);
                var i = value.findIndex(function (a) { return a[opt.fields['name']] === name; });
                console.log(i);
                if (i >= 0) {
                    citem.setAttribute('active', '');
                }
                else {
                    citem.removeAttribute('active');
                }
            });
        };
        VContextmenu.prototype.show = function () {
            var _this = this;
            this.dom.style.display = 'inline-block';
            this.computedStyle();
            setTimeout(function () {
                _this.dom.style.transitionDuration = '0.3s';
                _this.dom.style.transitionTimingFunction = "cubic-bezier(.25, .46, .45, .94)";
                _this.dom.setAttribute('visible', '');
            }, 20);
        };
        VContextmenu.prototype.hide = function () {
            this.dom.removeAttribute('visible');
            this.mask.hide();
        };
        return VContextmenu;
    }(Utils));
    var default_1$u = /** @class */ (function () {
        function default_1(option) {
            return new VContextmenu(option);
        }
        return default_1;
    }());

    var sliderverify = "v-sliderverify";
    var css$h = {
    	sliderverify: sliderverify,
    	"sliderverify-image": "v-sliderverify-image",
    	"sliderverify-content": "v-sliderverify-content",
    	"sliderverify-indicate": "v-sliderverify-indicate",
    	"sliderverify-canvas": "v-sliderverify-canvas",
    	"sliderverify-refresh": "v-sliderverify-refresh",
    	"sliderverify-handle": "v-sliderverify-handle",
    	"sliderverify-handle-bar": "v-sliderverify-handle-bar",
    	"sliderverify-progress": "v-sliderverify-progress",
    	"sliderverify-tip": "v-sliderverify-tip"
    };

    function tpl$g(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['sliderverify']], [true]), false, true)+pug.attr("radius", t.opt.radius, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cinput" + (" type=\"range\" min=\"0\" max=\"100\" step=\"1\""+pug.attr("value", t.value, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['sliderverify-content']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Ccanvas" + (pug.attr("class", pug.classes([css['sliderverify-canvas']], [true]), false, true)+pug.attr("height", t.opt.height, true, true)+pug.attr("width", t.width, true, true)) + "\u003E\u003C\u002Fcanvas\u003E";
    pug_html = pug_html + "\u003Ccanvas" + (pug.attr("class", pug.classes([css['sliderverify-indicate']], [true]), false, true)+pug.attr("height", t.opt.height, true, true)+pug.attr("width", t.width, true, true)) + "\u003E\u003C\u002Fcanvas\u003E";
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['sliderverify-refresh']], [true]), false, true)+" arial-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-refresh\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['sliderverify-handle']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['sliderverify-progress']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['sliderverify-handle-bar']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg arial-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-arrow-right\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['sliderverify-tip']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '向右滑动滑块验证') ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VSliderverify = /** @class */ (function (_super) {
        __extends(VSliderverify, _super);
        function VSliderverify(option) {
            var _this = _super.call(this) || this;
            _this.width = 0;
            _this.value = 0;
            _this.max = 0;
            _this.opt = {
                el: '',
                height: 200,
                url: './docs/assets/images/500px1038353170.jpg',
                radius: 'conner',
                x: 100,
                y: 67,
                w: 42,
                r: 10,
                l: 2,
                text: '向右滑动填充拼图',
                refreshIcon: 'refresh',
                onSuccess: function () { },
                onFaild: function () { },
                onRefresh: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.width = _this.el.offsetWidth;
            _this.render();
            return _this;
        }
        VSliderverify.prototype.render = function () {
            var t = this;
            var html = tpl$g({
                css: css$h,
                t: t
            });
            this.el.innerHTML = html;
            this.canvas = this.el.querySelector("." + css$h['sliderverify-canvas']);
            this.indicate = this.el.querySelector("." + css$h['sliderverify-indicate']);
            this.content = this.el.querySelector("." + css$h['sliderverify-content']);
            this.range = this.el.querySelector('input');
            this.handle = this.el.querySelector("." + css$h['sliderverify-handle-bar']);
            this.progress = this.el.querySelector("." + css$h['sliderverify-progress']);
            this.ctx1 = this.canvas.getContext('2d');
            this.ctx2 = this.indicate.getContext('2d');
            this.max = this.width - this.handle.offsetWidth;
            this.loadImage();
        };
        VSliderverify.prototype.loadImage = function () {
            var _this = this;
            var _a = this, ctx1 = _a.ctx1, ctx2 = _a.ctx2, opt = _a.opt, width = _a.width;
            var height = opt.height, url = opt.url;
            var img = new Image();
            img.crossOrigin = '';
            img.src = url;
            img.onload = function () {
                ctx1.drawImage(img, 0, 0, width, height);
                ctx2.drawImage(img, 0, 0, width, height);
            };
            this.drawBlock(ctx1, 'fill');
            this.drawBlock(ctx2, 'clip', function (ctx) {
                setTimeout(function () {
                    _this.resizeBlock(ctx);
                    _this.bindInput();
                }, 800);
            });
        };
        VSliderverify.prototype.resizeBlock = function (ctx) {
            var _a = this.opt, w = _a.w, r = _a.r, y = _a.y, x = _a.x, l = _a.l;
            var blockWidth = w + r * 2;
            var _y = y - r * 2 - l;
            var imageData = ctx.getImageData(x - l / 2, _y, blockWidth + l * 2, blockWidth + l * 2);
            var indicate = this.indicate;
            indicate.width = blockWidth;
            ctx.putImageData(imageData, 0, _y);
        };
        VSliderverify.prototype.drawBlock = function (ctx, type, fn) {
            var _a = this.opt, x = _a.x, y = _a.y, w = _a.w, r = _a.r, l = _a.l;
            var PI = Math.PI;
            ctx.beginPath();
            ctx.moveTo(x, y);
            ctx.arc(x + w / 2, y - r + l, r, 0.72 * PI, 2.26 * PI);
            ctx.lineTo(x + w, y);
            ctx.arc(x + w + r - l, y + w / 2, r, 1.21 * PI, 2.78 * PI);
            ctx.lineTo(x + w, y + w);
            ctx.lineTo(x, y + w);
            ctx.arc(x + r - l, y + w / 2, r, 2.76 * PI, 1.24 * PI, true);
            ctx.lineTo(x, y);
            ctx.lineWidth = l;
            ctx.fillStyle = 'rgba(255,255,255,0.7)';
            ctx.strokeStyle = 'rgba(255,255,255,0.7)';
            ctx.stroke();
            ctx.globalCompositeOperation = 'destination-over';
            type === 'fill' ? ctx.fill() : ctx.clip();
            if (fn) {
                fn(ctx);
            }
        };
        VSliderverify.prototype.bindInput = function () {
            var _this = this;
            var range = this.range;
            range.oninput = function () {
                var x = parseInt(range.value) / 100 * _this.max;
                _this.handle.style.transform = "translate3d(" + x + "px, 0, 0)";
                _this.progress.style.width = x + _this.handle.offsetWidth / 2 + "px";
                var m = _this.width - _this.opt.w - _this.opt.r * 2;
                var px = parseInt(range.value) / 100 * m;
                _this.indicate.style.transform = "translate3d(" + px + "px, 0, 0)";
            };
        };
        return VSliderverify;
    }(Utils));
    var default_1$t = /** @class */ (function () {
        function default_1(option) {
            return new VSliderverify(option);
        }
        return default_1;
    }());

    var VGongge = /** @class */ (function (_super) {
        __extends(VGongge, _super);
        function VGongge(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VGongge.prototype.render = function () {
        };
        VGongge.prototype.generateData = function () {
        };
        return VGongge;
    }(Utils));
    var default_1$s = /** @class */ (function () {
        function default_1(option) {
            return new VGongge(option);
        }
        return default_1;
    }());

    var field = "v-field";
    var fieldIndicate = "v-fieldIndicate";
    var css$g = {
    	field: field,
    	"field-content": "v-field-content",
    	"field-core": "v-field-core",
    	"field-placeholder": "v-field-placeholder",
    	"field-indicate": "v-field-indicate",
    	"field-prefix": "v-field-prefix",
    	"field-suffix": "v-field-suffix",
    	"field-clear": "v-field-clear",
    	"field-length": "v-field-length",
    	fieldIndicate: fieldIndicate
    };

    function tpl$f(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['field']], [true]), false, true)+pug.attr("type", t.opt.type, true, true)+" tabindex=\"-1\""+pug.attr("placeholder", t.opt.value.length > 0, true, true)+pug.attr("radius", t.opt.radius, true, true)+pug.attr("shape", t.opt.shape, true, true)+pug.attr("hairline", t.opt.hairline, true, true)+pug.attr("clearable", t.opt.value, true, true)+pug.attr("justify", t.opt.justify, true, true)) + "\u003E";
    if (t.opt.prefixLabel || t.opt.prefixIcon) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['field-prefix']], [true]), false, true)) + "\u003E";
    if (t.opt.prefixLabel) {
    pug_html = pug_html + "\u003Cspan\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.prefixLabel) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    }
    if (t.opt.prefixIcon) {
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", `#icon-${t.opt.prefixIcon}`, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['field-content']], [true]), false, true)) + "\u003E";
    if (t.opt.placeholder) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['field-placeholder']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.placeholder) ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['field-core']], [true]), false, true)+pug.attr("contenteditable", t.native, true, true)+pug.attr("style", pug.style(`height:${t.opt.rows * 1.6}em`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['field-indicate']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    if (t.opt.suffixLabel || t.opt.suffixIcon || t.opt.maxLength) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['field-suffix']], [true]), false, true)) + "\u003E";
    if (t.opt.clearable) {
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['field-clear']], [true]), false, true)+" aria-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-clear\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    if (t.opt.maxLength) {
    pug_html = pug_html + "\u003Cspan" + (pug.attr("class", pug.classes([css['field-length']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `${t.opt.value.length}/${t.opt.maxLength}`) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    }
    if (t.opt.suffixLabel) {
    pug_html = pug_html + "\u003Cspan\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.opt.suffixLabel) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    }
    if (t.opt.suffixIcon) {
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", `#icon-${t.opt.suffixIcon}`, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VField = /** @class */ (function (_super) {
        __extends(VField, _super);
        function VField(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                placeholder: '请输入',
                value: '',
                type: 'text',
                maxLength: 0,
                rows: 1,
                onChange: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.value = _this.value ? _this.value : _this.opt.value;
            _this.native = _this.opt.type === 'text';
            _this.render();
            return _this;
        }
        VField.prototype.render = function () {
            var t = this;
            var html = tpl$f({
                t: t,
                css: css$g
            });
            var el = this.parseHtmlToDom(html);
            this.el.parentNode.replaceChild(el, this.el);
            this.el = el;
            this.core = this.el.querySelector("." + css$g['field-core']);
            this.placeholder = this.el.querySelector("." + css$g['field-placeholder']);
            this.indicate = this.el.querySelector("." + css$g['field-indicate']);
            this.clear = this.el.querySelector("." + css$g['field-clear']);
            this.length = this.el.querySelector("." + css$g['field-length']);
            if (this.opt.type === 'text') {
                this.indicate.style.display = 'none';
            }
            this.renderValue();
            this.bindFocus();
            this.bindClick();
            this.bindClearEvent();
            this.bindInput();
            this.bindObverse();
        };
        VField.prototype.bindInput = function () {
        };
        VField.prototype.bindClick = function () {
            var _this = this;
            var _a = this, el = _a.el, opt = _a.opt, value = _a.value, core = _a.core, length = _a.length;
            var type = opt.type, maxLength = opt.maxLength;
            if (type === 'text') {
                core.oninput = function (e) {
                    _this.value = core.innerText;
                    if (length) {
                        length.innerHTML = _this.value.length + "/" + maxLength;
                    }
                    _this.opt.onChange(_this.value);
                    if (_this.value) {
                        el.setAttribute('placeholder', '');
                        el.setAttribute('clearable', '');
                    }
                    else {
                        el.removeAttribute('placeholder');
                        el.removeAttribute('clearable');
                    }
                };
                return;
            }
            this.keyboard = new default_1$I({
                el: el,
                type: type === 'password' ? 'char' : type,
                value: value,
                autofill: false,
                onKeyDown: function (data) {
                    if (_this.value.length < _this.opt.maxLength && _this.opt.maxLength > 0 || !_this.opt.maxLength) {
                        _this.value += data.key;
                        _this.renderValue();
                    }
                },
                onBackSpace: function () {
                    _this.value = _this.value.substring(0, _this.value.length - 1);
                    _this.renderValue();
                }
            });
        };
        VField.prototype.bindClearEvent = function () {
            var _this = this;
            if (!this.clear)
                return;
            var _a = this, clear = _a.clear, el = _a.el;
            clear.onclick = function () {
                _this.value = '';
                _this.renderValue();
                el.removeAttribute('clearable');
            };
        };
        VField.prototype.bindFocus = function () {
            var _this = this;
            if (!this.native)
                return;
            this.core.onfocus = function () {
                _this.focus = true;
                _this.renderFocus();
            };
            this.core.onblur = function () {
                _this.focus = false;
                _this.renderFocus();
            };
        };
        VField.prototype.renderFocus = function () {
            var focus = this.focus;
            if (focus) {
                this.el.setAttribute('focus', '');
            }
            else {
                this.el.removeAttribute('focus');
            }
        };
        VField.prototype.renderValue = function () {
            var _this = this;
            var _a = this, value = _a.value, core = _a.core, opt = _a.opt; _a.placeholder; var el = _a.el;
            var type = opt.type, maxLength = opt.maxLength;
            if (maxLength > 0) {
                value = value.substring(0, maxLength);
            }
            if (value) {
                el.setAttribute('placeholder', '');
            }
            else {
                el.removeAttribute('placeholder');
            }
            if (type === 'text') {
                this.core.innerHTML = value;
            }
            else {
                var arr = value.split('');
                var spans = this.core.querySelectorAll('span');
                spans.forEach(function (span) {
                    span.parentNode.removeChild(span);
                });
                arr.forEach(function (text) {
                    var span = document.createElement('span');
                    if (type === 'password') {
                        span.innerHTML = "<svg class=\"v-icon\" aria-hidden=\"true\">\n            <use xlink:href=\"#icon-dot\"></use>\n          </svg>\n        ";
                    }
                    else {
                        span.innerHTML = text;
                    }
                    core.insertBefore(span, _this.indicate);
                });
            }
            this.opt.onChange(value);
        };
        VField.prototype.bindObverse = function () {
            var _this = this;
            new default_1$W({
                el: this.el,
                onResize: function (data) {
                    _this.scrollIntoView(_this.el, 0);
                }
            });
        };
        return VField;
    }(Utils));
    var default_1$r = /** @class */ (function () {
        function default_1(option) {
            return new VField(option);
        }
        return default_1;
    }());

    function tpl$e(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['step']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['step-list']], [true]), false, true)) + "\u003E";
    // iterate t.opt.data
    ;(function(){
      var $$obj = t.opt.data;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    var active = index === t.opt.current;
    var finish = index < t.opt.current;
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['step-item']], [true]), false, true)+pug.attr("active", active, true, true)+pug.attr("finish", finish, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['step-number']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cspan\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = index+1) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-check\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fp\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['step-title']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.field['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['step-info']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.field['info']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E";
    if ((index < t.opt.data.length - 1)) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['step-line']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E";
    }
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    var active = index === t.opt.current;
    var finish = index < t.opt.current;
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['step-item']], [true]), false, true)+pug.attr("active", active, true, true)+pug.attr("finish", finish, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['step-number']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cspan\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = index+1) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-check\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fp\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['step-title']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.field['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['step-info']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.field['info']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E";
    if ((index < t.opt.data.length - 1)) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['step-line']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E";
    }
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var step$1 = "v-step";
    var css$f = {
    	step: step$1,
    	"step-list": "v-step-list",
    	"step-item": "v-step-item",
    	"step-number": "v-step-number",
    	"step-line": "v-step-line",
    	"step-title": "v-step-title",
    	"step-info": "v-step-info"
    };

    var VStep = /** @class */ (function (_super) {
        __extends(VStep, _super);
        function VStep(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                data: [],
                current: 0,
                field: {
                    name: 'name',
                    info: 'info'
                },
                onChange: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.length = _this.opt.data.length;
            _this.render();
            return _this;
        }
        VStep.prototype.render = function () {
            var t = this;
            var html = tpl$e({
                css: css$f,
                t: t
            });
            var el = this.parseHtmlToDom(html);
            this.el.parentNode.replaceChild(el, this.el);
            this.el = el;
            this.items = this.el.querySelectorAll("." + css$f['step-item']);
        };
        VStep.prototype.prev = function () {
            if (this.opt.current > 0) {
                this.opt.current = this.opt.current - 1;
                this.renderActive();
            }
        };
        VStep.prototype.next = function () {
            if (this.opt.current < this.length - 1) {
                this.opt.current = this.opt.current + 1;
                this.renderActive();
            }
        };
        VStep.prototype.renderActive = function () {
            var _a = this, items = _a.items, opt = _a.opt;
            var current = opt.current;
            items.forEach(function (item, index) {
                var citem = item;
                if (index === current) {
                    citem.setAttribute('active', '');
                    citem.removeAttribute('finish');
                }
                else if (index < current) {
                    citem.setAttribute('finish', '');
                    citem.removeAttribute('active');
                }
                else {
                    citem.removeAttribute('active');
                    citem.removeAttribute('finish');
                }
            });
            this.opt.onChange(current);
        };
        return VStep;
    }(Utils));
    var default_1$q = /** @class */ (function () {
        function default_1(option) {
            return new VStep(option);
        }
        return default_1;
    }());

    var VTimeline = /** @class */ (function (_super) {
        __extends(VTimeline, _super);
        function VTimeline(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.render();
            return _this;
        }
        VTimeline.prototype.render = function () {
        };
        VTimeline.prototype.generateData = function () {
        };
        return VTimeline;
    }(Utils));
    var default_1$p = /** @class */ (function () {
        function default_1(option) {
            return new VTimeline(option);
        }
        return default_1;
    }());

    var numberinput = "v-numberinput";
    var css$e = {
    	numberinput: numberinput,
    	"numberinput-item": "v-numberinput-item",
    	"numberinput-cursor": "v-numberinput-cursor"
    };

    function tpl$d(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    var index=0;
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['numberinput']], [true]), false, true)+pug.attr("shape", t.opt.shape, true, true)) + "\u003E";
    while (index < t.opt.length) {
    var i = index++;
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['numberinput-item']], [true]), false, true)+pug.attr("index", i, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cspan\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.value[i]) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['numberinput-cursor']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VNumberinput = /** @class */ (function (_super) {
        __extends(VNumberinput, _super);
        function VNumberinput(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'number',
                length: 6,
                value: '',
                onConfirm: function () {
                    _this.hide();
                }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.value = _this.opt.value.split('');
            _this.render();
            return _this;
        }
        VNumberinput.prototype.render = function () {
            var t = this;
            var html = tpl$d({
                css: css$e,
                t: t
            });
            var el = this.parseHtmlToDom(html);
            this.el.parentNode.replaceChild(el, this.el);
            this.el = el;
            this.items = this.el.querySelectorAll("." + css$e['numberinput-item']);
            this.renderKeyboard();
        };
        VNumberinput.prototype.renderActive = function (current) {
            var items = this.items;
            items.forEach(function (item, index) {
                var citem = item;
                if (index === current) {
                    citem.setAttribute('focus', '');
                }
                else {
                    citem.removeAttribute('focus');
                }
            });
        };
        VNumberinput.prototype.renderKeyboard = function () {
            var _this = this;
            var _a = this, el = _a.el, value = _a.value, opt = _a.opt;
            var type = opt.type;
            this.keyboard = new default_1$I({
                el: el,
                type: type === 'password' ? 'char' : type,
                autofill: false,
                buttons: [{ name: '清空', id: 'clear' }, { name: '确认', id: 'confirm' }],
                onReady: function () {
                    var current = value.length;
                    _this.renderActive(current);
                },
                onKeyDown: function (value) {
                    if (_this.value.length < _this.opt.length) {
                        _this.value.push(value.key);
                    }
                    _this.renderActive(_this.value.length);
                    _this.renderValue();
                },
                onBackSpace: function () {
                    _this.value.pop();
                    _this.renderActive(_this.value.length);
                    _this.renderValue();
                },
                onDestory: function () {
                    _this.renderActive(-1);
                },
                onClick: function (cb) {
                    if (cb === 'clear') {
                        _this.clear();
                        _this.keyboard.clear();
                    }
                    if (cb === 'confirm') {
                        _this.opt.onConfirm(_this.opt.value);
                    }
                }
            });
        };
        VNumberinput.prototype.hide = function () {
            this.keyboard.hide();
        };
        VNumberinput.prototype.clear = function () {
            this.value = [];
            this.opt.value = '';
            this.renderValue();
            this.renderActive(this.value.length);
        };
        VNumberinput.prototype.renderValue = function () {
            var _a = this, value = _a.value, items = _a.items, opt = _a.opt;
            var type = opt.type;
            var current = value.length;
            this.opt.value = value.join('');
            items.forEach(function (item, index) {
                var citem = item;
                var span = citem.querySelector('span');
                if (index < current) {
                    span.innerHTML = type !== 'password' ? value[index] : "\n        <svg class=\"v-icon\" aria-hidden=\"true\">\n          <use xlink:href=\"#icon-dot\"></use>\n        </svg>\n        ";
                }
                else {
                    span.innerHTML = '';
                }
            });
        };
        return VNumberinput;
    }(Utils));
    var default_1$o = /** @class */ (function () {
        function default_1(option) {
            return new VNumberinput(option);
        }
        return default_1;
    }());

    var VPagination = /** @class */ (function (_super) {
        __extends(VPagination, _super);
        function VPagination(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            return _this;
        }
        VPagination.prototype.render = function () {
        };
        VPagination.prototype.generateData = function () {
        };
        return VPagination;
    }(Utils));
    var default_1$n = /** @class */ (function () {
        function default_1(option) {
            return new VPagination(option);
        }
        return default_1;
    }());

    var prompt = "v-prompt";
    var css$d = {
    	prompt: prompt,
    	"prompt-input": "v-prompt-input"
    };

    function tpl$c(locals) {var pug_html = "";var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['prompt']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['prompt-input']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VPrompt = /** @class */ (function (_super) {
        __extends(VPrompt, _super);
        function VPrompt(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                title: '请填写',
                placement: 'center',
                radius: 'conner',
                alone: false,
                effect: 'fadeInUp',
                shape: 'fill',
                rows: 3
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            return _this;
        }
        VPrompt.prototype.render = function () {
            var _this = this;
            var _a = this, el = _a.el, opt = _a.opt;
            var title = opt.title, placement = opt.placement, radius = opt.radius, alone = opt.alone, effect = opt.effect;
            this.drawer = new default_1$1q({
                el: el,
                title: title,
                placement: placement,
                radius: radius,
                alone: alone,
                effect: effect,
                onReady: function (el) {
                    var t = _this;
                    var _a = t.opt, shape = _a.shape, radius = _a.radius, rows = _a.rows; _a.value;
                    var html = tpl$c({
                        css: css$d,
                        t: t
                    });
                    el.innerHTML = html;
                    var input = el.querySelector("." + css$d['prompt-input']);
                    _this.field = new default_1$r({
                        el: input,
                        radius: radius,
                        shape: shape,
                        rows: rows,
                        onChange: function (v) {
                            console.log(v);
                        }
                    });
                }
            });
        };
        return VPrompt;
    }(Utils));
    var default_1$m = /** @class */ (function () {
        function default_1(option) {
            return new VPrompt(option);
        }
        return default_1;
    }());

    var Time = /** @class */ (function (_super) {
        __extends(Time, _super);
        function Time(option) {
            var _this = _super.call(this) || this;
            _this.data = [];
            _this.opt = {};
            _this.banner = [];
            _this.current = [];
            _this.opt = Object.assign(_this.opt, option);
            _this.opt.value = _this.opt.value ? _this.opt.value : format(new Date(), 'yyyy/MM/dd HH:mm:ss');
            _this.data = _this.mounted();
            return _this;
        }
        Time.prototype.mounted = function () {
            var opt = this.opt;
            var type = opt.type, prefix = opt.prefix, suffix = opt.suffix;
            var data = [];
            switch (type) {
                case 'year':
                    data = [this.renderYear()];
                    break;
                case 'month':
                    data = [
                        this.renderYear(),
                        this.renderMonth()
                    ];
                    break;
                case 'date':
                    data = [
                        this.renderYear(),
                        this.renderMonth(),
                        this.renderDay()
                    ];
                    break;
                case 'datetime':
                    data = [
                        this.renderYear(),
                        this.renderMonth(),
                        this.renderDay(),
                        this.renderHour(),
                        this.renderMinute(),
                        this.renderSecond()
                    ];
                    break;
                case 'quart':
                    data = [
                        this.renderYear(),
                        this.renderQuart()
                    ];
                    break;
                case 'week':
                    data = [
                        this.renderYear(),
                        this.renderWeek()
                    ];
                    break;
                case 'time':
                    data = [
                        this.renderHour(),
                        this.renderMinute(),
                        this.renderSecond()
                    ];
                    break;
                case 'aweek':
                    data = [
                        this.renderAweek()
                    ];
                    break;
            }
            if (prefix.length) {
                data.unshift(prefix);
            }
            if (suffix.length) {
                data.push(suffix);
            }
            return data;
        };
        Time.prototype.renderAweek = function () {
            var _this = this;
            var _a = this.opt, value = _a.value, weekStartsOn = _a.weekStartsOn;
            var date = new Date(value);
            var start = startOfWeek(date, { weekStartsOn: weekStartsOn });
            var end = endOfWeek(date, { weekStartsOn: weekStartsOn });
            var arr = eachDayOfInterval({ start: start, end: end });
            var dates = arr.map(function (a) {
                var w = format(a, 'EEEEEE');
                return { name: format(a, 'MM月dd日'), unit: _this.weekname[w] };
            });
            return dates;
        };
        Time.prototype.renderYear = function () {
            var _a = this.opt, startYear = _a.startYear, endYear = _a.endYear;
            return this.generateArray(startYear, endYear, '年', true);
        };
        Time.prototype.renderMonth = function () {
            return this.generateArray(1, 12, '月', false);
        };
        Time.prototype.renderDay = function () {
            var date = new Date(this.opt.value);
            var last = lastDayOfMonth(date);
            return this.generateArray(1, getDate(last), '日', false);
        };
        Time.prototype.renderHour = function () {
            return this.generateArray(0, 23, '时', false);
        };
        Time.prototype.renderMinute = function () {
            return this.generateArray(0, 59, '分', false);
        };
        Time.prototype.renderSecond = function () {
            return this.generateArray(0, 59, '秒', false);
        };
        Time.prototype.renderQuart = function () {
            return this.generateArray(1, 4, '季度', false);
        };
        Time.prototype.renderWeek = function () {
            var date = new Date(this.opt.value);
            var year = getYear(date);
            var week = eachWeekOfInterval({
                start: new Date(year + "/1/1"),
                end: new Date(year + "/12/31")
            });
            return this.generateArray(1, week.length, '周', false);
        };
        return Time;
    }(Utils));
    var Times = (function (option) {
        return new Time(option);
    });

    var VDatepicker = /** @class */ (function (_super) {
        __extends(VDatepicker, _super);
        function VDatepicker(option) {
            var _this = _super.call(this) || this;
            _this.views = [];
            _this.value = [];
            _this.dates = [];
            _this.datestring = [];
            _this.dft = [];
            _this.f = {
                year: 'yyyy',
                month: 'yyyy/MM',
                date: 'yyyy/MM/dd',
                week: 'yyyy/ww',
                quart: 'yyyy/qq',
                datetime: 'yyyy/MM/dd HH:mm:ss',
                time: 'HH:mm:ss',
                aweek: 'yyyy/MM/dd'
            };
            _this.fmt = {
                'year': 'yyyy年',
                'month': 'yyyy-MM',
                'date': 'yyyy-MM-dd',
                'datetime': 'yyyy-MM-dd hh:mm:ss',
                'time': 'HH:mm:ss',
                'week': 'yyyy年ww周',
                'quart': 'yyyy年qq季度',
                'aweek': 'yyyy-MM-dd'
            };
            _this.opt = {
                el: '',
                value: '',
                multiple: false,
                range: false,
                type: 'date',
                renderdom: '.v-text',
                separate: '至',
                title: '请选择日期',
                startYear: 1990,
                endYear: 2030,
                weekStartsOn: 1,
                autofill: true,
                placeholder: ['开始日期', '结束日期'],
                prefix: [],
                suffix: [],
                onConfirm: function (data) { console.log(data); },
                onChange: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            if (_this.opt.prefix.length || _this.opt.suffix.length) {
                _this.opt.autofill = false;
            }
            _this.initValue();
            _this.el.addEventListener('click', function () {
                _this.generateData();
                _this.mounted();
            });
            return _this;
        }
        VDatepicker.prototype.mounted = function () {
            var _this = this;
            var _a = this, opt = _a.opt, el = _a.el;
            var title = opt.title;
            this.drawer = new default_1$1q({
                el: el,
                title: title,
                onReady: function (dom) {
                    _this.renderDomLayout(dom);
                },
                onButtonClick: function (cb) {
                    if (cb.value === 'cancel')
                        return;
                    _this.initDates();
                    if (_this.opt.prefix.length || _this.opt.suffix.length) {
                        _this.opt.onConfirm({
                            value: _this.value
                        });
                    }
                    else {
                        _this.opt.onConfirm({
                            date: _this.dates,
                            value: _this.datestring
                        });
                    }
                }
            });
        };
        /**
         * 生成最基础的tab结构
         * @param dom
         */
        VDatepicker.prototype.renderDomLayout = function (dom) {
            var _a = this, source = _a.source, opt = _a.opt;
            var placeholder = opt.placeholder;
            var tab = document.createElement('div');
            dom.appendChild(tab);
            source.forEach(function (data, index) {
                var tabitem = document.createElement('div');
                tabitem.className = 'tabitem';
                tabitem.setAttribute('name', placeholder[index]);
                tab.appendChild(tabitem);
            });
            this.renderTab(tab, '.tabitem');
        };
        /**
         * 初始化tab插件
         * @param el
         * @param child
         */
        VDatepicker.prototype.renderTab = function (el, child) {
            var _this = this;
            this.tab = new default_1$S({
                el: el,
                child: child,
                onReady: function (items) {
                    _this.renderPicker(items);
                }
            });
        };
        /**
         * 渲染picker
         * @param items
         */
        VDatepicker.prototype.renderPicker = function (items) {
            var _this = this;
            var source = this.source;
            items.forEach(function (item, index) {
                var citem = item;
                var dom = document.createElement('div');
                citem.appendChild(dom);
                _this.renderPickerView(dom, source[index], index);
            });
        };
        /**
         * 渲染pickerview
         * @param el
         * @param data
         */
        VDatepicker.prototype.renderPickerView = function (el, data, index) {
            var _this = this;
            var type = this.opt.type;
            var dft = this.dft[index];
            var value = dft.split(/[/ :]/);
            if (type === 'aweek') {
                value = [format(new Date(dft), 'MM月dd日')];
            }
            this.views[index] = new default_1$z({
                el: el,
                data: data.data,
                value: value,
                onReady: function (cb) {
                    _this.value[index] = cb.value;
                },
                onChange: function (cb) {
                    _this.value[index] = cb.value;
                    _this.opt.onChange(_this.value);
                }
            });
        };
        /**
         * 生成数据
         */
        VDatepicker.prototype.generateData = function () {
            var _a = this.opt, startYear = _a.startYear, endYear = _a.endYear, type = _a.type, value = _a.value, range = _a.range, weekStartsOn = _a.weekStartsOn, prefix = _a.prefix, suffix = _a.suffix;
            var data = [];
            var valueArr = [];
            if (value) {
                if (range) {
                    valueArr = value;
                }
                else {
                    valueArr = [value];
                }
            }
            else {
                var date = format(new Date(), this.f[type]);
                if (range) {
                    valueArr = [date, date];
                }
                else {
                    valueArr = [date];
                }
            }
            this.dft = valueArr;
            valueArr.forEach(function (val, index) {
                var time = Times({
                    startYear: startYear,
                    endYear: endYear,
                    type: type,
                    value: val,
                    weekStartsOn: weekStartsOn,
                    prefix: prefix,
                    suffix: suffix
                });
                data[index] = time;
            });
            this.source = data;
        };
        VDatepicker.prototype.initValue = function () {
            var _a = this.opt, value = _a.value, format = _a.format, type = _a.type, range = _a.range;
            if (!value)
                return;
            var val = range ? value : [value];
            format ? format : this.fmt[type];
            this.value = val.map(function (a) { return a.split(/[/ :]/); });
            this.initDates();
        };
        VDatepicker.prototype.initDates = function () {
            var _this = this;
            var _a = this, value = _a.value, opt = _a.opt;
            var type = opt.type;
            if (!value || !this.opt.autofill)
                return;
            var dates = [];
            value.forEach(function (v, i) {
                dates[i] = _this.parseStringToDate(v, type);
            });
            this.dates = dates;
            this.renderValue();
        };
        VDatepicker.prototype.renderValue = function () {
            var _this = this;
            var _a = this, dates = _a.dates, opt = _a.opt;
            var type = opt.type;
            var fmt = this.opt.format ? this.opt.format : this.fmt;
            console.log(this.dates);
            this.datestring = dates.map(function (a) { return format(a, fmt[type]); });
            var dom = this.el.querySelector(this.opt.renderdom);
            var v = this.datestring.join(this.opt.separate);
            if (dom.tagName === 'INPUT') {
                dom.value = v;
            }
            else {
                dom.innerHTML = v;
            }
            // 将选中的值保存下来，再次调用的时候会有缓存
            this.opt.value = dates.map(function (a) { return format(a, _this.f[type]); });
            if (!this.opt.range) {
                this.opt.value = this.opt.value[0];
            }
        };
        /**
         * 将不规则的字符串转换成日期对象
         * @param v
         * @param type
         * @returns
         */
        VDatepicker.prototype.parseStringToDate = function (v, type) {
            var date = new Date();
            if (type === 'date') {
                date = new Date(v.join('/'));
            }
            else if (type === 'year') {
                date = new Date(v.join('/') + "/1/1");
            }
            else if (type === 'month') {
                date = new Date(v.join('/') + "/1");
            }
            else if (type === 'week') {
                var year = v[0];
                var st = parseInt(v[1]);
                var start = new Date(year + "/1/1");
                var end = new Date(year + "/12/31");
                var arr = eachWeekOfInterval({
                    start: start,
                    end: end
                });
                date = arr[st - 1];
            }
            else if (type === 'quart') {
                var year = v[0];
                var st = parseInt(v[1]);
                var start = new Date(year + "/1/1");
                var end = new Date(year + "/12/31");
                var arr = eachQuarterOfInterval({
                    start: start,
                    end: end
                });
                date = arr[st - 1];
            }
            else if (type === 'time') {
                var now = format(new Date(), 'yyyy/MM/dd');
                date = new Date(now + " " + v.join(':'));
            }
            else if (type === 'datetime') {
                console.log(v);
                var nv = v.map(function (a) { return parseInt(a); });
                console.log(nv);
                date = new Date(nv[0], nv[1], nv[2], nv[3], nv[4], nv[5]);
            }
            else if (type === 'aweek') {
                if (v.length === 1) {
                    var arr = v[0].split('月');
                    var month = parseInt(arr[0]);
                    var day = parseInt(arr[1]);
                    var year = (new Date()).getFullYear();
                    date = new Date(year + "/" + month + "/" + day);
                }
                else {
                    date = new Date(v.join('/'));
                }
            }
            return date;
        };
        return VDatepicker;
    }(Utils));
    var default_1$l = /** @class */ (function () {
        function default_1(option) {
            return new VDatepicker(option);
        }
        return default_1;
    }());

    var css$c = {
    	"dropdown-handle": "v-dropdown-handle",
    	"dropdown-content": "v-dropdown-content",
    	"dropdown-title": "v-dropdown-title",
    	"dropdown-item": "v-dropdown-item",
    	"dropdown-label": "v-dropdown-label"
    };

    function tpl$b(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['dropdown-handle']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['dropdown-title']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.current >= 0 ? t.opt.options[t.current][t.opt.fields['name']] : t.opt.placeholder) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-caret-down\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E";
    }.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    function otpl(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['dropdown-content']], [true]), false, true)) + "\u003E";
    // iterate t.opt.options
    ;(function(){
      var $$obj = t.opt.options;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    var active = index === t.current;
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['dropdown-item']], [true]), false, true)+pug.attr("active", active, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['dropdown-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-check\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    var active = index === t.current;
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['dropdown-item']], [true]), false, true)+pug.attr("active", active, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['dropdown-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    pug_html = pug_html + "\u003Csvg aria-hidden=\"true\"\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-check\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VDropdown = /** @class */ (function (_super) {
        __extends(VDropdown, _super);
        function VDropdown(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                options: [],
                value: '',
                placeholder: '请选择',
                fields: {
                    name: 'name',
                    value: 'value'
                }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.initCurrent();
            _this.render();
            return _this;
        }
        VDropdown.prototype.render = function () {
            var t = this;
            var html = tpl$b({
                t: t,
                css: css$c
            });
            this.el.innerHTML = html;
            this.handle = this.el.querySelector("." + css$c['dropdown-handle']);
            this.title = this.handle.querySelector("." + css$c['dropdown-title']);
            this.bindClickEvent();
        };
        VDropdown.prototype.bindClickEvent = function () {
            var _this = this;
            this.el.onclick = function () {
                if (_this.handle.getAttribute('active') !== null)
                    return;
                _this.handle.setAttribute('active', '');
                _this.drawer = new default_1$1q({
                    el: _this.el,
                    buttons: null,
                    origin: true,
                    placement: 'top',
                    stick: true,
                    onReady: function (el) {
                        _this.renderContent(el);
                    },
                    onDestory: function () {
                        _this.handle.removeAttribute('active');
                    }
                });
            };
        };
        VDropdown.prototype.renderContent = function (el) {
            var t = this;
            var html = otpl({
                css: css$c,
                t: t
            });
            el.innerHTML = html;
            this.bindItemClick(el);
        };
        VDropdown.prototype.bindItemClick = function (el) {
            var _this = this;
            this.items = el.querySelectorAll("." + css$c['dropdown-item']);
            this.items.forEach(function (item, index) {
                var citem = item;
                citem.onclick = function () {
                    _this.current = index;
                    _this.renderActive();
                };
            });
        };
        VDropdown.prototype.renderActive = function () {
            var _a = this.opt, options = _a.options, fields = _a.fields;
            var current = this.current;
            var valuelabel = options[current][fields['name']];
            this.title.innerHTML = valuelabel;
            var currentitem = this.items[current];
            this.items.forEach(function (item) {
                var citem = item;
                citem.removeAttribute('active');
            });
            currentitem.setAttribute('active', '');
            this.hide();
        };
        VDropdown.prototype.hide = function () {
            this.drawer.hide();
            this.handle.removeAttribute('active');
        };
        VDropdown.prototype.initCurrent = function () {
            var _a = this.opt, options = _a.options, value = _a.value, fields = _a.fields;
            this.current = options.findIndex(function (a) { return a[fields['value']] === value; });
        };
        return VDropdown;
    }(Utils));
    var default_1$k = /** @class */ (function () {
        function default_1(option) {
            return new VDropdown(option);
        }
        return default_1;
    }());

    var imagepreview = "v-imagepreview";
    var css$b = {
    	imagepreview: imagepreview,
    	"imagepreview-core": "v-imagepreview-core"
    };

    function tpl$a(locals) {var pug_html = "";var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv\u003E";
    // iterate t.opt.data
    ;(function(){
      var $$obj = t.opt.data;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv class=\"preview-item\"\u003E";
    pug_html = pug_html + "\u003Cimg" + (pug.attr("class", pug.classes([css['imagepreview-core']], [true]), false, true)+pug.attr("src", item[t.opt.fields['url']], true, true)) + "\u003E\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv class=\"preview-item\"\u003E";
    pug_html = pug_html + "\u003Cimg" + (pug.attr("class", pug.classes([css['imagepreview-core']], [true]), false, true)+pug.attr("src", item[t.opt.fields['url']], true, true)) + "\u003E\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VImagepreview = /** @class */ (function (_super) {
        __extends(VImagepreview, _super);
        function VImagepreview(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                data: [],
                current: 0,
                fields: {
                    url: 'url'
                }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            return _this;
        }
        VImagepreview.prototype.render = function () {
            var _this = this;
            var el = this.el;
            this.mask = new default_1$1s({
                el: el,
                background: 'rgba(0,0,0,0.95)',
                onReady: function (el) {
                    _this.renderSwiper(el);
                }
            });
        };
        VImagepreview.prototype.renderSwiper = function (mask) {
            var t = this;
            var html = tpl$a({
                css: css$b,
                t: t
            });
            var el = this.parseHtmlToDom(html);
            var dom = document.createElement('div');
            dom.className = css$b['imagepreview'];
            mask.appendChild(dom);
            this.image = dom.appendChild(el);
            var width = dom.offsetWidth;
            var height = dom.offsetHeight;
            this.swiper = new default_1$U({
                el: this.image,
                child: ".preview-item",
                current: this.opt.current,
                width: width,
                height: height
            });
        };
        return VImagepreview;
    }(Utils));
    var default_1$j = /** @class */ (function () {
        function default_1(option) {
            return new VImagepreview(option);
        }
        return default_1;
    }());

    function tpl$9(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['sharesheet']], [true]), false, true)+pug.attr("group", t.isGroup, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['sharesheet-content']], [true]), false, true)) + "\u003E";
    if (t.isGroup) {
    // iterate t.opt.options
    ;(function(){
      var $$obj = t.opt.options;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var group = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['sharesheet-group']], [true]), false, true)) + "\u003E";
    // iterate group
    ;(function(){
      var $$obj = group;
      if ('number' == typeof $$obj.length) {
          for (var i = 0, $$l = $$obj.length; i < $$l; i++) {
            var item = $$obj[i];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['sharesheet-item']], [true]), false, true)+pug.attr("col", index, true, true)+pug.attr("index", i, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['sharesheet-icon']], [true]), false, true)+" aria-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", `#icon-share-${item[t.opt.fields['icon']]}`, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['sharesheet-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var i in $$obj) {
          $$l++;
          var item = $$obj[i];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['sharesheet-item']], [true]), false, true)+pug.attr("col", index, true, true)+pug.attr("index", i, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['sharesheet-icon']], [true]), false, true)+" aria-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", `#icon-share-${item[t.opt.fields['icon']]}`, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['sharesheet-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var group = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['sharesheet-group']], [true]), false, true)) + "\u003E";
    // iterate group
    ;(function(){
      var $$obj = group;
      if ('number' == typeof $$obj.length) {
          for (var i = 0, $$l = $$obj.length; i < $$l; i++) {
            var item = $$obj[i];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['sharesheet-item']], [true]), false, true)+pug.attr("col", index, true, true)+pug.attr("index", i, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['sharesheet-icon']], [true]), false, true)+" aria-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", `#icon-share-${item[t.opt.fields['icon']]}`, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['sharesheet-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var i in $$obj) {
          $$l++;
          var item = $$obj[i];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['sharesheet-item']], [true]), false, true)+pug.attr("col", index, true, true)+pug.attr("index", i, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['sharesheet-icon']], [true]), false, true)+" aria-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", `#icon-share-${item[t.opt.fields['icon']]}`, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['sharesheet-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    }
    else {
    // iterate t.opt.options
    ;(function(){
      var $$obj = t.opt.options;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['sharesheet-item']], [true]), false, true)+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['sharesheet-icon']], [true]), false, true)+" aria-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", `#icon-share-${item[t.opt.fields['icon']]}`, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['sharesheet-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['sharesheet-item']], [true]), false, true)+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['sharesheet-icon']], [true]), false, true)+" aria-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", `#icon-share-${item[t.opt.fields['icon']]}`, true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['sharesheet-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    }
    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['sharesheet-footer']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['sharesheet-footer-item']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '取消') ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var sharesheet = "v-sharesheet";
    var css$a = {
    	sharesheet: sharesheet,
    	"sharesheet-content": "v-sharesheet-content",
    	"sharesheet-group": "v-sharesheet-group",
    	"sharesheet-item": "v-sharesheet-item",
    	"sharesheet-icon": "v-sharesheet-icon",
    	"sharesheet-label": "v-sharesheet-label",
    	"sharesheet-footer": "v-sharesheet-footer",
    	"sharesheet-footer-item": "v-sharesheet-footer-item"
    };

    var VSharesheet = /** @class */ (function (_super) {
        __extends(VSharesheet, _super);
        function VSharesheet(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                title: '分享到',
                radius: 'conner',
                alone: false,
                fields: {
                    name: 'name',
                    icon: 'icon'
                },
                options: [{
                        name: '微信',
                        icon: 'wechat'
                    }, {
                        name: '政务微信',
                        icon: 'gov'
                    }, {
                        name: '朋友圈',
                        icon: 'circle'
                    }, {
                        name: '工作圈',
                        icon: 'work'
                    }, {
                        name: '微博',
                        icon: 'weibo'
                    }, {
                        name: 'QQ',
                        icon: 'qq'
                    }, {
                        name: '复制链接',
                        icon: 'link'
                    }, {
                        name: '二维码',
                        icon: 'qrcode'
                    }],
                onClick: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.isGroup = _this.isArray(_this.opt.options[0]);
            _this.render();
            return _this;
        }
        VSharesheet.prototype.render = function () {
            var _this = this;
            var t = this;
            var el = t.el, opt = t.opt;
            var title = opt.title, radius = opt.radius, alone = opt.alone;
            var html = tpl$9({
                css: css$a,
                t: t
            });
            this.drawer = new default_1$1q({
                el: el,
                title: title,
                radius: radius,
                alone: alone,
                stick: true,
                buttons: null,
                onReady: function (el) {
                    el.innerHTML = html;
                    _this.cancel = el.querySelector("." + css$a['sharesheet-footer-item']);
                    _this.items = el.querySelectorAll("." + css$a['sharesheet-item']);
                    _this.bindEvent();
                }
            });
        };
        VSharesheet.prototype.bindEvent = function () {
            var _this = this;
            this.cancel.onclick = function () {
                _this.drawer.hide();
            };
            this.items.forEach(function (item) {
                _this.bindClick(item);
            });
        };
        VSharesheet.prototype.bindClick = function (item) {
            var _this = this;
            item.onclick = function () {
                var col = parseInt(item.getAttribute('col'));
                var index = parseInt(item.getAttribute('index'));
                var current = _this.isGroup ? _this.opt.options[col][index] : _this.opt.options[index];
                _this.opt.onClick(current);
                _this.hide();
            };
        };
        VSharesheet.prototype.hide = function () {
            this.drawer.hide();
        };
        return VSharesheet;
    }(Utils));
    var default_1$i = /** @class */ (function () {
        function default_1(option) {
            return new VSharesheet(option);
        }
        return default_1;
    }());

    var VDatetime = /** @class */ (function (_super) {
        __extends(VDatetime, _super);
        function VDatetime(option) {
            var _this = _super.call(this) || this;
            _this.views = [];
            _this.items = [];
            _this.value = [];
            _this.data = [];
            _this.opt = {
                el: '',
                title: '请选择',
                radius: 'conner',
                startYear: 2010,
                format: 'yyyy-MM-dd HH:mm:ss',
                endYear: 2030,
                placeholder: ['日期', '时间'],
                alone: false,
                renderdom: '.v-text',
                type: 'calendar'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.initValue();
            _this.renderValue();
            _this.el.onclick = function () {
                _this.generateDate();
                _this.mounted();
            };
            return _this;
        }
        VDatetime.prototype.mounted = function () {
            var _this = this;
            var _a = this, opt = _a.opt, el = _a.el;
            var title = opt.title;
            this.drawer = new default_1$1q({
                el: el,
                title: title,
                onReady: function (dom) {
                    _this.renderDomLayout(dom);
                },
                onButtonClick: function (cb) {
                    if (cb.value === 'cancel')
                        return;
                    _this.renderValue();
                }
            });
        };
        VDatetime.prototype.renderDomLayout = function (el) {
            var _a = this, data = _a.data, opt = _a.opt;
            var placeholder = opt.placeholder;
            var tab = document.createElement('div');
            el.appendChild(tab);
            data.forEach(function (data, index) {
                var tabitem = document.createElement('div');
                tabitem.className = 'tabitem';
                tabitem.setAttribute('name', placeholder[index]);
                tab.appendChild(tabitem);
            });
            this.renderTab(tab, '.tabitem');
        };
        VDatetime.prototype.renderTab = function (el, child) {
            var _this = this;
            this.tab = new default_1$S({
                el: el,
                child: child,
                justify: 'start',
                onReady: function (items) {
                    _this.renderPicker(items);
                }
            });
        };
        VDatetime.prototype.renderPicker = function (items) {
            var _this = this;
            var data = this.data;
            items.forEach(function (item, index) {
                var citem = item;
                var dom = document.createElement('div');
                citem.appendChild(dom);
                _this.renderPickerView(dom, data[index], index);
            });
        };
        VDatetime.prototype.renderPickerView = function (el, data, index) {
            var _this = this;
            var value = this.dft.split(/[/ :]/);
            var v = index === 0 ? value.splice(0, 3) : value.splice(-3);
            this.views[index] = new default_1$z({
                el: el,
                data: data,
                value: v,
                onReady: function (cb) {
                    var s = index === 0 ? '/' : ':';
                    _this.value[index] = cb.value.join(s);
                    _this.opt.value = _this.value.join(' ');
                },
                onChange: function (cb) {
                    var s = index === 0 ? '/' : ':';
                    _this.value[index] = cb.value.join(s);
                    _this.opt.value = _this.value.join(' ');
                }
            });
        };
        VDatetime.prototype.generateDate = function () {
            var _a = this, dft = _a.dft, opt = _a.opt;
            var startYear = opt.startYear, endYear = opt.endYear;
            var time = Times({
                type: 'datetime',
                value: dft,
                startYear: startYear,
                endYear: endYear,
                weekStartsOn: 0,
                prefix: [],
                suffix: []
            });
            this.data = [time.data.splice(0, 3), time.data.splice(-3)];
        };
        VDatetime.prototype.initValue = function () {
            var value = this.opt.value;
            var v;
            if (!value) {
                v = this.format(new Date(), 'yyyy/MM/dd HH:mm:ss');
            }
            else {
                v = value;
            }
            this.dft = v;
        };
        VDatetime.prototype.renderValue = function () {
            var value = this.opt.value;
            if (!value)
                return;
            var s = this.format(new Date(value), this.opt.format);
            var dom = this.el.querySelector(this.opt.renderdom);
            if (dom.tagName === 'INPUT') {
                dom.value = s;
            }
            else {
                dom.innerHTML = s;
            }
        };
        return VDatetime;
    }(Utils));
    var default_1$h = /** @class */ (function () {
        function default_1(option) {
            return new VDatetime(option);
        }
        return default_1;
    }());

    var footerbar = "v-footerbar";
    var css$9 = {
    	footerbar: footerbar,
    	"footerbar-item": "v-footerbar-item",
    	"footerbar-label": "v-footerbar-label"
    };

    function tpl$8(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cul" + (pug.attr("class", pug.classes([css['footerbar']], [true]), false, true)) + "\u003E";
    // iterate t.opt.data
    ;(function(){
      var $$obj = t.opt.data;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    if (index < t.opt.preview) {
    pug_html = pug_html + "\u003Cli" + (pug.attr("class", pug.classes([css['footerbar-item']], [true]), false, true)+pug.attr("index", index, true, true)+" action=\"onItemClick\"") + "\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['footerbar-label']], [true]), false, true)+pug.attr("index", index, true, true)+" action=\"onItemClick\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E\u003C\u002Fli\u003E";
    }
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    if (index < t.opt.preview) {
    pug_html = pug_html + "\u003Cli" + (pug.attr("class", pug.classes([css['footerbar-item']], [true]), false, true)+pug.attr("index", index, true, true)+" action=\"onItemClick\"") + "\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['footerbar-label']], [true]), false, true)+pug.attr("index", index, true, true)+" action=\"onItemClick\"") + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E\u003C\u002Fli\u003E";
    }
        }
      }
    }).call(this);

    if (t.opt.data.length > t.opt.preview) {
    pug_html = pug_html + "\u003Cli" + (pug.attr("class", pug.classes([css['footerbar-item']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['footerbar-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '更多') ? "" : pug_interp)) + "\u003C\u002Fh2\u003E\u003C\u002Fli\u003E";
    }
    pug_html = pug_html + "\u003C\u002Ful\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var popmenu = "v-popmenu";
    var css$8 = {
    	popmenu: popmenu,
    	"popmenu-item": "v-popmenu-item",
    	"popmenu-label": "v-popmenu-label",
    	"popmenu-icon": "v-popmenu-icon"
    };

    function tpl$7(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['popmenu']], [true]), false, true)) + "\u003E";
    // iterate t.opt.options
    ;(function(){
      var $$obj = t.opt.options;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['popmenu-item']], [true]), false, true)+pug.attr("index", index, true, true)) + "\u003E";
    if (item[t.opt.fields['icon']]) {
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['popmenu-icon']], [true]), false, true)+" arial-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", "#icon-" + item[t.opt.fields['icon']], true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['popmenu-label']], [true]), false, true)+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['popmenu-item']], [true]), false, true)+pug.attr("index", index, true, true)) + "\u003E";
    if (item[t.opt.fields['icon']]) {
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['popmenu-icon']], [true]), false, true)+" arial-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse" + (pug.attr("xlink:href", "#icon-" + item[t.opt.fields['icon']], true, true)) + "\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    }
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['popmenu-label']], [true]), false, true)+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VPopmenu = /** @class */ (function (_super) {
        __extends(VPopmenu, _super);
        function VPopmenu(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                options: [],
                arrow: false,
                fields: {
                    name: 'name',
                    icon: 'icon'
                },
                onClick: function (data) { console.log(data); }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            return _this;
        }
        VPopmenu.prototype.render = function () {
            var _this = this;
            this.popover = new default_1$12({
                el: this.el,
                stick: true,
                arrow: this.opt.arrow,
                onReady: function (el) {
                    var t = _this;
                    var html = tpl$7({
                        css: css$8,
                        t: t
                    });
                    el.innerHTML = html;
                    _this.bindClick(el);
                }
            });
        };
        VPopmenu.prototype.bindClick = function (el) {
            var _this = this;
            el.onclick = function (e) {
                var target = e.target;
                var index = parseInt(target.getAttribute('index'));
                _this.opt.onClick(_this.opt.options[index]);
                _this.popover.hide();
            };
        };
        return VPopmenu;
    }(Utils));
    var default_1$g = /** @class */ (function () {
        function default_1(option) {
            return new VPopmenu(option);
        }
        return default_1;
    }());

    var VFooterbar = /** @class */ (function (_super) {
        __extends(VFooterbar, _super);
        function VFooterbar(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                data: [],
                preview: 3,
                fields: {
                    name: 'name',
                    icon: 'icon'
                }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.more = _this.opt.data.slice(_this.opt.preview, _this.opt.data.length);
            _this.render();
            _this.bindClick();
            _this.showMore();
            return _this;
        }
        VFooterbar.prototype.render = function () {
            var t = this;
            var html = tpl$8({
                css: css$9,
                t: t
            });
            this.el.style.padding = '0px';
            this.el.innerHTML = html;
            this.items = this.el.querySelectorAll("." + css$9['footerbar-item']);
        };
        VFooterbar.prototype.bindClick = function () {
            var _this = this;
            this.el.onclick = function (e) {
                var target = e.target;
                var action = target.getAttribute('action');
                if (action) {
                    _this[action](target);
                }
            };
        };
        VFooterbar.prototype.onItemClick = function (target) {
            var index = parseInt(target.getAttribute('index'));
            var current = this.opt.data[index];
            console.log(current);
        };
        VFooterbar.prototype.showMore = function () {
            var _this = this;
            var el = this.items[this.items.length - 1];
            el.onclick = function () {
                _this.popover = new default_1$g({
                    el: el,
                    options: _this.more
                });
            };
        };
        return VFooterbar;
    }(Utils));
    var default_1$f = /** @class */ (function () {
        function default_1(option) {
            return new VFooterbar(option);
        }
        return default_1;
    }());

    var clickverify = "v-clickverify";
    var css$7 = {
    	clickverify: clickverify,
    	"clickverify-refresh": "v-clickverify-refresh",
    	"clickverify-content": "v-clickverify-content",
    	"clickverify-handle": "v-clickverify-handle",
    	"clickverify-label": "v-clickverify-label",
    	"clickverify-letter": "v-clickverify-letter"
    };

    function tpl$6(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['clickverify']], [true]), false, true)+pug.attr("radius", t.opt.radius, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['clickverify-content']], [true]), false, true)+pug.attr("style", pug.style(`height:${t.opt.height}px`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Csvg" + (pug.attr("class", pug.classes([css['clickverify-refresh']], [true]), false, true)+" arial-hidden=\"true\"") + "\u003E";
    pug_html = pug_html + "\u003Cuse xlink:href=\"#icon-refresh\"\u003E\u003C\u002Fuse\u003E\u003C\u002Fsvg\u003E";
    // iterate t.data
    ;(function(){
      var $$obj = t.data;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cspan" + (pug.attr("class", pug.classes([css['clickverify-letter']], [true]), false, true)+pug.attr("style", pug.style(`transform:translate3d(${item.x}px,${item.y}px, 0);`), true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item.value) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cspan" + (pug.attr("class", pug.classes([css['clickverify-letter']], [true]), false, true)+pug.attr("style", pug.style(`transform:translate3d(${item.x}px,${item.y}px, 0);`), true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item.value) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['clickverify-handle']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['clickverify-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `按顺序点击 ${t.opt.data}`) ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VClickverify = /** @class */ (function (_super) {
        __extends(VClickverify, _super);
        function VClickverify(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                radius: 'conner',
                data: '一鸣惊人',
                height: 200
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.width = _this.el.offsetWidth;
            _this.initPosition();
            _this.mounted();
            return _this;
        }
        VClickverify.prototype.initPosition = function () {
            var _a = this, opt = _a.opt; _a.width;
            var height = opt.height;
            this.position = this.generatePositionsArray(20, height, 30, 10);
            console.log(this.position);
        };
        VClickverify.prototype.mounted = function () {
            this.initData();
            this.render();
        };
        VClickverify.prototype.bindClick = function () {
            var _this = this;
            this.refresh.onclick = function () {
                _this.mounted();
            };
        };
        VClickverify.prototype.render = function () {
            var t = this;
            var html = tpl$6({
                css: css$7,
                t: t
            });
            this.el.innerHTML = html;
            this.content = this.el.querySelector("." + css$7['clickverify-content']);
            this.refresh = this.el.querySelector("." + css$7['clickverify-refresh']);
            this.bindClick();
        };
        VClickverify.prototype.initData = function () {
            var _this = this;
            var _a = this; _a.content; var width = _a.width;
            var _b = this.opt, data = _b.data, height = _b.height;
            var arr = data.split('');
            var arrays = [];
            var minx = width / 4;
            var maxx = minx * 3;
            var miny = height / 4;
            var maxy = miny * 3;
            arr.forEach(function (item, index) {
                arrays[index] = {
                    value: item,
                    x: _this.generatePositionsArray(minx, maxx, 40, 10),
                    y: _this.generatePositionsArray(miny, maxy, 40, 10)
                };
            });
            this.data = arrays;
        };
        VClickverify.prototype.getRandom = function (min, max) {
            return Math.floor(Math.random() * (max - min)) + min;
        };
        VClickverify.prototype.generatePositionsArray = function (maxX, maxY, safeRadius, irregularity) {
            var positionsArray = [];
            var r, c;
            var rows;
            var columns;
            // count the amount of rows and columns
            rows = Math.floor(maxY / safeRadius);
            columns = Math.floor(maxX / safeRadius);
            // loop through rows
            for (r = 1; r <= rows; r += 1) {
                // loop through columns
                for (c = 1; c <= columns; c += 1) {
                    // populate array with point object
                    positionsArray.push({
                        x: Math.round(maxX * c / columns) + this.getRandom(irregularity * -1, irregularity),
                        y: Math.round(maxY * r / rows) + this.getRandom(irregularity * -1, irregularity)
                    });
                }
            }
            // return array
            return positionsArray;
        };
        return VClickverify;
    }(Utils));
    var default_1$e = /** @class */ (function () {
        function default_1(option) {
            return new VClickverify(option);
        }
        return default_1;
    }());

    var VLoading = /** @class */ (function (_super) {
        __extends(VLoading, _super);
        function VLoading(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            return _this;
        }
        VLoading.prototype.render = function () {
        };
        VLoading.prototype.generateData = function () {
        };
        return VLoading;
    }(Utils));
    var default_1$d = /** @class */ (function () {
        function default_1(option) {
            return new VLoading(option);
        }
        return default_1;
    }());

    var VProgress = /** @class */ (function (_super) {
        __extends(VProgress, _super);
        function VProgress(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            return _this;
        }
        VProgress.prototype.render = function () {
        };
        VProgress.prototype.generateData = function () {
        };
        return VProgress;
    }(Utils));
    var default_1$c = /** @class */ (function () {
        function default_1(option) {
            return new VProgress(option);
        }
        return default_1;
    }());

    var selector = "v-selector";
    var css$6 = {
    	selector: selector,
    	"selector-item": "v-selector-item",
    	"selector-label": "v-selector-label"
    };

    function tpl$5(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['selector']], [true]), false, true)+pug.attr("radius", t.opt.radius, true, true)+pug.attr("stick", t.opt.stick, true, true)+pug.attr("align", t.opt.align, true, true)) + "\u003E";
    // iterate t.opt.options
    ;(function(){
      var $$obj = t.opt.options;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['selector-item']], [true]), false, true)+pug.attr("value", item[t.opt.fields['value']], true, true)+pug.attr("style", pug.style(`width:${t.opt.column > 0 ? 100/t.opt.column + '%' : 'auto'};`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cspan" + (pug.attr("class", pug.classes([css['selector-label']], [true]), false, true)+pug.attr("value", item[t.opt.fields['value']], true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['selector-item']], [true]), false, true)+pug.attr("value", item[t.opt.fields['value']], true, true)+pug.attr("style", pug.style(`width:${t.opt.column > 0 ? 100/t.opt.column + '%' : 'auto'};`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cspan" + (pug.attr("class", pug.classes([css['selector-label']], [true]), false, true)+pug.attr("value", item[t.opt.fields['value']], true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VSelector = /** @class */ (function (_super) {
        __extends(VSelector, _super);
        function VSelector(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month',
                multiple: false,
                radius: '',
                value: '',
                stick: false,
                align: 'left',
                column: 0,
                fields: {
                    name: 'name',
                    value: 'value'
                }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            _this.renderActive();
            _this.bindEvent();
            return _this;
        }
        VSelector.prototype.render = function () {
            var t = this;
            var html = tpl$5({
                css: css$6,
                t: t
            });
            this.el.innerHTML = html;
            this.items = this.el.querySelectorAll("." + css$6['selector-item']);
        };
        VSelector.prototype.renderActive = function () {
            var _a = this, items = _a.items, opt = _a.opt;
            var value = opt.value;
            var val = typeof value === 'string' ? [value] : value;
            items.forEach(function (item, index) {
                var citem = item;
                var v = citem.getAttribute('value');
                if (val.indexOf(v) >= 0) {
                    citem.setAttribute('active', '');
                }
                else {
                    citem.removeAttribute('active');
                }
            });
        };
        VSelector.prototype.bindEvent = function () {
            var _this = this;
            var _a = this.opt, multiple = _a.multiple, value = _a.value;
            var val = multiple && !value ? [] : !multiple && !value ? '' : value;
            this.el.onclick = function (e) {
                var target = e.target;
                var value = target.getAttribute('value');
                if (typeof val !== 'string' && multiple) {
                    var index = val.indexOf(value);
                    index >= 0 ? val.splice(index, 1) : val.push(value);
                }
                else {
                    val = value;
                }
                _this.opt.value = val;
                _this.renderActive();
            };
        };
        return VSelector;
    }(Utils));
    var default_1$b = /** @class */ (function () {
        function default_1(option) {
            return new VSelector(option);
        }
        return default_1;
    }());

    var meeting = "v-meeting";
    var css$5 = {
    	meeting: meeting,
    	"meeting-date": "v-meeting-date",
    	"meeting-head": "v-meeting-head",
    	"meeting-head-suffix": "v-meeting-head-suffix",
    	"meeting-title": "v-meeting-title",
    	"meeting-banner": "v-meeting-banner",
    	"meeting-legend": "v-meeting-legend",
    	"meeting-content": "v-meeting-content",
    	"meeting-table": "v-meeting-table",
    	"meeting-table-title": "v-meeting-table-title",
    	"meeting-table-head": "v-meeting-table-head",
    	"meeting-table-core": "v-meeting-table-core",
    	"meeting-table-content": "v-meeting-table-content",
    	"meeting-table-scroll": "v-meeting-table-scroll",
    	"meeting-item": "v-meeting-item",
    	"meeting-table-prefix": "v-meeting-table-prefix"
    };

    function tpl$4(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['meeting']], [true]), false, true)+pug.attr("style", pug.style(`height:${t.height}px;`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['meeting-head']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['meeting-title']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = t.title) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['meeting-head-suffix']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cbutton action=\"prevWeek\"\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '上周') ? "" : pug_interp)) + "\u003C\u002Fbutton\u003E";
    pug_html = pug_html + "\u003Cbutton action=\"thisWeek\"\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '本周') ? "" : pug_interp)) + "\u003C\u002Fbutton\u003E";
    pug_html = pug_html + "\u003Cbutton action=\"nextWeek\"\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '下周') ? "" : pug_interp)) + "\u003C\u002Fbutton\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['meeting-banner']], [true]), false, true)) + "\u003E";
    // iterate t.opt.status
    ;(function(){
      var $$obj = t.opt.status;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['meeting-legend']], [true]), false, true)+pug.attr("style", pug.style(`color:${item.color};`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cspan\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item.name) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['meeting-legend']], [true]), false, true)+pug.attr("style", pug.style(`color:${item.color};`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cspan\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item.name) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['meeting-content']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['meeting-table']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['meeting-table-head']], [true]), false, true)+pug.attr("style", pug.style(`width:${t.width}px`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Ctable" + (pug.attr("class", pug.classes([css['meeting-table-core']], [true]), false, true)+pug.attr("style", pug.style(`width:${t.width}px`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Ccolgroup\u003E";
    // iterate t.opt.widths
    ;(function(){
      var $$obj = t.opt.widths;
      if ('number' == typeof $$obj.length) {
          for (var pug_index1 = 0, $$l = $$obj.length; pug_index1 < $$l; pug_index1++) {
            var item = $$obj[pug_index1];
    pug_html = pug_html + "\u003Ccol" + (pug.attr("width", `${item}px`, true, true)) + "\u003E";
          }
      } else {
        var $$l = 0;
        for (var pug_index1 in $$obj) {
          $$l++;
          var item = $$obj[pug_index1];
    pug_html = pug_html + "\u003Ccol" + (pug.attr("width", `${item}px`, true, true)) + "\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fcolgroup\u003E";
    pug_html = pug_html + "\u003Ctr\u003E";
    pug_html = pug_html + "\u003Cth rowspan=\"2\"\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['meeting-table-title']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cspan\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '时间') ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    pug_html = pug_html + "\u003Cspan\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '会议室') ? "" : pug_interp)) + "\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003C\u002Fth\u003E";
    // iterate t.dates
    ;(function(){
      var $$obj = t.dates;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cth" + (pug.attr("class", pug.classes([css['meeting-date']], [true]), false, true)+" colspan=\"2\""+pug.attr("value", item.date, true, true)+pug.attr("disabled", item.isPast, true, true)) + "\u003E";
    if (t.today === item.date) {
    pug_html = pug_html + "\u003Cspan today\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '今') ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    }
    else {
    pug_html = pug_html + "\u003Cspan\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `${item.name}`) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    }
    pug_html = pug_html + "\u003Cspan\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `(${item.week})`) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E\u003C\u002Fth\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cth" + (pug.attr("class", pug.classes([css['meeting-date']], [true]), false, true)+" colspan=\"2\""+pug.attr("value", item.date, true, true)+pug.attr("disabled", item.isPast, true, true)) + "\u003E";
    if (t.today === item.date) {
    pug_html = pug_html + "\u003Cspan today\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '今') ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    }
    else {
    pug_html = pug_html + "\u003Cspan\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `${item.name}`) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    }
    pug_html = pug_html + "\u003Cspan\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = `(${item.week})`) ? "" : pug_interp)) + "\u003C\u002Fspan\u003E\u003C\u002Fth\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Ftr\u003E";
    pug_html = pug_html + "\u003Ctr\u003E";
    // iterate t.dates
    ;(function(){
      var $$obj = t.dates;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cth" + (pug.attr("value", item.date, true, true)+pug.attr("disabled", item.isPast, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '上午') ? "" : pug_interp)) + "\u003C\u002Fth\u003E";
    pug_html = pug_html + "\u003Cth" + (pug.attr("value", item.date, true, true)+pug.attr("disabled", item.isPast, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '下午') ? "" : pug_interp)) + "\u003C\u002Fth\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cth" + (pug.attr("value", item.date, true, true)+pug.attr("disabled", item.isPast, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '上午') ? "" : pug_interp)) + "\u003C\u002Fth\u003E";
    pug_html = pug_html + "\u003Cth" + (pug.attr("value", item.date, true, true)+pug.attr("disabled", item.isPast, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '下午') ? "" : pug_interp)) + "\u003C\u002Fth\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Ftr\u003E\u003C\u002Ftable\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['meeting-table-prefix']], [true]), false, true)+pug.attr("style", pug.style(`width:${t.opt.widths[0]}px;`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['meeting-table']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['meeting-table-head']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Ctable" + (pug.attr("class", pug.classes([css['meeting-table-core']], [true]), false, true)+pug.attr("style", pug.style(`width:${t.opt.widths[0]}px;`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Ctr\u003E";
    pug_html = pug_html + "\u003Cth\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['meeting-table-title']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cspan\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '时间') ? "" : pug_interp)) + "\u003C\u002Fspan\u003E";
    pug_html = pug_html + "\u003Cspan\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '会议室') ? "" : pug_interp)) + "\u003C\u002Fspan\u003E\u003C\u002Fdiv\u003E\u003C\u002Fth\u003E\u003C\u002Ftr\u003E\u003C\u002Ftable\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['meeting-table-content']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Ctable" + (pug.attr("class", pug.classes([css['meeting-table-core']], [true]), false, true)) + "\u003E";
    // iterate t.opt.rooms
    ;(function(){
      var $$obj = t.opt.rooms;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Ctr\u003E";
    pug_html = pug_html + "\u003Cth\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item.name) ? "" : pug_interp)) + "\u003C\u002Fth\u003E\u003C\u002Ftr\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Ctr\u003E";
    pug_html = pug_html + "\u003Cth\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item.name) ? "" : pug_interp)) + "\u003C\u002Fth\u003E\u003C\u002Ftr\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Ftable\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['meeting-table-content']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['meeting-table-scroll']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Ctable" + (pug.attr("class", pug.classes([css['meeting-table-core']], [true]), false, true)+pug.attr("style", pug.style(`width:${t.width}px`), true, true)) + "\u003E";
    pug_html = pug_html + "\u003Ccolgroup\u003E";
    // iterate t.opt.widths
    ;(function(){
      var $$obj = t.opt.widths;
      if ('number' == typeof $$obj.length) {
          for (var pug_index5 = 0, $$l = $$obj.length; pug_index5 < $$l; pug_index5++) {
            var item = $$obj[pug_index5];
    pug_html = pug_html + "\u003Ccol" + (pug.attr("width", `${item}px`, true, true)) + "\u003E";
          }
      } else {
        var $$l = 0;
        for (var pug_index5 in $$obj) {
          $$l++;
          var item = $$obj[pug_index5];
    pug_html = pug_html + "\u003Ccol" + (pug.attr("width", `${item}px`, true, true)) + "\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fcolgroup\u003E";
    // iterate t.opt.rooms
    ;(function(){
      var $$obj = t.opt.rooms;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var room = $$obj[index];
    pug_html = pug_html + "\u003Ctr\u003E";
    pug_html = pug_html + "\u003Ctd\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = room.name) ? "" : pug_interp)) + "\u003C\u002Ftd\u003E";
    // iterate t.dates
    ;(function(){
      var $$obj = t.dates;
      if ('number' == typeof $$obj.length) {
          for (var idx = 0, $$l = $$obj.length; idx < $$l; idx++) {
            var date = $$obj[idx];
    pug_html = pug_html + "\u003Ctd" + (pug.attr("class", pug.classes([css['meeting-item']], [true]), false, true)+pug.attr("room", room.value, true, true)+pug.attr("date", date.date, true, true)+" time=\"am\""+pug.attr("disabled", date.isPast, true, true)) + "\u003E\u003C\u002Ftd\u003E";
    pug_html = pug_html + "\u003Ctd" + (pug.attr("class", pug.classes([css['meeting-item']], [true]), false, true)+pug.attr("room", room.value, true, true)+pug.attr("date", date.date, true, true)+" time=\"pm\""+pug.attr("disabled", date.isPast, true, true)) + "\u003E\u003C\u002Ftd\u003E";
          }
      } else {
        var $$l = 0;
        for (var idx in $$obj) {
          $$l++;
          var date = $$obj[idx];
    pug_html = pug_html + "\u003Ctd" + (pug.attr("class", pug.classes([css['meeting-item']], [true]), false, true)+pug.attr("room", room.value, true, true)+pug.attr("date", date.date, true, true)+" time=\"am\""+pug.attr("disabled", date.isPast, true, true)) + "\u003E\u003C\u002Ftd\u003E";
    pug_html = pug_html + "\u003Ctd" + (pug.attr("class", pug.classes([css['meeting-item']], [true]), false, true)+pug.attr("room", room.value, true, true)+pug.attr("date", date.date, true, true)+" time=\"pm\""+pug.attr("disabled", date.isPast, true, true)) + "\u003E\u003C\u002Ftd\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Ftr\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var room = $$obj[index];
    pug_html = pug_html + "\u003Ctr\u003E";
    pug_html = pug_html + "\u003Ctd\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = room.name) ? "" : pug_interp)) + "\u003C\u002Ftd\u003E";
    // iterate t.dates
    ;(function(){
      var $$obj = t.dates;
      if ('number' == typeof $$obj.length) {
          for (var idx = 0, $$l = $$obj.length; idx < $$l; idx++) {
            var date = $$obj[idx];
    pug_html = pug_html + "\u003Ctd" + (pug.attr("class", pug.classes([css['meeting-item']], [true]), false, true)+pug.attr("room", room.value, true, true)+pug.attr("date", date.date, true, true)+" time=\"am\""+pug.attr("disabled", date.isPast, true, true)) + "\u003E\u003C\u002Ftd\u003E";
    pug_html = pug_html + "\u003Ctd" + (pug.attr("class", pug.classes([css['meeting-item']], [true]), false, true)+pug.attr("room", room.value, true, true)+pug.attr("date", date.date, true, true)+" time=\"pm\""+pug.attr("disabled", date.isPast, true, true)) + "\u003E\u003C\u002Ftd\u003E";
          }
      } else {
        var $$l = 0;
        for (var idx in $$obj) {
          $$l++;
          var date = $$obj[idx];
    pug_html = pug_html + "\u003Ctd" + (pug.attr("class", pug.classes([css['meeting-item']], [true]), false, true)+pug.attr("room", room.value, true, true)+pug.attr("date", date.date, true, true)+" time=\"am\""+pug.attr("disabled", date.isPast, true, true)) + "\u003E\u003C\u002Ftd\u003E";
    pug_html = pug_html + "\u003Ctd" + (pug.attr("class", pug.classes([css['meeting-item']], [true]), false, true)+pug.attr("room", room.value, true, true)+pug.attr("date", date.date, true, true)+" time=\"pm\""+pug.attr("disabled", date.isPast, true, true)) + "\u003E\u003C\u002Ftd\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Ftr\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Ftable\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VMeeting = /** @class */ (function (_super) {
        __extends(VMeeting, _super);
        function VMeeting(option) {
            var _this = _super.call(this) || this;
            _this.dates = [];
            _this.opt = {
                el: '',
                default: '',
                weekStartsOn: 1,
                status: [{
                        name: '待审核',
                        color: '#FFE1CB',
                        value: '1'
                    }, {
                        name: '已预订',
                        color: '#AEC3E1',
                        value: '2'
                    }, {
                        name: '我的预定',
                        color: '#D1E9FF',
                        value: '3'
                    }, {
                        name: '可预订',
                        color: '#ffff',
                        value: '0'
                    }],
                widths: [140, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50, 50],
                value: [],
                onClick: function () { },
                onChange: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.dft = _this.opt.default ? new Date(_this.opt.default) : new Date();
            _this.today = format(new Date(), 'yyyy/MM/dd');
            _this.width = _this.sumArray(_this.opt.widths);
            _this.mounted();
            return _this;
        }
        VMeeting.prototype.mounted = function () {
            this.generateWeeks();
            this.init();
            this.bindClick();
            this.scrollToday();
            this.renderActive();
            this.bindScroll();
        };
        VMeeting.prototype.render = function (data) {
            this.opt.value = data;
            this.mounted();
        };
        VMeeting.prototype.init = function () {
            var t = this;
            var html = tpl$4({
                t: t,
                css: css$5
            });
            this.el.innerHTML = html;
            this.scroll = this.el.querySelector("." + css$5['meeting-table-scroll']);
            this.head = this.el.querySelector("." + css$5['meeting-table-head']);
            this.prefix = this.el.querySelector("." + css$5['meeting-table-prefix']);
            this.items = this.el.querySelectorAll("." + css$5['meeting-item']);
        };
        VMeeting.prototype.bindScroll = function () {
            var _a = this, scroll = _a.scroll, head = _a.head, prefix = _a.prefix;
            var prefixcontent = prefix.querySelector("." + css$5['meeting-table-content']);
            scroll.onscroll = function () {
                var left = scroll.scrollLeft;
                var top = scroll.scrollTop;
                head.style.transform = "translate3d(" + -left + "px, 0, 0)";
                prefixcontent.style.transform = "translate3d(0, " + -top + "px, 0)";
                if (left > 0) {
                    prefix.setAttribute('fixed', '');
                }
                else {
                    prefix.removeAttribute('fixed');
                }
                if (top > 0) {
                    head.setAttribute('fixed', '');
                }
                else {
                    head.removeAttribute('fixed');
                }
            };
        };
        VMeeting.prototype.generateWeeks = function () {
            var _this = this;
            var _a = this, dft = _a.dft, opt = _a.opt;
            var weekStartsOn = opt.weekStartsOn;
            var today = new Date();
            var start = startOfWeek(dft, { weekStartsOn: weekStartsOn });
            var end = endOfWeek(dft, { weekStartsOn: weekStartsOn });
            var w = {
                'Mo': '一',
                'Tu': '二',
                'We': '三',
                'Th': '四',
                'Fr': '五',
                'Sa': '六',
                'Su': '日',
            };
            this.title = format(dft, 'yyyy年MM月');
            var arr = eachDayOfInterval({
                start: start,
                end: end
            });
            arr.forEach(function (date, i) {
                var isLast = differenceInDays(date, today);
                _this.dates[i] = {
                    date: format(date, 'yyyy/MM/dd'),
                    name: format(date, 'MM-dd'),
                    year: _this.parseNumberToString(date.getFullYear()),
                    month: _this.parseNumberToString(date.getMonth() + 1),
                    day: _this.parseNumberToString(date.getDate()),
                    week: w[format(date, 'EEEEEE')],
                    isPast: isLast < 0,
                    isLast: isLast
                };
            });
        };
        VMeeting.prototype.renderActive = function () {
            var _a = this, items = _a.items, opt = _a.opt;
            var value = opt.value, status = opt.status;
            items.forEach(function (item) {
                var citem = item;
                var room = citem.getAttribute('room');
                var date = citem.getAttribute('date');
                var time = citem.getAttribute('time');
                var index = value.findIndex(function (a) { return a.room === room && a.date === date && a.time === time; });
                if (index >= 0) {
                    var color = void 0;
                    citem.setAttribute('status', value[index].status);
                    var i = status.findIndex(function (a) { return a.value === value[index].status; });
                    color = status[i].color;
                    citem.style.color = color;
                }
            });
        };
        VMeeting.prototype.scrollToday = function () {
            var _this = this;
            var today = this.today;
            var dates = this.el.querySelectorAll("." + css$5['meeting-date']);
            var left = 0;
            dates.forEach(function (date) {
                var cdate = date;
                var value = cdate.getAttribute('value');
                if (value === today) {
                    cdate.setAttribute('today', '');
                    left = cdate.offsetLeft - _this.opt.widths[0];
                }
            });
            this.scroll.scrollLeft = left;
        };
        VMeeting.prototype.bindClick = function () {
            var _this = this;
            this.el.onclick = function (e) {
                var target = e.target;
                var action = target.getAttribute('action');
                var room = target.getAttribute('room');
                var date = target.getAttribute('date');
                var time = target.getAttribute('time');
                var status = target.getAttribute('status');
                var disabled = target.getAttribute('disabled') !== null;
                if (action) {
                    _this[action]();
                }
                if (target.className === css$5['meeting-item']) {
                    _this.opt.onClick({
                        room: room,
                        date: date,
                        time: time,
                        status: status,
                        disabled: disabled
                    });
                }
            };
        };
        VMeeting.prototype.prevWeek = function () {
            this.dft = subWeeks(this.dft, 1);
            this.mounted();
            this.opt.onChange(this.dates);
        };
        VMeeting.prototype.nextWeek = function () {
            this.dft = addWeeks(this.dft, 1);
            this.mounted();
            this.opt.onChange(this.dates);
        };
        VMeeting.prototype.thisWeek = function () {
            this.dft = new Date();
            this.mounted();
            this.opt.onChange(this.dates);
        };
        VMeeting.prototype.sumArray = function (arr) {
            var s = 0;
            arr.forEach(function (v) {
                s += v;
            });
            return s;
        };
        return VMeeting;
    }(Utils));
    var default_1$a = /** @class */ (function () {
        function default_1(option) {
            return new VMeeting(option);
        }
        return default_1;
    }());

    var VCard = /** @class */ (function (_super) {
        __extends(VCard, _super);
        function VCard(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            return _this;
        }
        VCard.prototype.render = function () {
        };
        VCard.prototype.generateData = function () {
        };
        return VCard;
    }(Utils));
    var default_1$9 = /** @class */ (function () {
        function default_1(option) {
            return new VCard(option);
        }
        return default_1;
    }());

    var grid = "v-grid";
    var css$4 = {
    	grid: grid,
    	"grid-space": "v-grid-space",
    	"grid-item": "v-grid-item",
    	"grid-value": "v-grid-value",
    	"grid-label": "v-grid-label"
    };

    function tpl$3(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cul" + (pug.attr("class", pug.classes([css['grid']], [true]), false, true)+pug.attr("wrap", t.opt.wrap, true, true)+pug.attr("line", t.opt.splitLine, true, true)) + "\u003E";
    // iterate t.opt.data
    ;(function(){
      var $$obj = t.opt.data;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cli" + (pug.attr("class", pug.classes([css['grid-item']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['grid-value']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['value']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['grid-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E\u003C\u002Fli\u003E";
    if (index < t.opt.data.length - 1) {
    pug_html = pug_html + "\u003Cli" + (pug.attr("class", pug.classes([css['grid-space']], [true]), false, true)) + "\u003E\u003C\u002Fli\u003E";
    }
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cli" + (pug.attr("class", pug.classes([css['grid-item']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['grid-value']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['value']]) ? "" : pug_interp)) + "\u003C\u002Fp\u003E";
    pug_html = pug_html + "\u003Ch2" + (pug.attr("class", pug.classes([css['grid-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fh2\u003E\u003C\u002Fli\u003E";
    if (index < t.opt.data.length - 1) {
    pug_html = pug_html + "\u003Cli" + (pug.attr("class", pug.classes([css['grid-space']], [true]), false, true)) + "\u003E\u003C\u002Fli\u003E";
    }
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Ful\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VGrid = /** @class */ (function (_super) {
        __extends(VGrid, _super);
        function VGrid(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                data: [],
                wrap: false,
                splitLine: true,
                fields: {
                    name: 'name',
                    value: 'value'
                }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            return _this;
        }
        VGrid.prototype.render = function () {
            var t = this;
            var html = tpl$3({
                css: css$4,
                t: t
            });
            this.el.innerHTML = html;
        };
        return VGrid;
    }(Utils));
    var default_1$8 = /** @class */ (function () {
        function default_1(option) {
            return new VGrid(option);
        }
        return default_1;
    }());

    var VNumber = /** @class */ (function (_super) {
        __extends(VNumber, _super);
        function VNumber(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            return _this;
        }
        VNumber.prototype.render = function () {
        };
        VNumber.prototype.generateData = function () {
        };
        return VNumber;
    }(Utils));
    var default_1$7 = /** @class */ (function () {
        function default_1(option) {
            return new VNumber(option);
        }
        return default_1;
    }());

    var VFont = /** @class */ (function (_super) {
        __extends(VFont, _super);
        function VFont(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            return _this;
        }
        VFont.prototype.render = function () {
        };
        VFont.prototype.generateData = function () {
        };
        return VFont;
    }(Utils));
    var default_1$6 = /** @class */ (function () {
        function default_1(option) {
            return new VFont(option);
        }
        return default_1;
    }());

    var VLottie = /** @class */ (function (_super) {
        __extends(VLottie, _super);
        function VLottie(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                size: 500,
                path: ''
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.setStyle();
            _this.render();
            return _this;
        }
        VLottie.prototype.render = function () {
            var path = this.opt.path;
            lottie__default["default"].loadAnimation({
                container: this.el,
                renderer: 'svg',
                loop: true,
                autoplay: true,
                path: path // the path to the animation json
            });
        };
        VLottie.prototype.setStyle = function () {
            var _a = this, el = _a.el, opt = _a.opt;
            var size = opt.size;
            var r = size / rem + "rem";
            el.style.width = r;
            el.style.height = r;
        };
        return VLottie;
    }(Utils));
    var default_1$5 = /** @class */ (function () {
        function default_1(option) {
            return new VLottie(option);
        }
        return default_1;
    }());

    function tpl$2(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['swipemenu']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['swipemenu-wrap']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['swipemenu-prefix']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['swipemenu-content']], [true]), false, true)) + "\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['swipemenu-suffix']], [true]), false, true)) + "\u003E";
    // iterate t.opt.options
    ;(function(){
      var $$obj = t.opt.options;
      if ('number' == typeof $$obj.length) {
          for (var index = 0, $$l = $$obj.length; index < $$l; index++) {
            var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['swipemenu-item']], [true]), false, true)+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E";
          }
      } else {
        var $$l = 0;
        for (var index in $$obj) {
          $$l++;
          var item = $$obj[index];
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['swipemenu-item']], [true]), false, true)+pug.attr("index", index, true, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = item[t.opt.fields['name']]) ? "" : pug_interp)) + "\u003C\u002Fdiv\u003E";
        }
      }
    }).call(this);

    pug_html = pug_html + "\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";}.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var swipemenu = "v-swipemenu";
    var css$3 = {
    	swipemenu: swipemenu,
    	"swipemenu-wrap": "v-swipemenu-wrap",
    	"swipemenu-content": "v-swipemenu-content",
    	"swipemenu-prefix": "v-swipemenu-prefix",
    	"swipemenu-suffix": "v-swipemenu-suffix",
    	"swipemenu-item": "v-swipemenu-item"
    };

    var Swipe = /** @class */ (function () {
        function Swipe(option) {
            this.opt = {};
            this.startX = 0;
            this.startTime = 0;
            this.dis = 0;
            this.isStart = false;
            this.offset = 0;
            this.opt = Object.assign(this.opt, option);
            this.bindEvent();
        }
        Swipe.prototype.bindEvent = function () {
            var el = this.opt.el;
            el.ontouchstart = this.onStart.bind(this);
            el.ontouchmove = this.onMove.bind(this);
            el.ontouchend = this.onEnd.bind(this);
            el.onmousedown = this.onStart.bind(this);
            el.onmousemove = this.onMove.bind(this);
            el.onmouseup = this.onEnd.bind(this);
        };
        Swipe.prototype.onStart = function (e) {
            this.isStart = true;
            var point = e.changedTouches ? e.changedTouches[0] : e;
            this.startX = point.pageX;
            this.opt.el.style.transition = '0s';
        };
        Swipe.prototype.onMove = function (e) {
            if (!this.isStart)
                return;
            var point = e.changedTouches ? e.changedTouches[0] : e;
            this.dis = this.offset + point.pageX - this.startX;
            this.renderStyle();
        };
        Swipe.prototype.onEnd = function (e) {
            this.isStart = false;
            var point = e.changedTouches ? e.changedTouches[0] : e;
            var sp = point.pageX - this.startX;
            var distance = this.opt.distance;
            if (sp === 0) {
                this.onClick(e.target);
                return;
            }
            var space = 0;
            console.log(sp);
            if (sp < -10) {
                space = distance[0];
            }
            this.offset = space;
            this.opt.el.style.transition = '0.3s';
            this.opt.el.style.transform = "translate3d(" + space + "px, 0, 0)";
        };
        Swipe.prototype.renderStyle = function () {
            var _a = this, dis = _a.dis, opt = _a.opt;
            var el = opt.el, distance = opt.distance;
            var disX = dis < distance[0] ? distance[0] : dis > distance[1] ? distance[1] : dis;
            el.style.transform = "translate3d(" + disX + "px, 0, 0)";
        };
        Swipe.prototype.onClick = function (target) {
            var index = parseInt(target.getAttribute('index'));
            this.opt.onClick(index);
        };
        return Swipe;
    }());
    var default_1$4 = /** @class */ (function () {
        function default_1(option) {
            return new Swipe(option);
        }
        return default_1;
    }());

    var VSwipemenu = /** @class */ (function (_super) {
        __extends(VSwipemenu, _super);
        function VSwipemenu(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                options: [{
                        name: '删除'
                    }],
                fields: {
                    name: 'name'
                },
                onClick: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.core = _this.el.cloneNode(true);
            _this.render();
            _this.bindTouchEvent();
            return _this;
        }
        VSwipemenu.prototype.render = function () {
            var t = this;
            var html = tpl$2({
                css: css$3,
                t: t
            });
            var el = this.parseHtmlToDom(html);
            this.el.parentNode.replaceChild(el, this.el);
            this.el = el;
            var content = this.el.querySelector("." + css$3['swipemenu-content']);
            content.appendChild(this.core);
        };
        VSwipemenu.prototype.bindTouchEvent = function () {
            var _this = this;
            var wrap = this.el.querySelector("." + css$3['swipemenu-wrap']);
            var left = wrap.querySelector("." + css$3['swipemenu-prefix']);
            var right = wrap.querySelector("." + css$3['swipemenu-suffix']);
            new default_1$4({
                el: wrap,
                distance: [-right.offsetWidth, left.offsetWidth],
                onClick: function (cb) {
                    var item = _this.opt.options[cb];
                    _this.opt.onClick(item);
                }
            });
        };
        VSwipemenu.prototype.hide = function () {
            var wrap = this.el.querySelector("." + css$3['swipemenu-wrap']);
            wrap.style.transition = '0.3s';
            wrap.style.transform = "translate3d(0, 0, 0)";
        };
        return VSwipemenu;
    }(Utils));
    var default_1$3 = /** @class */ (function () {
        function default_1(option) {
            return new VSwipemenu(option);
        }
        return default_1;
    }());

    var infinite = "v-infinite";
    var css$2 = {
    	infinite: infinite,
    	"infinite-item": "v-infinite-item",
    	"infinite-label": "v-infinite-label"
    };

    function tpl$1(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css, t) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['infinite']], [true]), false, true)+pug.attr("status", t.opt.status, true, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['infinite-item']], [true]), false, true)+" name=\"loading\"") + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['infinite-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '加载中') ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['infinite-item']], [true]), false, true)+" name=\"success\"") + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['infinite-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '加载成功') ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['infinite-item']], [true]), false, true)+" name=\"faild\"") + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['infinite-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '加载失败') ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined,"t" in locals_for_with?locals_for_with.t:typeof t!=="undefined"?t:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VInfinite = /** @class */ (function (_super) {
        __extends(VInfinite, _super);
        function VInfinite(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                status: 'loading',
                onLoading: function () { },
                onFaild: function () { },
                onSuccess: function () { }
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            _this.bindObverse();
            return _this;
        }
        VInfinite.prototype.render = function () {
            var t = this;
            var html = tpl$1({
                css: css$2,
                t: t
            });
            var el = this.parseHtmlToDom(html);
            this.infinite = this.el.appendChild(el);
        };
        VInfinite.prototype.bindObverse = function () {
            var _this = this;
            var infinite = this.infinite;
            var io = new IntersectionObserver(function (entries) {
                if (entries[0] && entries[0].isIntersecting) {
                    entries[0].target;
                    _this.infinite.setAttribute('status', 'loading');
                    _this.opt.onLoading(_this.el);
                }
            }, {
                threshold: 0.9
            });
            io.observe(infinite);
        };
        VInfinite.prototype.loadingFaild = function () {
            this.infinite.setAttribute('status', 'faild');
            this.opt.onFaild();
            this.reset();
        };
        VInfinite.prototype.loadingSuccess = function () {
            this.infinite.setAttribute('status', 'success');
            this.opt.onSuccess();
            this.reset();
        };
        VInfinite.prototype.reset = function () {
            var _this = this;
            var sh = this.el.scrollHeight - this.el.offsetHeight;
            var ih = this.infinite.scrollHeight;
            setTimeout(function () {
                _this.el.scrollTop = sh - ih;
            }, 1000);
        };
        return VInfinite;
    }(Utils));
    var default_1$2 = /** @class */ (function () {
        function default_1(option) {
            return new VInfinite(option);
        }
        return default_1;
    }());

    var refresh = "v-refresh";
    var css$1 = {
    	refresh: refresh,
    	"refresh-item": "v-refresh-item"
    };

    function tpl(locals) {var pug_html = "", pug_interp;var pug_debug_filename, pug_debug_line;try {var pug_debug_sources = {};
    ;var locals_for_with = (locals || {});(function (css) {
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['refresh']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cdiv" + (pug.attr("class", pug.classes([css['refresh-item']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + "\u003Cp" + (pug.attr("class", pug.classes([css['refresh-label']], [true]), false, true)) + "\u003E";
    pug_html = pug_html + (pug.escape(null == (pug_interp = '下拉刷新') ? "" : pug_interp)) + "\u003C\u002Fp\u003E\u003C\u002Fdiv\u003E\u003C\u002Fdiv\u003E";
    }.call(this,"css" in locals_for_with?locals_for_with.css:typeof css!=="undefined"?css:undefined));} catch (err) {pug.rethrow(err, pug_debug_filename, pug_debug_line, pug_debug_sources[pug_debug_filename]);}return pug_html;}

    var VRefresh = /** @class */ (function (_super) {
        __extends(VRefresh, _super);
        function VRefresh(option) {
            var _this = _super.call(this) || this;
            _this.isStart = false;
            _this.startY = 0;
            _this.offsetY = 0;
            _this.opt = {
                el: '',
                type: 'month'
            };
            _this.opt = Object.assign(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.render();
            _this.bindEvent();
            return _this;
        }
        VRefresh.prototype.render = function () {
            var t = this;
            var html = tpl({
                t: t,
                css: css$1
            });
            var el = this.parseHtmlToDom(html);
            var first = this.el.firstChild;
            this.indicate = this.el.insertBefore(el, first);
        };
        VRefresh.prototype.onStart = function (e) {
            var point = e.changedTouches ? e.changedTouches[0] : e;
            this.startY = point.pageY;
            this.isStart = true;
        };
        VRefresh.prototype.onMove = function (e) {
            if (!this.isStart)
                return;
            var point = e.changedTouches ? e.changedTouches[0] : e;
            var space = point.pageY - this.startY;
            if (this.scrolltop() === 0 && space > 0 && e.cancelable) {
                e.preventDefault();
            }
            console.log(space);
        };
        VRefresh.prototype.onEnd = function (e) { };
        VRefresh.prototype.scrolltop = function () {
            return this.el.scrollTop;
        };
        VRefresh.prototype.bindEvent = function () {
            var content = this.el.querySelector(".v-section-content");
            content.ontouchstart = this.onStart.bind(this);
            content.ontouchmove = this.onMove.bind(this);
            content.ontouchend = this.onEnd.bind(this);
            content.onmousedown = this.onStart.bind(this);
            content.onmousemove = this.onMove.bind(this);
            content.onmouseup = this.onEnd.bind(this);
        };
        return VRefresh;
    }(Utils));
    var default_1$1 = /** @class */ (function () {
        function default_1(option) {
            return new VRefresh(option);
        }
        return default_1;
    }());

    var VChart = /** @class */ (function (_super) {
        __extends(VChart, _super);
        function VChart(option) {
            var _this = _super.call(this) || this;
            _this.opt = {
                el: '',
                type: 'bar',
                data: [],
                color: ['#5e92f6', '#e86950'],
                axis: {
                    x: 'category',
                    y: 'value'
                },
                options: {
                    barWidth: 15,
                    radius: [8, 8, 0, 0],
                    smooth: true,
                    textStyle: {
                        color: '#333',
                        fontStyle: 'normal',
                        fontWeight: 'normal',
                        fontFamily: 'Microsoft YaHei',
                        fontSize: 14
                    },
                    grid: {
                        top: '10%',
                        left: '10%',
                        bottom: 30,
                        right: 20
                    },
                    x: {
                        name: [''],
                        line: {
                            width: 1,
                            color: '#333',
                            show: true,
                            type: 'solid'
                        },
                        label: {
                            size: 14,
                            color: '#666',
                            rotate: 0,
                            margin: 10,
                            family: 'Microsoft YaHei'
                        },
                        split: {
                            show: false,
                            color: ['#ccc'],
                            width: 1,
                            type: 'solid'
                        }
                    },
                    y: {
                        name: ['值'],
                        line: {
                            width: 0,
                            color: '#333',
                            show: true,
                            type: 'solid'
                        },
                        label: {
                            size: 14,
                            color: '#666',
                            rotate: 0,
                            margin: 10,
                            family: 'Microsoft YaHei'
                        },
                        split: {
                            show: false,
                            color: ['#ccc'],
                            width: 1,
                            type: 'solid'
                        }
                    }
                }
            };
            _this.opt = _this.extend(_this.opt, option);
            _this.el = typeof _this.opt.el === 'string' ? document.querySelector(_this.opt.el) : _this.opt.el;
            _this.mounted();
            return _this;
        }
        VChart.prototype.mounted = function () {
            var _this = this;
            var io = new IntersectionObserver(function (entries) {
                if (entries[0] && entries[0].isIntersecting) {
                    var target = entries[0].target;
                    _this.render(target);
                    io.unobserve(_this.el);
                }
            }, {
                threshold: 0.8
            });
            io.observe(this.el);
        };
        VChart.prototype.render = function (el) {
            this.chart = echarts__namespace.init(el);
            this.chart.setOption(this.generateOptions());
        };
        VChart.prototype.generateOptions = function () {
            var _a = this.opt, color = _a.color, type = _a.type;
            var _b = this.opt.options, grid = _b.grid, textStyle = _b.textStyle;
            var hasAxis = type === 'line' || type === 'bar';
            var options = {
                legend: {
                    data: this.computedLegend()
                },
                series: this.computedSeries(),
                grid: __assign({}, grid),
                textStyle: textStyle,
                color: color
            };
            if (hasAxis) {
                options['xAxis'] = this.computedXAxis();
                options['yAxis'] = this.computedYAxis();
            }
            return options;
        };
        VChart.prototype.computedLegend = function () {
            var _a = this.opt, data = _a.data, type = _a.type;
            var legend = type === 'pie' ? data[0].value.map(function (a) { return a.name; }) : data.map(function (a) { return a.name; });
            return legend;
        };
        VChart.prototype.computedSeries = function () {
            var _this = this;
            var series = [];
            this.opt.data.forEach(function (d) {
                var item = {};
                var type = d.type ? d.type : _this.opt.type;
                item['name'] = d.name;
                item['type'] = type;
                if (type === 'bar') {
                    item['barWidth'] = _this.opt.options.barWidth;
                    item['stack'] = d.stack;
                }
                if (type === 'line') {
                    item['smooth'] = _this.opt.options.smooth;
                }
                item['yAxisIndex'] = d.y;
                if (type === 'pie') {
                    item['data'] = d.value;
                }
                else {
                    item['data'] = d.value.map(function (a) { return a.value; });
                }
                item['itemStyle'] = _this.computedItemStyle(d, type);
                series.push(item);
            });
            return series;
        };
        VChart.prototype.computedItemStyle = function (d, type) {
            var options = {};
            var radius = 'radius' in d ? d.radius : this.opt.options.radius;
            if (type === 'bar') {
                options['borderRadius'] = radius;
            }
            return options;
        };
        VChart.prototype.computedAxisItem = function (c, t) {
            var options = [];
            var label = c.label;
            var line = c.line;
            var split = c.split;
            var item = __assign(__assign({ type: this.opt.axis[t], data: this.computedAxis() }, this.computedAxisStyle()), { axisLabel: {
                    fontSize: label.size,
                    color: label.color,
                    rotate: label.rotate,
                    interval: false,
                    margin: label.margin,
                    fontFamily: label.family
                }, axisLine: {
                    show: line.show,
                    lineStyle: {
                        color: line.color,
                        width: line.width,
                        type: line.type
                    }
                }, splitLine: {
                    show: split.show,
                    lineStyle: {
                        color: split.color,
                        width: split.width,
                        type: split.type
                    }
                } });
            c.name.forEach(function (n) {
                options.push(__assign(__assign({}, item), { name: n }));
            });
            return options;
        };
        VChart.prototype.computedXAxis = function () {
            var x = this.opt.options.x;
            return this.computedAxisItem(x, 'x');
        };
        VChart.prototype.computedYAxis = function () {
            var y = this.opt.options.y;
            return this.computedAxisItem(y, 'y');
        };
        VChart.prototype.computedAxis = function () {
            var data = this.opt.data;
            var names = data[0].value.map(function (a) { return a.name; });
            return names;
        };
        /**
         * 坐标轴样式
         * @returns
         */
        VChart.prototype.computedAxisStyle = function () {
            var options = {
                show: true,
                axisTick: {
                    show: false
                },
                splitLine: {
                    show: false
                },
                boundaryGap: true
            };
            return options;
        };
        return VChart;
    }(Utils));
    var default_1 = /** @class */ (function () {
        function default_1(option) {
            return new VChart(option);
        }
        return default_1;
    }());

    var Common = /** @class */ (function (_super) {
        __extends(Common, _super);
        function Common() {
            var _this = _super.call(this) || this;
            _this.version = version;
            _this.desctiption = description;
            _this.chart = default_1;
            _this.refresh = default_1$1;
            _this.infinite = default_1$2;
            _this.swipemenu = default_1$3;
            _this.image = default_1$1a;
            _this.lottie = default_1$5;
            _this.icon = default_1$1m;
            _this.button = new default_1$1u();
            _this.font = default_1$6;
            _this.number = default_1$7;
            _this.grid = default_1$8;
            _this.card = default_1$9;
            _this.meeting = default_1$a;
            _this.selector = default_1$b;
            _this.progress = default_1$c;
            _this.noticebar = default_1$15;
            _this.loading = default_1$d;
            _this.clickverify = default_1$e;
            _this.popmenu = default_1$g;
            _this.footerbar = default_1$f;
            _this.datetime = default_1$h;
            _this.sharesheet = default_1$i;
            _this.imagepreview = default_1$j;
            _this.dropdown = default_1$k;
            _this.pickerview = default_1$z;
            _this.datepicker = default_1$l;
            _this.prompt = default_1$m;
            _this.pagination = default_1$n;
            _this.numberinput = default_1$o;
            _this.timeline = default_1$p;
            _this.step = default_1$q;
            _this.field = default_1$r;
            _this.gongge = default_1$s;
            _this.classification = default_1$$;
            _this.sliderverify = default_1$t;
            _this.contextmenu = default_1$u;
            _this.select = default_1$v;
            _this.actionselect = default_1$w;
            _this.space = default_1$x;
            _this.transition = default_1$C;
            _this.picker = default_1$y;
            _this.scroll = default_1$A;
            _this.pickercolumn = default_1$B;
            _this.paragraph = default_1$D;
            _this.checkboxgroup = default_1$E;
            _this.cellgroup = default_1$F;
            _this.title = default_1$G;
            _this.listitem = default_1$H;
            _this.keyboard = default_1$I;
            _this.uploader = default_1$J;
            _this.tabbar = default_1$L;
            _this.tabbaritem = default_1$K;
            _this.tree = default_1$M;
            _this.panel = default_1$N;
            _this.text = default_1$O;
            _this.row = default_1$Q;
            _this.col = default_1$P;
            _this.actionsheet = default_1$1i;
            _this.badge = default_1$1h;
            _this.cell = default_1$1g;
            _this.collapse = default_1$1f;
            _this.collapseitem = default_1$1e;
            _this.dialog = default_1$1d;
            _this.form = default_1$1c;
            _this.formitem = default_1$1b;
            _this.indexbar = default_1$19;
            _this.input = default_1$18;
            _this.list = default_1$17;
            _this.navbar = default_1$16;
            _this.calendar = default_1$1t;
            _this.toast = default_1$Y;
            _this.tag = default_1$R;
            _this.tab = default_1$S;
            _this.switch = default_1$T;
            _this.swiper = default_1$U;
            _this.notify = default_1$14;
            _this.page = default_1$13;
            _this.popover = default_1$12;
            _this.rate = default_1$11;
            _this.search = default_1$_;
            _this.slider = default_1$Z;
            _this.stepper = default_1$X;
            _this.sticky = default_1$10;
            _this.drawer = default_1$1q;
            _this.mask = default_1$1s;
            _this.date = default_1$1p;
            _this.cascader = default_1$1o;
            _this.address = default_1$1n;
            _this.radiogroup = default_1$1k;
            _this.radio = default_1$1l;
            _this.checkbox = default_1$1j;
            return _this;
        }
        return Common;
    }(Utils));
    var web = new Common();

    return web;

}));
